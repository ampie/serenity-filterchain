[
  {
    "line": 4,
    "elements": [
      {
        "line": 21,
        "name": "Income and expenses within the allowed ranges",
        "description": "",
        "id": "enter-income-and-expenses;income-and-expenses-within-the-allowed-ranges",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11421848460,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 208659759,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI3Y2Q0ZjI1Ni0xMzE3LTQ2MDgtOTkyZS0zNWRmYzY0ZWM5YzQiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvYXRtcy93ZWJTZXJ2aWNlL2F0bWh0cDAxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvc2VydmljZV93aXAvMi9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfd2l0aGluX3RoZV9hbGxvd2VkX3Jhbmdlcy8uKkdhdmluIgogICAgICB9CiAgICB9LAogICAgImJvZHlQYXR0ZXJucyIgOiBbIHsKICAgICAgImNvbnRhaW5zIiA6ICJHRVRDQVJEUyIKICAgIH0gXQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgImJvZHkiIDogIjxTT0FQLUVOVjpFbnZlbG9wZSB4bWxuczpzb2FwPVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIlxuICAgICAgICAgICAgICAgICAgIHhtbG5zOlNPQVAtRU5WPVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIj5cbiAgPFNPQVAtRU5WOkJvZHk+XG4gICAgPEFUTUhUUDAxT3BlcmF0aW9uUmVzcG9uc2UgeG1sbnM9XCJodHRwOi8vd3d3LkFUTUhUUDAxLkFUTVJFUDAxLlJlc3BvbnNlLmNvbVwiPlxuICAgICAgPHJwMDFfcmVjPlxuICAgICAgICA8cnAwMV9mdW5jPkdFVENBUkRTPC9ycDAxX2Z1bmM+XG4gICAgICAgIDxycDAxX3VzZXJpZD48L3JwMDFfdXNlcmlkPlxuICAgICAgICA8cnAwMV9pYnQ+MDwvcnAwMV9pYnQ+XG4gICAgICAgIDxycDAxX2JwaWQ+NTMxNDExNDY0PC9ycDAxX2JwaWQ+XG4gICAgICAgIDxycDAxX2NhcmRudW0+MDwvcnAwMV9jYXJkbnVtPlxuICAgICAgICA8cnAwMV9hY2N0bnVtPjA8L3JwMDFfYWNjdG51bT5cbiAgICAgICAgPHJwMDFfY2hnX2xpbT4wLjAwPC9ycDAxX2NoZ19saW0+XG4gICAgICAgIDxycDAxX2NoZ19ub2NhcmQ+PC9ycDAxX2NoZ19ub2NhcmQ+XG4gICAgICAgIDxycDAxX2NoZ19hdG0+PC9ycDAxX2NoZ19hdG0+XG4gICAgICAgIDxycDAxX2NoZ19wb3M+PC9ycDAxX2NoZ19wb3M+XG4gICAgICAgIDxycDAxX2NoZ19mb3JlaWduPjwvcnAwMV9jaGdfZm9yZWlnbj5cbiAgICAgICAgPHJwMDFfY2hnX2FueV90cmFuPjwvcnAwMV9jaGdfYW55X3RyYW4+XG4gICAgICAgIDxycDAxX2NoZ19ob3RjYXJkPjwvcnAwMV9jaGdfaG90Y2FyZD5cbiAgICAgICAgPHJwMDFfY2hnX2Nwc3RhdD48L3JwMDFfY2hnX2Nwc3RhdD5cbiAgICAgICAgPHJwMDFfY2hnX3RudHRhdD48L3JwMDFfY2hnX3RudHRhdD5cbiAgICAgICAgPHJwMDFfcmV0X2Vycm9yPjA8L3JwMDFfcmV0X2Vycm9yPlxuICAgICAgICA8cnAwMV9jYXJkX3JlY29yZD5cbiAgICAgICAgICA8cnAwMV9jYXJkX251bT41MTIwNTUwMzA2NDExNTUyPC9ycDAxX2NhcmRfbnVtPlxuICAgICAgICAgIDxycDAxX25vY2FyZD48L3JwMDFfbm9jYXJkPlxuICAgICAgICAgIDxycDAxX2F0bT48L3JwMDFfYXRtPlxuICAgICAgICAgIDxycDAxX3Bvcz48L3JwMDFfcG9zPlxuICAgICAgICAgIDxycDAxX2ZvcmVpZ24+PC9ycDAxX2ZvcmVpZ24+XG4gICAgICAgICAgPHJwMDFfYW55X3RyYW4+PC9ycDAxX2FueV90cmFuPlxuICAgICAgICAgIDxycDAxX2hvdGNhcmQ+TjwvcnAwMV9ob3RjYXJkPlxuICAgICAgICAgIDxycDAxX2Nwc3RhdD48L3JwMDFfY3BzdGF0PlxuICAgICAgICAgIDxycDAxX3RudHRhdD48L3JwMDFfdG50dGF0PlxuICAgICAgICAgIDxycDAxX2RseV93ZHJsaW0+MTAwMC4wMDwvcnAwMV9kbHlfd2RybGltPlxuICAgICAgICAgIDxycDAxX2RseV93ZHJ1c2Q+MC4wMDwvcnAwMV9kbHlfd2RydXNkPlxuICAgICAgICAgIDxycDAxX210aF93ZHJsaW0+MzEwMDAuMDA8L3JwMDFfbXRoX3dkcmxpbT5cbiAgICAgICAgICA8cnAwMV9tdGhfd2RydXNkPjAuMDA8L3JwMDFfbXRoX3dkcnVzZD5cbiAgICAgICAgICA8cnAwMV9kYXRfbGFzdHdkcj4xOTAwLTAxLTAxPC9ycDAxX2RhdF9sYXN0d2RyPlxuICAgICAgICAgIDxycDAxX210aF9lYXBsaW0+MC4wMDwvcnAwMV9tdGhfZWFwbGltPlxuICAgICAgICAgIDxycDAxX210aF9lYXB1c2Q+MC4wMDwvcnAwMV9tdGhfZWFwdXNkPlxuICAgICAgICAgIDxycDAxX2RhdF9sYXN0cG10PjE5MDAtMDEtMDE8L3JwMDFfZGF0X2xhc3RwbXQ+XG4gICAgICAgICAgPHJwMDFfZXJyX2NhcmQ+MDwvcnAwMV9lcnJfY2FyZD5cbiAgICAgICAgICA8cnAwMV9wcm9kX251bT5CQUNBMTE8L3JwMDFfcHJvZF9udW0+XG4gICAgICAgICAgPHJwMDFfYmxvY2tfY29kZT5QSDwvcnAwMV9ibG9ja19jb2RlPlxuICAgICAgICAgIDxycDAxX2Jsb2NrX2RhdGU+MjAxNjA4MTA8L3JwMDFfYmxvY2tfZGF0ZT5cbiAgICAgICAgICA8cnAwMV9pc3N1ZV9kYXRlPjIwMTYwMzE2PC9ycDAxX2lzc3VlX2RhdGU+XG4gICAgICAgIDwvcnAwMV9jYXJkX3JlY29yZD5cbiAgICAgICAgPHJwMDFfY2FyZF9yZWNvcmQ+XG4gICAgICAgICAgPHJwMDFfY2FyZF9udW0+NTEyMDU1MDMwNjQxMjIwNDwvcnAwMV9jYXJkX251bT5cbiAgICAgICAgICA8cnAwMV9ub2NhcmQ+PC9ycDAxX25vY2FyZD5cbiAgICAgICAgICA8cnAwMV9hdG0+PC9ycDAxX2F0bT5cbiAgICAgICAgICA8cnAwMV9wb3M+PC9ycDAxX3Bvcz5cbiAgICAgICAgICA8cnAwMV9mb3JlaWduPjwvcnAwMV9mb3JlaWduPlxuICAgICAgICAgIDxycDAxX2FueV90cmFuPjwvcnAwMV9hbnlfdHJhbj5cbiAgICAgICAgICA8cnAwMV9ob3RjYXJkPk48L3JwMDFfaG90Y2FyZD5cbiAgICAgICAgICA8cnAwMV9jcHN0YXQ+PC9ycDAxX2Nwc3RhdD5cbiAgICAgICAgICA8cnAwMV90bnR0YXQ+PC9ycDAxX3RudHRhdD5cbiAgICAgICAgICA8cnAwMV9kbHlfd2RybGltPjEwMDAwLjAwPC9ycDAxX2RseV93ZHJsaW0+XG4gICAgICAgICAgPHJwMDFfZGx5X3dkcnVzZD4wLjAwPC9ycDAxX2RseV93ZHJ1c2Q+XG4gICAgICAgICAgPHJwMDFfbXRoX3dkcmxpbT4yMDAwMC4wMDwvcnAwMV9tdGhfd2RybGltPlxuICAgICAgICAgIDxycDAxX210aF93ZHJ1c2Q+MC4wMDwvcnAwMV9tdGhfd2RydXNkPlxuICAgICAgICAgIDxycDAxX2RhdF9sYXN0d2RyPjE5MDAtMDEtMDE8L3JwMDFfZGF0X2xhc3R3ZHI+XG4gICAgICAgICAgPHJwMDFfbXRoX2VhcGxpbT4yMDAuMDA8L3JwMDFfbXRoX2VhcGxpbT5cbiAgICAgICAgICA8cnAwMV9tdGhfZWFwdXNkPjAuMDA8L3JwMDFfbXRoX2VhcHVzZD5cbiAgICAgICAgICA8cnAwMV9kYXRfbGFzdHBtdD4xOTAwLTAxLTAxPC9ycDAxX2RhdF9sYXN0cG10PlxuICAgICAgICAgIDxycDAxX2Vycl9jYXJkPjA8L3JwMDFfZXJyX2NhcmQ+XG4gICAgICAgICAgPHJwMDFfcHJvZF9udW0+QkFDQTExPC9ycDAxX3Byb2RfbnVtPlxuICAgICAgICAgIDxycDAxX2Jsb2NrX2NvZGU+UEg8L3JwMDFfYmxvY2tfY29kZT5cbiAgICAgICAgICA8cnAwMV9ibG9ja19kYXRlPjIwMTYwODExPC9ycDAxX2Jsb2NrX2RhdGU+XG4gICAgICAgICAgPHJwMDFfaXNzdWVfZGF0ZT4yMDE2MDMxNjwvcnAwMV9pc3N1ZV9kYXRlPlxuICAgICAgICA8L3JwMDFfY2FyZF9yZWNvcmQ+XG4gICAgICA8L3JwMDFfcmVjPlxuICAgIDwvQVRNSFRQMDFPcGVyYXRpb25SZXNwb25zZT5cbiAgPC9TT0FQLUVOVjpCb2R5PlxuPC9TT0FQLUVOVjpFbnZlbG9wZT4iLAogICAgImhlYWRlcnMiIDogewogICAgICAiQ29udGVudC1UeXBlIiA6ICJ0ZXh0L3htbCIKICAgIH0KICB9LAogICJ1dWlkIiA6ICI3Y2Q0ZjI1Ni0xMzE3LTQ2MDgtOTkyZS0zNWRmYzY0ZWM5YzQiLAogICJwcmlvcml0eSIgOiA3Mwp9IF0\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 138138853,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.atm_index.api.endpoint\" to return the file \"../../../get_cards.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.atm_index.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../../../get_cards.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI1YWJlMWE5NC01NjY2LTQwYzAtOGVkOC1hMjFlYTljOWViZjIiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy92MS8uKiIsCiAgICAibWV0aG9kIiA6ICJQVVQiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvc2VydmljZV93aXAvMi9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfd2l0aGluX3RoZV9hbGxvd2VkX3Jhbmdlcy8uKkdhdmluIgogICAgICB9CiAgICB9CiAgfSwKICAicmVzcG9uc2UiIDogewogICAgInN0YXR1cyIgOiAyMDAsCiAgICAiYm9keSIgOiAie1xuICBcIkxpbWl0X2RldGFpbHNcIjoge1xuICAgIFwiTGltaXRfc3RhdHVzXCI6IFwiRFwiLFxuICAgIFwiTGltaXRfYW1vdW50XCI6IDEyMzQ1LFxuICAgIFwiTGltaXRfQ2xpZW50X0V4cGVuc2VzXCI6IDQzMjEsXG4gICAgXCJMaW1pdF9DbGllbnRfR3Jvc3NfSW5jb21lXCI6IDIxMzFcbiAgfVxufSIsCiAgICAiaGVhZGVycyIgOiB7CiAgICAgICJDb250ZW50LVR5cGUiIDogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgfSwKICAidXVpZCIgOiAiNWFiZTFhOTQtNTY2Ni00MGMwLThlZDgtYTIxZWE5YzllYmYyIiwKICAicHJpb3JpdHkiIDogNzMKfSBd",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 23172053,
                      "status": "passed"
                    },
                    "name": "a PUT to \"card.cli.api.endpoint\" to return the file \"../update_limits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a PUT to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../update_limits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI2ZGMwNGE2ZS1jNDA2LTQyNDctOWQwMS1mZmYwOTdmMjBhMTEiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvc2Evc2VydmljZXMvdGVjaG5pY2FsL2ludGVncmF0aW9uL2ludGVncmF0aW9uL3BzX2dpX3NlY3VyaXR5bWFuYWdlbWVudHYxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvc2VydmljZV93aXAvMi9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfd2l0aGluX3RoZV9hbGxvd2VkX3Jhbmdlcy8uKkdhdmluIgogICAgICB9CiAgICB9CiAgfSwKICAicmVzcG9uc2UiIDogewogICAgInN0YXR1cyIgOiAyMDAsCiAgICAiYm9keSIgOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+XG48c29hcGVudjpFbnZlbG9wZSB4bWxuczpoZWFkPVwiaHR0cDovL3N0YW5kYXJkYmFuay5jby56YS9zYS9zZXJ2aWNlcy9HbG9iYWwvSWZ4VjJfMS9IZWFkZXJWMl8wXCJcbiAgICAgICAgICAgICAgICAgIHhtbG5zOnNvYXBlbnY9XCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VudmVsb3BlL1wiPlxuICA8c29hcGVudjpIZWFkZXIvPlxuICA8c29hcGVudjpCb2R5PlxuICAgIDxiYXNlOkdldElETnVtYmVyUmVzcG9uc2UgeG1sbnM6aGRyPVwiaHR0cDovL3N0YW5kYXJkYmFuay5jby56YS9zYS9zZXJ2aWNlcy9HbG9iYWwvSWZ4VjJfMS9IZWFkZXJWMl8wXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zOmJhc2U9XCJodHRwOi8vc3RhbmRhcmRiYW5rLmNvLnphL3NhL3NlcnZpY2VzL3RlY2huaWNhbC9JbnRlZ3JhdGlvbi9JbnRlZ3JhdGlvbi9QU19HSV9TZWN1cml0eU1hbmFnZW1lbnRWMS9CYXNlXCI+XG4gICAgICA8aGVhZDpTdGF0dXM+XG4gICAgICAgIDxoZWFkOlN0YXR1c0NvZGU+MDwvaGVhZDpTdGF0dXNDb2RlPlxuICAgICAgICA8aGVhZDpTZXZlcml0eT5JbmZvPC9oZWFkOlNldmVyaXR5PlxuICAgICAgICA8aGVhZDpTdGF0dXNEZXNjPllPVVIgUkVRVUVTVCBXQVMgU1VDQ0VTU0ZVTExZIFBST0NFU1NFRDwvaGVhZDpTdGF0dXNEZXNjPlxuICAgICAgPC9oZWFkOlN0YXR1cz5cbiAgICAgIDxoZWFkOlJxVUlEPjYzYWY5ZGRkLWVlZDAtNGU2NC1iODcyLTU2NTg4MjBjZjkzZjwvaGVhZDpScVVJRD5cbiAgICAgIDxoZWFkOk1zZ1JzSGRyPlxuICAgICAgICA8aGVhZDpDb250ZXh0UnNIZHI+XG4gICAgICAgICAgPGhlYWQ6U2VydmVyRHQ+MjAxNi0xMS0xNlQwOToxMjo1NCswMjowMDwvaGVhZDpTZXJ2ZXJEdD5cbiAgICAgICAgICA8aGVhZDpCdXNpbmVzc1Njb3BlWFNCPkdJPC9oZWFkOkJ1c2luZXNzU2NvcGVYU0I+XG4gICAgICAgICAgPGhlYWQ6Q29udGVudFR5cGVYU0I+VEVYVC9YTUw8L2hlYWQ6Q29udGVudFR5cGVYU0I+XG4gICAgICAgICAgPGhlYWQ6SW50ZWdyYXRpb25TZXJ2ZXJYU0I+ZXNiZHBzMDE8L2hlYWQ6SW50ZWdyYXRpb25TZXJ2ZXJYU0I+XG4gICAgICAgICAgPGhlYWQ6TXNnR3JvdXBSZWZlcmVuY2VYU0I+MjExZDBmOTQtZjg2NC00MmZhLWE2NmItZGRmOWRiNjU5NjYwPC9oZWFkOk1zZ0dyb3VwUmVmZXJlbmNlWFNCPlxuICAgICAgICA8L2hlYWQ6Q29udGV4dFJzSGRyPlxuICAgICAgPC9oZWFkOk1zZ1JzSGRyPlxuICAgICAgPGJhc2U6SUROdW1iZXJSZXNwb25zZUluZm8+XG4gICAgICAgIDxiYXNlOlZlcnNpb25EYXRhPlxuICAgICAgICAgIDxiYXNlOlRyYW5jb2RlPlZFVEY8L2Jhc2U6VHJhbmNvZGU+XG4gICAgICAgICAgPGJhc2U6VmVyc2lvbj4wMDAwMDU8L2Jhc2U6VmVyc2lvbj5cbiAgICAgICAgICA8YmFzZTpUb2tlbj4xMjcuMC4wLjFHPC9iYXNlOlRva2VuPlxuICAgICAgICAgIDxiYXNlOkNhcmRubz4wMDUxMjA1NTAzMDY0MTIyMDQ8L2Jhc2U6Q2FyZG5vPlxuICAgICAgICAgIDxiYXNlOkNoYW5uZWxJZD5NQVBQPC9iYXNlOkNoYW5uZWxJZD5cbiAgICAgICAgICA8YmFzZTpVc2VySWQ+MDAyNjwvYmFzZTpVc2VySWQ+XG4gICAgICAgICAgPGJhc2U6VXNlcklidD40NTg2PC9iYXNlOlVzZXJJYnQ+XG4gICAgICAgICAgPGJhc2U6UmVzcG9uc2VDb2RlPjAwMDA8L2Jhc2U6UmVzcG9uc2VDb2RlPlxuICAgICAgICA8L2Jhc2U6VmVyc2lvbkRhdGE+XG4gICAgICAgIDxiYXNlOklETnVtYmVyPjgwMDcwODcyODMwODg8L2Jhc2U6SUROdW1iZXI+XG4gICAgICAgIDxiYXNlOkJQSUQ+NTMxNDExNDY0PC9iYXNlOkJQSUQ+XG4gICAgICAgIDxiYXNlOkNvbXBhbnlJRC8+XG4gICAgICAgIDxiYXNlOlBhc3Nwb3J0Ti8+XG4gICAgICAgIDxiYXNlOlByaW1hcnlBY2NvdW50MT41MTIwNTUwMzA2NDEyMjA0PC9iYXNlOlByaW1hcnlBY2NvdW50MT5cbiAgICAgICAgPGJhc2U6UHJpbWFyeUFjY291bnQyPjAwMDAwMDAwMDAwMDAwMDA8L2Jhc2U6UHJpbWFyeUFjY291bnQyPlxuICAgICAgICA8YmFzZTpUYXhOLz5cbiAgICAgIDwvYmFzZTpJRE51bWJlclJlc3BvbnNlSW5mbz5cbiAgICA8L2Jhc2U6R2V0SUROdW1iZXJSZXNwb25zZT5cbiAgPC9zb2FwZW52OkJvZHk+XG48L3NvYXBlbnY6RW52ZWxvcGU+IiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIkNvbnRlbnQtVHlwZSIgOiAidGV4dC94bWwiCiAgICB9CiAgfSwKICAidXVpZCIgOiAiNmRjMDRhNmUtYzQwNi00MjQ3LTlkMDEtZmZmMDk3ZjIwYTExIiwKICAicHJpb3JpdHkiIDogNzMKfSBd",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 15008156,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.sbsa.securitymanagement.endpointUrl\" to return the file \"../../../get_id_number.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.sbsa.securitymanagement.endpointUrl\""
                        },
                        {
                          "val": "return the file \"../../../get_id_number.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 22,
            "name": "that Gavin has selected to apply for a credit limit increase",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.theUserHasSelectedToApplyForACreditLimitIncrease()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 42786318,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 36280637,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICJkYzJiMDcxNy1kMTBkLTQ0YWItOTNiZS1iYThjODlkMDRiZjQiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy9wcmVsaW1pdHMvdjEvLioiLAogICAgIm1ldGhvZCIgOiAiR0VUIiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiA6IHsKICAgICAgICAibWF0Y2hlcyIgOiAiMTcyLjk5LjAuNS84MDgwL3NlcnZpY2Vfd2lwLzIvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9JbmNvbWVfYW5kX2V4cGVuc2VzX3dpdGhpbl90aGVfYWxsb3dlZF9yYW5nZXMvLipHYXZpbiIKICAgICAgfQogICAgfQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgImJvZHkiIDogIntcIlByZUxpbWl0X2RldGFpbHNcIjoge1xuICBcIlByZUxpbWl0X1ByaW1hcnlfQ2FyZF9OdW1iZXJcIjogXCI1MTIwNTUwMzA2NDEyMjA0XCIsXG4gIFwiUHJlTGltaXRfQmFsYW5jZVwiOiBcIjI1LjcwXCIsXG4gIFwiUHJlTGltaXRfQ3VycmVudF9DcmVkaXRfTGltaXRcIjogXCIxMDAwMDBcIixcbiAgXCJQcmVMaW1pdF9Fc3RpbWF0ZWRfR3Jvc3NfSW5jb21lXCI6IFwiMTAwMDAwXCIsXG4gIFwiUHJlTGltaXRfQnVyZWF1X0NvbW1cIjogNDU2LFxuICBcIlByZUxpbWl0X0VzdGltYXRlZF9FeHBlbnNlc1wiOiBcIjYwMDAwXCIsXG4gIFwiUHJlTGltaXRfRXN0aW1hdGVkX1N1cnBsdXNcIjogXCI0NS44N1wiLFxuICBcIlByZUxpbWl0X0VzdGltYXRlZF9BZmZfTGltaXRcIjogXCIzMDAwLjg4XCIsXG4gIFwiUHJlTGltaXRfTWF4X1Jpc2tfTGltaXRfSW5jcmVhc2VcIjogXCI1MDAwMFwiLFxuICBcIlByZUxpbWl0X01vbnRobHlfU2VydmljZV9GZWVcIjogXCIyMy4yM1wiLFxuICBcIlByZUxpbWl0X0VmZl9JbnRlcmVzdF9SYXRlXCI6IFwiMTguNDVcIixcbiAgXCJQcmVMaW1pdF9JbnN1cmFuY2VfT25fQWNjb3VudFwiOiBcIllFU1wiLFxuICBcIlByZUxpbWl0X0luc3VyYW5jZV9Nb250aGx5X0ZlZVwiOiBcIjQ1LjQ1XCIsXG4gIFwiUHJlTGltaXRfSW5zdXJhbmNlX1JhdGVcIjogXCIyMy41NFwiLFxuICBcIlByZUxpbWl0X0xlYWRfRXhwaXJ5XCI6IDIwMTcwMzE1LFxuICBcIlByZUxpbWl0X1BEXCI6IFwiMy43OFwiLFxuICBcIlByZUxpbWl0X0FmZm9yZGFiaWxpdHlfRmFjdG9yXCI6IFwiNC44N1wiXG59fSIsCiAgICAiaGVhZGVycyIgOiB7CiAgICAgICJDb250ZW50LVR5cGUiIDogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgfSwKICAidXVpZCIgOiAiZGMyYjA3MTctZDEwZC00NGFiLTkzYmUtYmE4Yzg5ZDA0YmY0IiwKICAicHJpb3JpdHkiIDogNzMKfSBd",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 27163995,
                      "status": "passed"
                    },
                    "name": "a GET to \"card.cli.api.endpoint\" to merge the template \"../prelimits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a GET to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "merge the template \"../prelimits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "Then for requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then for requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 23,
            "name": "the bank estimates his income to be R100000 and his expenses R60000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 37
                },
                {
                  "val": "60000",
                  "offset": 62
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.theBankEstimatesIncomeToBeRAndHisExpensesR(int,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1401323433,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 1064078616,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgInNjb3BlUGF0aCIgOiAiMTcyLjk5LjAuNS84MDgwL3NlcnZpY2Vfd2lwLzIvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9JbmNvbWVfYW5kX2V4cGVuc2VzX3dpdGhpbl90aGVfYWxsb3dlZF9yYW5nZXMvR2F2aW4iLAogICJzdGVwIiA6ICJXaGVuX0dhdmluX2F0dGVtcHRzX3RvL3NlbmRfYV9QT1NUX3JlcXVlc3RfdG9fX2NyZWRpdC1jYXJkLWxpbWl0c19wcmVBcHByb3ZlQ3JlZGl0TGltaXRJbmNyZWFzZV93aXRoX2JvZHlfX19vYnJjX1xuX19fa2V5VmFsdWVNZXRhZGF0YV9fX19fb2JyX19fY2JyX19jb21tYV9cbl9fX3N0ZXBVcF9fX19udWxsX2NvbW1hX1xuX19fc3lzdGVtUHJpbmNpcGFsSWRlbnRpZmllcl9fX19fb2JyY19cbl9fX19fYmFua2luZ1RlcnJpdG9yeUtleV9fX19udWxsX2NvbW1hX1xuX19fX19sb2NhbGVfX19fbnVsbF9jb21tYV9cbl9fX19fc3lzdGVtUHJpbmNpcGFsSWRfX19fXzQ2ODYyOF9fY29tbWFfXG5fX19fX3N5c3RlbVByaW5jaXBhbEtleV9fX19udWxsXG5fX19jYnJjX19jb21tYV9cbl9fX2NhcmRfX19fX29icmNfXG5fX19fX2FjdGl2ZV9fX19udWxsX2NvbW1hX1xuX19fX19jYXJkSW1hZ2VVcmxfX19fbnVsbF9jb21tYV9cbl9fX19fY291bnRyeUNvZGVfX19fbnVsbF9jb21tYV9cbl9fX19fZGVzY3JpcHRpb25fX19fbnVsbF9jb21tYV9cbl9fX19faGVscE51bWJlcl9fX19udWxsX2NvbW1hX1xuX19fX19pbnRlcm5hdGlvbmFsVHJhdmVsRW5hYmxlZF9fX19udWxsX2NvbW1hX1xuX19fX19saW1pdE1hbmFnZW1lbnRFbmFibGVkX19fX251bGxfY29tbWFfXG5fX19fX251bWJlcl9fX19fNTEyMDU1MDMwNjQxMjIwNF9fY29tbWFfXG5fX19fX3N0b3BDYXJkRW5hYmxlZF9fX19udWxsX2NvbW1hX1xuX19fX190eXBlX19fX251bGxfY29tbWFfXG5fX19fX3ZpZXdQaW5FbmFibGVkX19fX251bGxcbl9fX2NicmNfX2NvbW1hX1xuX19fZ3Jvc3NNb250aGx5SW5jb21lX19fX19vYnJjX1xuX19fX19hbW91bnRfX19fMTA0MDAwX2NvbW1hX1xuX19fX19jdXJyZW5jeV9fX19fUl9cbl9fX2NicmNfX2NvbW1hX1xuX19fdG90YWxNb250aGx5RXhwZW5zZXNfX19fX29icmNfXG5fX19fX2Ftb3VudF9fX181ODAwMF9jb21tYV9cbl9fX19fY3VycmVuY3lfX19fX1JfXG5fX19jYnJjX1xuX2NicmNfXyIsCiAgInJlcXVlc3QiIDogewogICAgImJhc2U2NEJvZHkiIDogImV3b2dJQ0pyWlhsV1lXeDFaVTFsZEdGa1lYUmhJaUE2SUZzZ1hTd0tJQ0FpYzNSbGNGVndJaUE2SUc1MWJHd3NDaUFnSW5ONWMzUmxiVkJ5YVc1amFYQmhiRWxrWlc1MGFXWnBaWElpSURvZ2V3b2dJQ0FnSW1KaGJtdHBibWRVWlhKeWFYUnZjbmxMWlhraUlEb2diblZzYkN3S0lDQWdJQ0pzYjJOaGJHVWlJRG9nYm5Wc2JDd0tJQ0FnSUNKemVYTjBaVzFRY21sdVkybHdZV3hKWkNJZ09pQWlORFk0TmpJNElpd0tJQ0FnSUNKemVYTjBaVzFRY21sdVkybHdZV3hMWlhraUlEb2diblZzYkFvZ0lIMHNDaUFnSW1OaGNtUWlJRG9nZXdvZ0lDQWdJbUZqZEdsMlpTSWdPaUJ1ZFd4c0xBb2dJQ0FnSW1OaGNtUkpiV0ZuWlZWeWJDSWdPaUJ1ZFd4c0xBb2dJQ0FnSW1OdmRXNTBjbmxEYjJSbElpQTZJRzUxYkd3c0NpQWdJQ0FpWkdWelkzSnBjSFJwYjI0aUlEb2diblZzYkN3S0lDQWdJQ0pvWld4d1RuVnRZbVZ5SWlBNklHNTFiR3dzQ2lBZ0lDQWlhVzUwWlhKdVlYUnBiMjVoYkZSeVlYWmxiRVZ1WVdKc1pXUWlJRG9nYm5Wc2JDd0tJQ0FnSUNKc2FXMXBkRTFoYm1GblpXMWxiblJGYm1GaWJHVmtJaUE2SUc1MWJHd3NDaUFnSUNBaWJuVnRZbVZ5SWlBNklDSTFNVEl3TlRVd016QTJOREV5TWpBMElpd0tJQ0FnSUNKemRHOXdRMkZ5WkVWdVlXSnNaV1FpSURvZ2JuVnNiQ3dLSUNBZ0lDSjBlWEJsSWlBNklHNTFiR3dzQ2lBZ0lDQWlkbWxsZDFCcGJrVnVZV0pzWldRaUlEb2diblZzYkFvZ0lIMHNDaUFnSW1keWIzTnpUVzl1ZEdoc2VVbHVZMjl0WlNJZ09pQjdDaUFnSUNBaVlXMXZkVzUwSWlBNklERXdOREF3TUN3S0lDQWdJQ0pqZFhKeVpXNWplU0lnT2lBaVVpSUtJQ0I5TEFvZ0lDSjBiM1JoYkUxdmJuUm9iSGxGZUhCbGJuTmxjeUlnT2lCN0NpQWdJQ0FpWVcxdmRXNTBJaUE2SURVNE1EQXdMQW9nSUNBZ0ltTjFjbkpsYm1ONUlpQTZJQ0pTSWdvZ0lIMEtmUT09IiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIkFjY2VwdCIgOiAiKi8qIiwKICAgICAgIkNvbm5lY3Rpb24iIDogImtlZXAtYWxpdmUiLAogICAgICAiVXNlci1BZ2VudCIgOiAiQXBhY2hlLUh0dHBDbGllbnQvNC4zLjYgKGphdmEgMS41KSIsCiAgICAgICJIb3N0IiA6ICIxNzIuOTkuMC41OjgwODAiLAogICAgICAiQWNjZXB0LUVuY29kaW5nIiA6ICJnemlwLGRlZmxhdGUiLAogICAgICAieC1zYmctc2VxdWVuY2UtbnVtYmVyIiA6ICIxIiwKICAgICAgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiA6IFsgIjE3Mi45OS4wLjUvODA4MC9zZXJ2aWNlX3dpcC8yL0NyZWRpdExpbWl0SW5jcmVhc2VzL0VudGVyX0luY29tZV9hbmRfRXhwZW5zZXMvSW5jb21lX2FuZF9leHBlbnNlc193aXRoaW5fdGhlX2FsbG93ZWRfcmFuZ2VzL0dhdmluIiwgIjE3Mi45OS4wLjUvODA4MC9zZXJ2aWNlX3dpcC8yL0NyZWRpdExpbWl0SW5jcmVhc2VzL0VudGVyX0luY29tZV9hbmRfRXhwZW5zZXMvSW5jb21lX2FuZF9leHBlbnNlc193aXRoaW5fdGhlX2FsbG93ZWRfcmFuZ2VzL0dhdmluIiBdLAogICAgICAieC1vcmlnaW5hbC11cmwiIDogImh0dHA6Ly8xNzIuOTkuMC4zOjgwODAvQ2FyZHMvcmVzdC9jcmVkaXQtY2FyZC1saW1pdHMvcHJlQXBwcm92ZUNyZWRpdExpbWl0SW5jcmVhc2UiLAogICAgICAieC5zZXJ2aWNlLmludm9jYXRpb24uY291bnRzIiA6ICJodHRwOlBPU1Q6Ly8xNzIuOTkuMC4zOjgwODAvQ2FyZHMvcmVzdC9jcmVkaXQtY2FyZC1saW1pdHMvcHJlQXBwcm92ZUNyZWRpdExpbWl0SW5jcmVhc2V8MSIsCiAgICAgICJhdXRvbWF0aW9uLnByb3h5LnVubWFwcGVkLmVuZHBvaW50cyIgOiAidHJ1ZSIsCiAgICAgICJDb250ZW50LUxlbmd0aCIgOiAiNjk3IiwKICAgICAgIngtc2JnLXRva2VuIiA6ICJhWE56ZFdWZmRHbHRaVDBpTWpBeE55MHdPQzB3TjFReE1qb3hNVG95TlNJTkNtbHpjM1ZsY2owaVF6MVRRU3dnVTFROVIyRjFkR1Z1Wnl3Z1REMUtiMmhoYm01bGMySjFjbWNzSUU4OVUzUmhibVJoY21SaVlXNXJMQ0JQVlQxVGIyeDFkR2x2YmlCRVpXeHBkbVZ5ZVN3Z1EwNDlSR0YwWVhCdmQyVnlWRzlyWlc1VFpYSjJaWEl1YzNSaGJtUmhjbVJpWVc1ckxtTnZMbnBoSWcwS2JtOTBYMkZtZEdWeVBTSXlNREUzTFRBNExUQTNWREV5T2pFMk9qSTFJZzBLYm05MFgySmxabTl5WlQwaU1qQXhOeTB3T0Mwd04xUXhNam94TURveU5TSU5DblZ6WlhKcFpEMGlaMkYyYVc0dWRHVnpkR2x1WjBCemFYUXhMbU52YlNJTkNuVnVhWEYxWlVsdVpHVnVkR2xtYVdWeVBTSTJOamRtWVRSbFppMWpPV1pqTFRRMk0yRXRPV1ExTVMxbU9XTTFNalpqWlRWa1pEY2lEUXB6YVdkdVlYUjFjbVU5SW0xMmFtMXNXVmRTYW5GT1NFMXZhV3BTUjNVNVptWlZTVFExVGxnNGRDOXNNbmRNYmxWdFdYaEtaWGt4VjNSV1NYUjBOVEozWXk5R09GbG5NVXQzYmtGeWMwUkRUM1paUXprcmVXbE5aVTk1VERGTlEzVXJWU3RpYWpKNlowbzNUbEp0YVZWd1NWQkpZV3RWWm1oblpXeEJkRUZUVGxwRFJIRnNlR1ZuYmk5clNHWnljbFJ6VW1wWGQyVndPSEk1WVRoRFRURkZabmhFTnpaMU1UTkNURlJXUlZWYU5IYzRLMUJvWmtST05WRmxZMDEzWVVwUVpFRTJWemxMY0ROa05VdE5VbU5wU3pOWVUwVldSM3BrVG1aUFdEbE1ja3QzUlVGc1RVbHhia3RYUkc4MFJ6WTRiMk54Y2toS2R6WlBTeXN5VkRWbmNUbHFVQzltVkU5MGRUSXlhbVp6TUZOQ05URnZTMnBWYlROMFJXSnZSbXN3WTNCWFVqVXlPVzFWUWxOT1dWWnlMMVl3VWpGMmEyY3pOR3BaVUVjeWQwZGphbmw2ZFhNME5rUTJWbGxyU1c1R1ZuSlFWRWxXZDBKS1VTOURlV2hqVVQwOUlnPT0iLAogICAgICAiQ29udGVudC1UeXBlIiA6ICJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04IgogICAgfSwKICAgICJkYXRlIiA6IDE1MDIxMDc4ODcyMzcsCiAgICAibWV0aG9kIiA6ICJQT1NUIiwKICAgICJyZXF1ZXN0ZWRVcmwiIDogIi9DYXJkcy9yZXN0L2NyZWRpdC1jYXJkLWxpbWl0cy9wcmVBcHByb3ZlQ3JlZGl0TGltaXRJbmNyZWFzZSIsCiAgICAic2VxdWVuY2VOdW1iZXIiIDogMSwKICAgICJjb29raWVzIiA6IHsgfSwKICAgICJjbGllbnRJcCIgOiAiMTcyLjk5LjAuMSIsCiAgICAiYWJzb2x1dGVVcmwiIDogImh0dHA6Ly8xNzIuOTkuMC41OjgwODAvQ2FyZHMvcmVzdC9jcmVkaXQtY2FyZC1saW1pdHMvcHJlQXBwcm92ZUNyZWRpdExpbWl0SW5jcmVhc2UiLAogICAgInVybCIgOiAiL0NhcmRzL3Jlc3QvY3JlZGl0LWNhcmQtbGltaXRzL3ByZUFwcHJvdmVDcmVkaXRMaW1pdEluY3JlYXNlIiwKICAgICJhbGxIZWFkZXJLZXlzIiA6IFsgIkFjY2VwdCIsICJDb25uZWN0aW9uIiwgIlVzZXItQWdlbnQiLCAiSG9zdCIsICJBY2NlcHQtRW5jb2RpbmciLCAieC1zYmctc2VxdWVuY2UtbnVtYmVyIiwgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiwgIngtb3JpZ2luYWwtdXJsIiwgInguc2VydmljZS5pbnZvY2F0aW9uLmNvdW50cyIsICJhdXRvbWF0aW9uLnByb3h5LnVubWFwcGVkLmVuZHBvaW50cyIsICJDb250ZW50LUxlbmd0aCIsICJ4LXNiZy10b2tlbiIsICJDb250ZW50LVR5cGUiIF0KICB9LAogICJyZXNwb25zZSIgOiB7CiAgICAiYmFzZTY0Qm9keSIgOiAiZXdvZ0lDSnJaWGxXWVd4MVpVMWxkR0ZrWVhSaElpQTZJRnNnWFN3S0lDQWljM1JsY0ZWd0lpQTZJRzUxYkd3c0NpQWdJbU5oY21RaUlEb2dld29nSUNBZ0ltRmpkR2wyWlNJZ09pQnVkV3hzTEFvZ0lDQWdJbU5oY21SSmJXRm5aVlZ5YkNJZ09pQWlhSFIwY0hNNkx5OXpkR0Z1WkdGeVpHSmhibXN1WTI4dWVtRXZhVzFoWjJWekwxTkNSMDF2WW1sc1pVRndjQzlEWVhKa0wyTmhjbVJwYldGblpTODFNVEl3UWlVeU1HSnNkV1ZpWldGdUxXSnNkV1V0WTNKbFpHbDBZMkZ5WkMxdFlYTjBaWEpqWVhKa0xXTnZjSGt0TWk1d2JtY2lMQW9nSUNBZ0ltTnZkVzUwY25sRGIyUmxJaUE2SUc1MWJHd3NDaUFnSUNBaVpHVnpZM0pwY0hScGIyNGlJRG9nSWtKc2RXVkNaV0Z1SUVOc1lYTnphV01nUTJGeVpDSXNDaUFnSUNBaWFHVnNjRTUxYldKbGNpSWdPaUFpTURnMk1DQXhNakVnTVRNeElpd0tJQ0FnSUNKcGJuUmxjbTVoZEdsdmJtRnNWSEpoZG1Wc1JXNWhZbXhsWkNJZ09pQjBjblZsTEFvZ0lDQWdJbXhwYldsMFRXRnVZV2RsYldWdWRFVnVZV0pzWldRaUlEb2dkSEoxWlN3S0lDQWdJQ0p1ZFcxaVpYSWlJRG9nSWpVeE1qQTFOVEF6TURZME1USXlNRFFpTEFvZ0lDQWdJbk4wYjNCRFlYSmtSVzVoWW14bFpDSWdPaUIwY25WbExBb2dJQ0FnSW5SNWNHVWlJRG9nSWtOeVpXUnBkQ0JEWVhKa0lpd0tJQ0FnSUNKMmFXVjNVR2x1Ulc1aFlteGxaQ0lnT2lCMGNuVmxMQW9nSUNBZ0ltSnNkV1ZDWldGdUlpQTZJSFJ5ZFdVS0lDQjlMQW9nSUNKamNtVmthWFJEWVhKa1RHbHRhWFJKYm1OeVpXRnpaVk4wWVhSMWN5SWdPaUFpUVZCUVVrOVdSU0lzQ2lBZ0ltMWhlR2x0ZFcxUWNtVkJjSEJ5YjNabFpFTnlaV1JwZEV4cGJXbDBJaUE2SUhzS0lDQWdJQ0poYlc5MWJuUWlJRG9nTVRVd01EQXdMQW9nSUNBZ0ltTjFjbkpsYm1ONUlpQTZJQ0pTSWdvZ0lIMHNDaUFnSW0xcGJtbHRkVzFRY21WQmNIQnliM1psWkVOeVpXUnBkRXhwYldsMElpQTZJSHNLSUNBZ0lDSmhiVzkxYm5RaUlEb2dNVEF4TURBd0xBb2dJQ0FnSW1OMWNuSmxibU41SWlBNklDSlNJZ29nSUgwS2ZRPT0iLAogICAgImhlYWRlcnMiIDogewogICAgICAiU2VydmVyIiA6ICJBcGFjaGUtQ295b3RlLzEuMSIsCiAgICAgICJMYXN0LU1vZGlmaWVkIiA6ICJNb24sIDA3IEF1ZyAyMDE3IDEyOjExOjI3IEdNVCIsCiAgICAgICJ4LXNiZy1yZXNwb25zZS10eXBlIiA6ICJTVUNDRVNTIiwKICAgICAgIngtc2JnLXJlc3BvbnNlLW1lc3NhZ2UiIDogIiIsCiAgICAgICJ4LXNiZy1yZXNwb25zZS1jb2RlIiA6ICIwMDAwIiwKICAgICAgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiA6ICIxNzIuOTkuMC41LzgwODAvc2VydmljZV93aXAvMi9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfd2l0aGluX3RoZV9hbGxvd2VkX3Jhbmdlcy9HYXZpbiIsCiAgICAgICJ4LXNiZy10b2tlbiIgOiAiYVhOemRXVmZkR2x0WlQwaU1qQXhOeTB3T0Mwd04xUXhNam94TVRveU5TSU5DbWx6YzNWbGNqMGlRejFUUVN3Z1UxUTlSMkYxZEdWdVp5d2dURDFLYjJoaGJtNWxjMkoxY21jc0lFODlVM1JoYm1SaGNtUmlZVzVyTENCUFZUMVRiMngxZEdsdmJpQkVaV3hwZG1WeWVTd2dRMDQ5UkdGMFlYQnZkMlZ5Vkc5clpXNVRaWEoyWlhJdWMzUmhibVJoY21SaVlXNXJMbU52TG5waElnMEtibTkwWDJGbWRHVnlQU0l5TURFM0xUQTRMVEEzVkRFeU9qRTJPakkxSWcwS2JtOTBYMkpsWm05eVpUMGlNakF4Tnkwd09DMHdOMVF4TWpveE1Eb3lOU0lOQ25WelpYSnBaRDBpWjJGMmFXNHVkR1Z6ZEdsdVowQnphWFF4TG1OdmJTSU5DblZ1YVhGMVpVbHVaR1Z1ZEdsbWFXVnlQU0kyTmpkbVlUUmxaaTFqT1daakxUUTJNMkV0T1dRMU1TMW1PV00xTWpaalpUVmtaRGNpRFFwemFXZHVZWFIxY21VOUltMTJhbTFzV1ZkU2FuRk9TRTF2YVdwU1IzVTVabVpWU1RRMVRsZzRkQzlzTW5kTWJsVnRXWGhLWlhreFYzUldTWFIwTlRKM1l5OUdPRmxuTVV0M2JrRnljMFJEVDNaWlF6a3JlV2xOWlU5NVRERk5RM1VyVlN0aWFqSjZaMG8zVGxKdGFWVndTVkJKWVd0VlptaG5aV3hCZEVGVFRscERSSEZzZUdWbmJpOXJTR1p5Y2xSelVtcFhkMlZ3T0hJNVlUaERUVEZGWm5oRU56WjFNVE5DVEZSV1JWVmFOSGM0SzFCb1prUk9OVkZsWTAxM1lVcFFaRUUyVnpsTGNETmtOVXROVW1OcFN6TllVMFZXUjNwa1RtWlBXRGxNY2t0M1JVRnNUVWx4Ymt0WFJHODBSelk0YjJOeGNraEtkelpQU3lzeVZEVm5jVGxxVUM5bVZFOTBkVEl5YW1aek1GTkNOVEZ2UzJwVmJUTjBSV0p2Um1zd1kzQlhValV5T1cxVlFsTk9XVlp5TDFZd1VqRjJhMmN6TkdwWlVFY3lkMGRqYW5sNmRYTTBOa1EyVmxsclNXNUdWbkpRVkVsV2QwSktVUzlEZVdoalVUMDlJZz09IiwKICAgICAgInguc2VydmljZS5pbnZvY2F0aW9uLmNvdW50cyIgOiBbICJodHRwOlBPU1Q6Ly8xNzIuOTkuMC4zOjgwODAvQ2FyZHMvcmVzdC9jcmVkaXQtY2FyZC1saW1pdHMvcHJlQXBwcm92ZUNyZWRpdExpbWl0SW5jcmVhc2V8MSIsICJodHRwczovL3JjcTIuc2JpYy5jby56YTozNjUwL2F0bXMvd2ViU2VydmljZS9hdG1odHAwMXwyIiwgImh0dHBzOi8vZXNiZHB1LnN0YW5kYXJkYmFuay5jby56YTo0MjA0L3NhL3NlcnZpY2VzL3RlY2huaWNhbC9pbnRlZ3JhdGlvbi9pbnRlZ3JhdGlvbi9wc19naV9zZWN1cml0eW1hbmFnZW1lbnR2MXwxIiwgImh0dHBzOkdFVDovL2FwaWdzYS5zdGFuZGFyZGJhbmsuY28uemE6NTQ0My9jYXJkL3NpdDEvY2FyZC9saW1pdHMvcHJlbGltaXRzL3YxLzUxMjA1NTAzMDY0MTIyMDR8MSIgXSwKICAgICAgIkNvbnRlbnQtVHlwZSIgOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICJDb250ZW50LUxlbmd0aCIgOiAiNzc4IiwKICAgICAgIkRhdGUiIDogIk1vbiwgMDcgQXVnIDIwMTcgMTI6MTE6MjcgR01UIgogICAgfSwKICAgICJkYXRlIiA6IDE1MDIxMDc4ODc3MjksCiAgICAic3RhdHVzIiA6IDIwMAogIH0sCiAgImR1cmF0aW9uIiA6IDAsCiAgIm5lc3RlZEV4Y2hhbmdlcyIgOiBbIHsKICAgICJzY29wZVBhdGgiIDogIjE3Mi45OS4wLjUvODA4MC9zZXJ2aWNlX3dpcC8yL0NyZWRpdExpbWl0SW5jcmVhc2VzL0VudGVyX0luY29tZV9hbmRfRXhwZW5zZXMvSW5jb21lX2FuZF9leHBlbnNlc193aXRoaW5fdGhlX2FsbG93ZWRfcmFuZ2VzL0dhdmluIiwKICAgICJzdGVwIiA6ICJXaGVuX0dhdmluX2F0dGVtcHRzX3RvL3NlbmRfYV9QT1NUX3JlcXVlc3RfdG9fX2NyZWRpdC1jYXJkLWxpbWl0c19wcmVBcHByb3ZlQ3JlZGl0TGltaXRJbmNyZWFzZV93aXRoX2JvZHlfX19vYnJjX1xuX19fa2V5VmFsdWVNZXRhZGF0YV9fX19fb2JyX19fY2JyX19jb21tYV9cbl9fX3N0ZXBVcF9fX19udWxsX2NvbW1hX1xuX19fc3lzdGVtUHJpbmNpcGFsSWRlbnRpZmllcl9fX19fb2JyY19cbl9fX19fYmFua2luZ1RlcnJpdG9yeUtleV9fX19udWxsX2NvbW1hX1xuX19fX19sb2NhbGVfX19fbnVsbF9jb21tYV9cbl9fX19fc3lzdGVtUHJpbmNpcGFsSWRfX19fXzQ2ODYyOF9fY29tbWFfXG5fX19fX3N5c3RlbVByaW5jaXBhbEtleV9fX19udWxsXG5fX19jYnJjX19jb21tYV9cbl9fX2NhcmRfX19fX29icmNfXG5fX19fX2FjdGl2ZV9fX19udWxsX2NvbW1hX1xuX19fX19jYXJkSW1hZ2VVcmxfX19fbnVsbF9jb21tYV9cbl9fX19fY291bnRyeUNvZGVfX19fbnVsbF9jb21tYV9cbl9fX19fZGVzY3JpcHRpb25fX19fbnVsbF9jb21tYV9cbl9fX19faGVscE51bWJlcl9fX19udWxsX2NvbW1hX1xuX19fX19pbnRlcm5hdGlvbmFsVHJhdmVsRW5hYmxlZF9fX19udWxsX2NvbW1hX1xuX19fX19saW1pdE1hbmFnZW1lbnRFbmFibGVkX19fX251bGxfY29tbWFfXG5fX19fX251bWJlcl9fX19fNTEyMDU1MDMwNjQxMjIwNF9fY29tbWFfXG5fX19fX3N0b3BDYXJkRW5hYmxlZF9fX19udWxsX2NvbW1hX1xuX19fX190eXBlX19fX251bGxfY29tbWFfXG5fX19fX3ZpZXdQaW5FbmFibGVkX19fX251bGxcbl9fX2NicmNfX2NvbW1hX1xuX19fZ3Jvc3NNb250aGx5SW5jb21lX19fX19vYnJjX1xuX19fX19hbW91bnRfX19fMTA0MDAwX2NvbW1hX1xuX19fX19jdXJyZW5jeV9fX19fUl9cbl9fX2NicmNfX2NvbW1hX1xuX19fdG90YWxNb250aGx5RXhwZW5zZXNfX19fX29icmNfXG5fX19fX2Ftb3VudF9fX181ODAwMF9jb21tYV9cbl9fX19fY3VycmVuY3lfX19fX1JfXG5fX19jYnJjX1xuX2NicmNfXyIsCiAgICAicmVxdWVzdCIgOiB7CiAgICAgICJiYXNlNjRCb2R5IiA6ICJQSE52WVhBNlJXNTJaV3h2Y0dVZ2VHMXNibk02YzI5aGNEMGlhSFIwY0RvdkwzTmphR1Z0WVhNdWVHMXNjMjloY0M1dmNtY3ZjMjloY0M5bGJuWmxiRzl3WlM4aVBqeFRUMEZRTFVWT1ZqcElaV0ZrWlhJZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJaTgrUEhOdllYQTZRbTlrZVQ0OGJuTXlPa2RsZEVsRVRuVnRZbVZ5SUhodGJHNXpQU0pvZEhSd09pOHZjM1JoYm1SaGNtUmlZVzVyTG1OdkxucGhMM05oTDNObGNuWnBZMlZ6TDBkc2IySmhiQzlKWm5oV01sOHhMMGhsWVdSbGNsWXlYekFpSUhodGJHNXpPbTV6TWowaWFIUjBjRG92TDNOMFlXNWtZWEprWW1GdWF5NWpieTU2WVM5ellTOXpaWEoyYVdObGN5OTBaV05vYm1sallXd3ZTVzUwWldkeVlYUnBiMjR2U1c1MFpXZHlZWFJwYjI0dlVGTmZSMGxmVTJWamRYSnBkSGxOWVc1aFoyVnRaVzUwVmpFdlFtRnpaU0krUEZKeFZVbEVQbVUwWVRjek5HTmxMVGRsTVRBdE5EUmxOaTFoWm1RNUxXWmhaamcyT1RKaFlUZG1Nand2VW5GVlNVUStQRTF6WjFKeFNHUnlQanhUZG1OSlpHVnVkRDQ4VTNaalVISnZkbWxrWlhKT1lXMWxQa2RsZEZObGNuWnBZMlZVY21WbFBDOVRkbU5RY205MmFXUmxjazVoYldVK1BGTjJZMDVoYldVK1JWTkNQQzlUZG1OT1lXMWxQand2VTNaalNXUmxiblErUEVOdmJuUmxlSFJTY1Voa2NqNDhRMnhwWlc1MFZHVnliV2x1WVd4VFpYRk9kVzArZFc1cmJtOTNiand2UTJ4cFpXNTBWR1Z5YldsdVlXeFRaWEZPZFcwK1BFNWxkSGR2Y210VWNtNUVZWFJoUGp4T1pYUjNiM0pyVDNkdVpYSStRbkpoYm1Ob1UzUmhabVk4TDA1bGRIZHZjbXRQZDI1bGNqNDhUM0pwWjJsdVlYUnZjazVoYldVK1RVTkJMVUpTUVU1RFNEd3ZUM0pwWjJsdVlYUnZjazVoYldVK1BFRmpjWFZwY21WeVNXUmxiblErUXpJME5UWTRNREF4UEM5QlkzRjFhWEpsY2tsa1pXNTBQanhEYjI1MFpXNTBWSGx3WlZoVFFqNVVSVmhVTDFoTlREd3ZRMjl1ZEdWdWRGUjVjR1ZZVTBJK1BFTnNhV1Z1ZEZCeWIyTmxjM05wYm1kTmIyUmxXRk5DUGtFOEwwTnNhV1Z1ZEZCeWIyTmxjM05wYm1kTmIyUmxXRk5DUGp4SmJuUmxjbVpoWTJWT1lXMWxXRk5DUGsxRFFVWThMMGx1ZEdWeVptRmpaVTVoYldWWVUwSStQQzlPWlhSM2IzSnJWSEp1UkdGMFlUNDhRMnhwWlc1MFJIUStNakF4Tnkwd09DMHdOMVF4TkRveE1Ub3lOeXN3TWpvd01Ed3ZRMnhwWlc1MFJIUStQRU5zYVdWdWRFRndjRDQ4VDNKblBsQkNRbE5CUEM5UGNtYytQRTVoYldVK01EUXpQQzlPWVcxbFBqeFdaWEp6YVc5dVBqQXdNREU4TDFabGNuTnBiMjQrUEZOeVkxTjVjM1JsYlZoVFFqNHdNRE04TDFOeVkxTjVjM1JsYlZoVFFqNDhMME5zYVdWdWRFRndjRDQ4VFhOblIzSnZkWEJTWldabGNtVnVZMlUrT1RWa05tSXdNRE10TkRneE1TMDBOamd3TFRnM056UXRZell4TnpOaFptWTBNV1V3UEM5TmMyZEhjbTkxY0ZKbFptVnlaVzVqWlQ0OEwwTnZiblJsZUhSU2NVaGtjajQ4TDAxeloxSnhTR1J5UGp4dWN6STZTVVJPZFcxaVpYSkpibVp2UGp4dWN6STZWbVZ5YzJsdmJrUmhkR0UrUEc1ek1qcFVjbUZ1WTI5a1pUNVdSVlJHUEM5dWN6STZWSEpoYm1OdlpHVStQRzV6TWpwV1pYSnphVzl1UGpVOEwyNXpNanBXWlhKemFXOXVQanh1Y3pJNlZHOXJaVzQrTVRJM0xqQXVNQzR4UEM5dWN6STZWRzlyWlc0K1BHNXpNanBEWVhKa2JtOCtOVE15TmpVM01qVXdNREF5TkRFNE1Ud3Zibk15T2tOaGNtUnViejQ4Ym5NeU9rTm9ZVzV1Wld4SlpENU5RVkJRUEM5dWN6STZRMmhoYm01bGJFbGtQanh1Y3pJNlZYTmxja2xrUGpBd01qWThMMjV6TWpwVmMyVnlTV1ErUEc1ek1qcFZjMlZ5U1dKMFBqUTFPRFk4TDI1ek1qcFZjMlZ5U1dKMFBqd3Zibk15T2xabGNuTnBiMjVFWVhSaFBqd3Zibk15T2tsRVRuVnRZbVZ5U1c1bWJ6NDhMMjV6TWpwSFpYUkpSRTUxYldKbGNqNDhMM052WVhBNlFtOWtlVDQ4TDNOdllYQTZSVzUyWld4dmNHVSsiLAogICAgICAiaGVhZGVycyIgOiB7CiAgICAgICAgIkFjY2VwdCIgOiAidGV4dC9odG1sLCBpbWFnZS9naWYsIGltYWdlL2pwZWcsICo7IHE9LjIsICovKjsgcT0uMiIsCiAgICAgICAgIlVzZXItQWdlbnQiIDogIkFwYWNoZSBDWEYgMi43LjE0LnJlZGhhdC0xIiwKICAgICAgICAiQ29ubmVjdGlvbiIgOiAia2VlcC1hbGl2ZSIsCiAgICAgICAgIkhvc3QiIDogIjE3Mi45OS4wLjU6ODA4MCIsCiAgICAgICAgIlByYWdtYSIgOiAibm8tY2FjaGUiLAogICAgICAgICJ4LXNiZy1zZXF1ZW5jZS1udW1iZXIiIDogIjEiLAogICAgICAgICJ4LW9yaWdpbmFsLXVybCIgOiAiaHR0cHM6Ly9lc2JkcHUuc3RhbmRhcmRiYW5rLmNvLnphOjQyMDQvc2Evc2VydmljZXMvdGVjaG5pY2FsL2ludGVncmF0aW9uL2ludGVncmF0aW9uL3BzX2dpX3NlY3VyaXR5bWFuYWdlbWVudHYxIiwKICAgICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogIjE3Mi45OS4wLjUvODA4MC9zZXJ2aWNlX3dpcC8yL0NyZWRpdExpbWl0SW5jcmVhc2VzL0VudGVyX0luY29tZV9hbmRfRXhwZW5zZXMvSW5jb21lX2FuZF9leHBlbnNlc193aXRoaW5fdGhlX2FsbG93ZWRfcmFuZ2VzL0dhdmluIiwKICAgICAgICAiQ2FjaGUtQ29udHJvbCIgOiAibm8tY2FjaGUiLAogICAgICAgICJ4LnNlcnZpY2UuaW52b2NhdGlvbi5jb3VudHMiIDogImh0dHA6UE9TVDovLzE3Mi45OS4wLjM6ODA4MC9DYXJkcy9yZXN0L2NyZWRpdC1jYXJkLWxpbWl0cy9wcmVBcHByb3ZlQ3JlZGl0TGltaXRJbmNyZWFzZXwxLGh0dHBzOi8vZXNiZHB1LnN0YW5kYXJkYmFuay5jby56YTo0MjA0L3NhL3NlcnZpY2VzL3RlY2huaWNhbC9pbnRlZ3JhdGlvbi9pbnRlZ3JhdGlvbi9wc19naV9zZWN1cml0eW1hbmFnZW1lbnR2MXwxIiwKICAgICAgICAiYXV0b21hdGlvbi5wcm94eS51bm1hcHBlZC5lbmRwb2ludHMiIDogInRydWUiLAogICAgICAgICJDb250ZW50LUxlbmd0aCIgOiAiMTQ3NiIsCiAgICAgICAgIkNvbnRlbnQtVHlwZSIgOiAidGV4dC94bWw7IGNoYXJzZXQ9VVRGLTgiCiAgICAgIH0sCiAgICAgICJkYXRlIiA6IDE1MDIxMDc4ODc2NTcsCiAgICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgICAicmVxdWVzdGVkVXJsIiA6ICIvc2Evc2VydmljZXMvdGVjaG5pY2FsL2ludGVncmF0aW9uL2ludGVncmF0aW9uL3BzX2dpX3NlY3VyaXR5bWFuYWdlbWVudHYxIiwKICAgICAgInNlcXVlbmNlTnVtYmVyIiA6IDEsCiAgICAgICJjb29raWVzIiA6IHsgfSwKICAgICAgImNsaWVudElwIiA6ICIxNzIuOTkuMC4zIiwKICAgICAgImFic29sdXRlVXJsIiA6ICJodHRwOi8vMTcyLjk5LjAuNTo4MDgwL3NhL3NlcnZpY2VzL3RlY2huaWNhbC9pbnRlZ3JhdGlvbi9pbnRlZ3JhdGlvbi9wc19naV9zZWN1cml0eW1hbmFnZW1lbnR2MSIsCiAgICAgICJ1cmwiIDogIi9zYS9zZXJ2aWNlcy90ZWNobmljYWwvaW50ZWdyYXRpb24vaW50ZWdyYXRpb24vcHNfZ2lfc2VjdXJpdHltYW5hZ2VtZW50djEiLAogICAgICAiYWxsSGVhZGVyS2V5cyIgOiBbICJBY2NlcHQiLCAiVXNlci1BZ2VudCIsICJDb25uZWN0aW9uIiwgIkhvc3QiLCAiUHJhZ21hIiwgIngtc2JnLXNlcXVlbmNlLW51bWJlciIsICJ4LW9yaWdpbmFsLXVybCIsICJ4LXNiZy1tZXNzYWdlVHJhY2VJZCIsICJDYWNoZS1Db250cm9sIiwgInguc2VydmljZS5pbnZvY2F0aW9uLmNvdW50cyIsICJhdXRvbWF0aW9uLnByb3h5LnVubWFwcGVkLmVuZHBvaW50cyIsICJDb250ZW50LUxlbmd0aCIsICJDb250ZW50LVR5cGUiIF0KICAgIH0sCiAgICAicmVzcG9uc2UiIDogewogICAgICAiYmFzZTY0Qm9keSIgOiAiUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaVZWUkdMVGdpUHo0S1BITnZZWEJsYm5ZNlJXNTJaV3h2Y0dVZ2VHMXNibk02YUdWaFpEMGlhSFIwY0RvdkwzTjBZVzVrWVhKa1ltRnVheTVqYnk1NllTOXpZUzl6WlhKMmFXTmxjeTlIYkc5aVlXd3ZTV1o0VmpKZk1TOUlaV0ZrWlhKV01sOHdJZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0Yld4dWN6cHpiMkZ3Wlc1MlBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdWRtVnNiM0JsTHlJK0NpQWdQSE52WVhCbGJuWTZTR1ZoWkdWeUx6NEtJQ0E4YzI5aGNHVnVkanBDYjJSNVBnb2dJQ0FnUEdKaGMyVTZSMlYwU1VST2RXMWlaWEpTWlhOd2IyNXpaU0I0Yld4dWN6cG9aSEk5SW1oMGRIQTZMeTl6ZEdGdVpHRnlaR0poYm1zdVkyOHVlbUV2YzJFdmMyVnlkbWxqWlhNdlIyeHZZbUZzTDBsbWVGWXlYekV2U0dWaFpHVnlWakpmTUNJS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlRzFzYm5NNlltRnpaVDBpYUhSMGNEb3ZMM04wWVc1a1lYSmtZbUZ1YXk1amJ5NTZZUzl6WVM5elpYSjJhV05sY3k5MFpXTm9ibWxqWVd3dlNXNTBaV2R5WVhScGIyNHZTVzUwWldkeVlYUnBiMjR2VUZOZlIwbGZVMlZqZFhKcGRIbE5ZVzVoWjJWdFpXNTBWakV2UW1GelpTSStDaUFnSUNBZ0lEeG9aV0ZrT2xOMFlYUjFjejRLSUNBZ0lDQWdJQ0E4YUdWaFpEcFRkR0YwZFhORGIyUmxQakE4TDJobFlXUTZVM1JoZEhWelEyOWtaVDRLSUNBZ0lDQWdJQ0E4YUdWaFpEcFRaWFpsY21sMGVUNUpibVp2UEM5b1pXRmtPbE5sZG1WeWFYUjVQZ29nSUNBZ0lDQWdJRHhvWldGa09sTjBZWFIxYzBSbGMyTStXVTlWVWlCU1JWRlZSVk5VSUZkQlV5QlRWVU5EUlZOVFJsVk1URmtnVUZKUFEwVlRVMFZFUEM5b1pXRmtPbE4wWVhSMWMwUmxjMk0rQ2lBZ0lDQWdJRHd2YUdWaFpEcFRkR0YwZFhNK0NpQWdJQ0FnSUR4b1pXRmtPbEp4VlVsRVBqWXpZV1k1WkdSa0xXVmxaREF0TkdVMk5DMWlPRGN5TFRVMk5UZzRNakJqWmprelpqd3ZhR1ZoWkRwU2NWVkpSRDRLSUNBZ0lDQWdQR2hsWVdRNlRYTm5Vbk5JWkhJK0NpQWdJQ0FnSUNBZ1BHaGxZV1E2UTI5dWRHVjRkRkp6U0dSeVBnb2dJQ0FnSUNBZ0lDQWdQR2hsWVdRNlUyVnlkbVZ5UkhRK01qQXhOaTB4TVMweE5sUXdPVG94TWpvMU5Dc3dNam93TUR3dmFHVmhaRHBUWlhKMlpYSkVkRDRLSUNBZ0lDQWdJQ0FnSUR4b1pXRmtPa0oxYzJsdVpYTnpVMk52Y0dWWVUwSStSMGs4TDJobFlXUTZRblZ6YVc1bGMzTlRZMjl3WlZoVFFqNEtJQ0FnSUNBZ0lDQWdJRHhvWldGa09rTnZiblJsYm5SVWVYQmxXRk5DUGxSRldGUXZXRTFNUEM5b1pXRmtPa052Ym5SbGJuUlVlWEJsV0ZOQ1Bnb2dJQ0FnSUNBZ0lDQWdQR2hsWVdRNlNXNTBaV2R5WVhScGIyNVRaWEoyWlhKWVUwSStaWE5pWkhCek1ERThMMmhsWVdRNlNXNTBaV2R5WVhScGIyNVRaWEoyWlhKWVUwSStDaUFnSUNBZ0lDQWdJQ0E4YUdWaFpEcE5jMmRIY205MWNGSmxabVZ5Wlc1alpWaFRRajR5TVRGa01HWTVOQzFtT0RZMExUUXlabUV0WVRZMllpMWtaR1k1WkdJMk5UazJOakE4TDJobFlXUTZUWE5uUjNKdmRYQlNaV1psY21WdVkyVllVMEkrQ2lBZ0lDQWdJQ0FnUEM5b1pXRmtPa052Ym5SbGVIUlNjMGhrY2o0S0lDQWdJQ0FnUEM5b1pXRmtPazF6WjFKelNHUnlQZ29nSUNBZ0lDQThZbUZ6WlRwSlJFNTFiV0psY2xKbGMzQnZibk5sU1c1bWJ6NEtJQ0FnSUNBZ0lDQThZbUZ6WlRwV1pYSnphVzl1UkdGMFlUNEtJQ0FnSUNBZ0lDQWdJRHhpWVhObE9sUnlZVzVqYjJSbFBsWkZWRVk4TDJKaGMyVTZWSEpoYm1OdlpHVStDaUFnSUNBZ0lDQWdJQ0E4WW1GelpUcFdaWEp6YVc5dVBqQXdNREF3TlR3dlltRnpaVHBXWlhKemFXOXVQZ29nSUNBZ0lDQWdJQ0FnUEdKaGMyVTZWRzlyWlc0K01USTNMakF1TUM0eFJ6d3ZZbUZ6WlRwVWIydGxiajRLSUNBZ0lDQWdJQ0FnSUR4aVlYTmxPa05oY21SdWJ6NHdNRFV4TWpBMU5UQXpNRFkwTVRJeU1EUThMMkpoYzJVNlEyRnlaRzV2UGdvZ0lDQWdJQ0FnSUNBZ1BHSmhjMlU2UTJoaGJtNWxiRWxrUGsxQlVGQThMMkpoYzJVNlEyaGhibTVsYkVsa1Bnb2dJQ0FnSUNBZ0lDQWdQR0poYzJVNlZYTmxja2xrUGpBd01qWThMMkpoYzJVNlZYTmxja2xrUGdvZ0lDQWdJQ0FnSUNBZ1BHSmhjMlU2VlhObGNrbGlkRDQwTlRnMlBDOWlZWE5sT2xWelpYSkpZblErQ2lBZ0lDQWdJQ0FnSUNBOFltRnpaVHBTWlhOd2IyNXpaVU52WkdVK01EQXdNRHd2WW1GelpUcFNaWE53YjI1elpVTnZaR1UrQ2lBZ0lDQWdJQ0FnUEM5aVlYTmxPbFpsY25OcGIyNUVZWFJoUGdvZ0lDQWdJQ0FnSUR4aVlYTmxPa2xFVG5WdFltVnlQamd3TURjd09EY3lPRE13T0RnOEwySmhjMlU2U1VST2RXMWlaWEkrQ2lBZ0lDQWdJQ0FnUEdKaGMyVTZRbEJKUkQ0MU16RTBNVEUwTmpROEwySmhjMlU2UWxCSlJENEtJQ0FnSUNBZ0lDQThZbUZ6WlRwRGIyMXdZVzU1U1VRdlBnb2dJQ0FnSUNBZ0lEeGlZWE5sT2xCaGMzTndiM0owVGk4K0NpQWdJQ0FnSUNBZ1BHSmhjMlU2VUhKcGJXRnllVUZqWTI5MWJuUXhQalV4TWpBMU5UQXpNRFkwTVRJeU1EUThMMkpoYzJVNlVISnBiV0Z5ZVVGalkyOTFiblF4UGdvZ0lDQWdJQ0FnSUR4aVlYTmxPbEJ5YVcxaGNubEJZMk52ZFc1ME1qNHdNREF3TURBd01EQXdNREF3TURBd1BDOWlZWE5sT2xCeWFXMWhjbmxCWTJOdmRXNTBNajRLSUNBZ0lDQWdJQ0E4WW1GelpUcFVZWGhPTHo0S0lDQWdJQ0FnUEM5aVlYTmxPa2xFVG5WdFltVnlVbVZ6Y0c5dWMyVkpibVp2UGdvZ0lDQWdQQzlpWVhObE9rZGxkRWxFVG5WdFltVnlVbVZ6Y0c5dWMyVStDaUFnUEM5emIyRndaVzUyT2tKdlpIaytDand2YzI5aGNHVnVkanBGYm5abGJHOXdaVDQ9IiwKICAgICAgImhlYWRlcnMiIDogewogICAgICAgICJDb250ZW50LVR5cGUiIDogInRleHQveG1sIgogICAgICB9LAogICAgICAiZGF0ZSIgOiAxNTAyMTA3ODg3NjU3LAogICAgICAic3RhdHVzIiA6IDIwMAogICAgfSwKICAgICJkdXJhdGlvbiIgOiAwLAogICAgIm5lc3RlZEV4Y2hhbmdlcyIgOiBbIF0KICB9LCB7CiAgICAic2NvcGVQYXRoIiA6ICIxNzIuOTkuMC41LzgwODAvc2VydmljZV93aXAvMi9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfd2l0aGluX3RoZV9hbGxvd2VkX3Jhbmdlcy9HYXZpbiIsCiAgICAic3RlcCIgOiAiV2hlbl9HYXZpbl9hdHRlbXB0c190by9zZW5kX2FfUE9TVF9yZXF1ZXN0X3RvX19jcmVkaXQtY2FyZC1saW1pdHNfcHJlQXBwcm92ZUNyZWRpdExpbWl0SW5jcmVhc2Vfd2l0aF9ib2R5X19fb2JyY19cbl9fX2tleVZhbHVlTWV0YWRhdGFfX19fX29icl9fX2Nicl9fY29tbWFfXG5fX19zdGVwVXBfX19fbnVsbF9jb21tYV9cbl9fX3N5c3RlbVByaW5jaXBhbElkZW50aWZpZXJfX19fX29icmNfXG5fX19fX2JhbmtpbmdUZXJyaXRvcnlLZXlfX19fbnVsbF9jb21tYV9cbl9fX19fbG9jYWxlX19fX251bGxfY29tbWFfXG5fX19fX3N5c3RlbVByaW5jaXBhbElkX19fX180Njg2MjhfX2NvbW1hX1xuX19fX19zeXN0ZW1QcmluY2lwYWxLZXlfX19fbnVsbFxuX19fY2JyY19fY29tbWFfXG5fX19jYXJkX19fX19vYnJjX1xuX19fX19hY3RpdmVfX19fbnVsbF9jb21tYV9cbl9fX19fY2FyZEltYWdlVXJsX19fX251bGxfY29tbWFfXG5fX19fX2NvdW50cnlDb2RlX19fX251bGxfY29tbWFfXG5fX19fX2Rlc2NyaXB0aW9uX19fX251bGxfY29tbWFfXG5fX19fX2hlbHBOdW1iZXJfX19fbnVsbF9jb21tYV9cbl9fX19faW50ZXJuYXRpb25hbFRyYXZlbEVuYWJsZWRfX19fbnVsbF9jb21tYV9cbl9fX19fbGltaXRNYW5hZ2VtZW50RW5hYmxlZF9fX19udWxsX2NvbW1hX1xuX19fX19udW1iZXJfX19fXzUxMjA1NTAzMDY0MTIyMDRfX2NvbW1hX1xuX19fX19zdG9wQ2FyZEVuYWJsZWRfX19fbnVsbF9jb21tYV9cbl9fX19fdHlwZV9fX19udWxsX2NvbW1hX1xuX19fX192aWV3UGluRW5hYmxlZF9fX19udWxsXG5fX19jYnJjX19jb21tYV9cbl9fX2dyb3NzTW9udGhseUluY29tZV9fX19fb2JyY19cbl9fX19fYW1vdW50X19fXzEwNDAwMF9jb21tYV9cbl9fX19fY3VycmVuY3lfX19fX1JfXG5fX19jYnJjX19jb21tYV9cbl9fX3RvdGFsTW9udGhseUV4cGVuc2VzX19fX19vYnJjX1xuX19fX19hbW91bnRfX19fNTgwMDBfY29tbWFfXG5fX19fX2N1cnJlbmN5X19fX19SX1xuX19fY2JyY19cbl9jYnJjX18iLAogICAgInJlcXVlc3QiIDogewogICAgICAiYmFzZTY0Qm9keSIgOiAiUEhOdllYQTZSVzUyWld4dmNHVWdlRzFzYm5NNmMyOWhjRDBpYUhSMGNEb3ZMM05qYUdWdFlYTXVlRzFzYzI5aGNDNXZjbWN2YzI5aGNDOWxiblpsYkc5d1pTOGlQanhUVDBGUUxVVk9WanBJWldGa1pYSWdlRzFzYm5NNlUwOUJVQzFGVGxZOUltaDBkSEE2THk5elkyaGxiV0Z6TG5odGJITnZZWEF1YjNKbkwzTnZZWEF2Wlc1MlpXeHZjR1V2SWk4K1BITnZZWEE2UW05a2VUNDhRVlJOU0ZSUU1ERlBjR1Z5WVhScGIyNGdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3VRVlJOU0ZSUU1ERXVRVlJOVWtWUk1ERXVVbVZ4ZFdWemRDNWpiMjBpSUhodGJHNXpPbTV6TWowaWFIUjBjRG92TDNkM2R5NUJWRTFJVkZBd01TNUJWRTFTUlZBd01TNVNaWE53YjI1elpTNWpiMjBpUGp4eWNUQXhYM0psWXo0OGNuRXdNVjltZFc1alBrZEZWRU5CVWtSVFBDOXljVEF4WDJaMWJtTStQSEp4TURGZmFXSjBQakE4TDNKeE1ERmZhV0owUGp4eWNUQXhYMkp3YVdRK05UTXhOREV4TkRZMFBDOXljVEF4WDJKd2FXUStQSEp4TURGZlkyRnlaRzUxYlQ0d1BDOXljVEF4WDJOaGNtUnVkVzArUEhKeE1ERmZZV05qZEc1MWJUNHdQQzl5Y1RBeFgyRmpZM1J1ZFcwK1BISnhNREZmY21WMFgyVnljbTl5UGpBOEwzSnhNREZmY21WMFgyVnljbTl5UGp3dmNuRXdNVjl5WldNK1BDOUJWRTFJVkZBd01VOXdaWEpoZEdsdmJqNDhMM052WVhBNlFtOWtlVDQ4TDNOdllYQTZSVzUyWld4dmNHVSsiLAogICAgICAiaGVhZGVycyIgOiB7CiAgICAgICAgIkFjY2VwdCIgOiAidGV4dC9odG1sLCBpbWFnZS9naWYsIGltYWdlL2pwZWcsICo7IHE9LjIsICovKjsgcT0uMiIsCiAgICAgICAgIlVzZXItQWdlbnQiIDogIkFwYWNoZSBDWEYgMi43LjE0LnJlZGhhdC0xIiwKICAgICAgICAiQ29ubmVjdGlvbiIgOiAia2VlcC1hbGl2ZSIsCiAgICAgICAgIkhvc3QiIDogIjE3Mi45OS4wLjU6ODA4MCIsCiAgICAgICAgIlByYWdtYSIgOiAibm8tY2FjaGUiLAogICAgICAgICJ4LXNiZy1zZXF1ZW5jZS1udW1iZXIiIDogIjEiLAogICAgICAgICJ4LW9yaWdpbmFsLXVybCIgOiAiaHR0cHM6Ly9yY3EyLnNiaWMuY28uemE6MzY1MC9hdG1zL3dlYlNlcnZpY2UvYXRtaHRwMDEiLAogICAgICAgICJ4LXNiZy1tZXNzYWdlVHJhY2VJZCIgOiAiMTcyLjk5LjAuNS84MDgwL3NlcnZpY2Vfd2lwLzIvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9JbmNvbWVfYW5kX2V4cGVuc2VzX3dpdGhpbl90aGVfYWxsb3dlZF9yYW5nZXMvR2F2aW4iLAogICAgICAgICJDYWNoZS1Db250cm9sIiA6ICJuby1jYWNoZSIsCiAgICAgICAgInguc2VydmljZS5pbnZvY2F0aW9uLmNvdW50cyIgOiAiaHR0cDpQT1NUOi8vMTcyLjk5LjAuMzo4MDgwL0NhcmRzL3Jlc3QvY3JlZGl0LWNhcmQtbGltaXRzL3ByZUFwcHJvdmVDcmVkaXRMaW1pdEluY3JlYXNlfDEsaHR0cHM6Ly9yY3EyLnNiaWMuY28uemE6MzY1MC9hdG1zL3dlYlNlcnZpY2UvYXRtaHRwMDF8MSxodHRwczovL2VzYmRwdS5zdGFuZGFyZGJhbmsuY28uemE6NDIwNC9zYS9zZXJ2aWNlcy90ZWNobmljYWwvaW50ZWdyYXRpb24vaW50ZWdyYXRpb24vcHNfZ2lfc2VjdXJpdHltYW5hZ2VtZW50djF8MSIsCiAgICAgICAgImF1dG9tYXRpb24ucHJveHkudW5tYXBwZWQuZW5kcG9pbnRzIiA6ICJ0cnVlIiwKICAgICAgICAiQ29udGVudC1MZW5ndGgiIDogIjUyOCIsCiAgICAgICAgIkNvbnRlbnQtVHlwZSIgOiAidGV4dC94bWw7IGNoYXJzZXQ9VVRGLTgiCiAgICAgIH0sCiAgICAgICJkYXRlIiA6IDE1MDIxMDc4ODc2NzYsCiAgICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgICAicmVxdWVzdGVkVXJsIiA6ICIvYXRtcy93ZWJTZXJ2aWNlL2F0bWh0cDAxIiwKICAgICAgInNlcXVlbmNlTnVtYmVyIiA6IDEsCiAgICAgICJjb29raWVzIiA6IHsgfSwKICAgICAgImNsaWVudElwIiA6ICIxNzIuOTkuMC4zIiwKICAgICAgImFic29sdXRlVXJsIiA6ICJodHRwOi8vMTcyLjk5LjAuNTo4MDgwL2F0bXMvd2ViU2VydmljZS9hdG1odHAwMSIsCiAgICAgICJ1cmwiIDogIi9hdG1zL3dlYlNlcnZpY2UvYXRtaHRwMDEiLAogICAgICAiYWxsSGVhZGVyS2V5cyIgOiBbICJBY2NlcHQiLCAiVXNlci1BZ2VudCIsICJDb25uZWN0aW9uIiwgIkhvc3QiLCAiUHJhZ21hIiwgIngtc2JnLXNlcXVlbmNlLW51bWJlciIsICJ4LW9yaWdpbmFsLXVybCIsICJ4LXNiZy1tZXNzYWdlVHJhY2VJZCIsICJDYWNoZS1Db250cm9sIiwgInguc2VydmljZS5pbnZvY2F0aW9uLmNvdW50cyIsICJhdXRvbWF0aW9uLnByb3h5LnVubWFwcGVkLmVuZHBvaW50cyIsICJDb250ZW50LUxlbmd0aCIsICJDb250ZW50LVR5cGUiIF0KICAgIH0sCiAgICAicmVzcG9uc2UiIDogewogICAgICAiYmFzZTY0Qm9keSIgOiAiUEZOUFFWQXRSVTVXT2tWdWRtVnNiM0JsSUhodGJHNXpPbk52WVhBOUltaDBkSEE2THk5elkyaGxiV0Z6TG5odGJITnZZWEF1YjNKbkwzTnZZWEF2Wlc1MlpXeHZjR1V2SWdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJajRLSUNBOFUwOUJVQzFGVGxZNlFtOWtlVDRLSUNBZ0lEeEJWRTFJVkZBd01VOXdaWEpoZEdsdmJsSmxjM0J2Ym5ObElIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xrRlVUVWhVVURBeExrRlVUVkpGVURBeExsSmxjM0J2Ym5ObExtTnZiU0krQ2lBZ0lDQWdJRHh5Y0RBeFgzSmxZejRLSUNBZ0lDQWdJQ0E4Y25Bd01WOW1kVzVqUGtkRlZFTkJVa1JUUEM5eWNEQXhYMloxYm1NK0NpQWdJQ0FnSUNBZ1BISndNREZmZFhObGNtbGtQand2Y25Bd01WOTFjMlZ5YVdRK0NpQWdJQ0FnSUNBZ1BISndNREZmYVdKMFBqQThMM0p3TURGZmFXSjBQZ29nSUNBZ0lDQWdJRHh5Y0RBeFgySndhV1ErTlRNeE5ERXhORFkwUEM5eWNEQXhYMkp3YVdRK0NpQWdJQ0FnSUNBZ1BISndNREZmWTJGeVpHNTFiVDR3UEM5eWNEQXhYMk5oY21SdWRXMCtDaUFnSUNBZ0lDQWdQSEp3TURGZllXTmpkRzUxYlQ0d1BDOXljREF4WDJGalkzUnVkVzArQ2lBZ0lDQWdJQ0FnUEhKd01ERmZZMmhuWDJ4cGJUNHdMakF3UEM5eWNEQXhYMk5vWjE5c2FXMCtDaUFnSUNBZ0lDQWdQSEp3TURGZlkyaG5YMjV2WTJGeVpENDhMM0p3TURGZlkyaG5YMjV2WTJGeVpENEtJQ0FnSUNBZ0lDQThjbkF3TVY5amFHZGZZWFJ0UGp3dmNuQXdNVjlqYUdkZllYUnRQZ29nSUNBZ0lDQWdJRHh5Y0RBeFgyTm9aMTl3YjNNK1BDOXljREF4WDJOb1oxOXdiM00rQ2lBZ0lDQWdJQ0FnUEhKd01ERmZZMmhuWDJadmNtVnBaMjQrUEM5eWNEQXhYMk5vWjE5bWIzSmxhV2R1UGdvZ0lDQWdJQ0FnSUR4eWNEQXhYMk5vWjE5aGJubGZkSEpoYmo0OEwzSndNREZmWTJoblgyRnVlVjkwY21GdVBnb2dJQ0FnSUNBZ0lEeHljREF4WDJOb1oxOW9iM1JqWVhKa1Bqd3ZjbkF3TVY5amFHZGZhRzkwWTJGeVpENEtJQ0FnSUNBZ0lDQThjbkF3TVY5amFHZGZZM0J6ZEdGMFBqd3ZjbkF3TVY5amFHZGZZM0J6ZEdGMFBnb2dJQ0FnSUNBZ0lEeHljREF4WDJOb1oxOTBiblIwWVhRK1BDOXljREF4WDJOb1oxOTBiblIwWVhRK0NpQWdJQ0FnSUNBZ1BISndNREZmY21WMFgyVnljbTl5UGpBOEwzSndNREZmY21WMFgyVnljbTl5UGdvZ0lDQWdJQ0FnSUR4eWNEQXhYMk5oY21SZmNtVmpiM0prUGdvZ0lDQWdJQ0FnSUNBZ1BISndNREZmWTJGeVpGOXVkVzArTlRFeU1EVTFNRE13TmpReE1UVTFNand2Y25Bd01WOWpZWEprWDI1MWJUNEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyNXZZMkZ5WkQ0OEwzSndNREZmYm05allYSmtQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZZWFJ0UGp3dmNuQXdNVjloZEcwK0NpQWdJQ0FnSUNBZ0lDQThjbkF3TVY5d2IzTStQQzl5Y0RBeFgzQnZjejRLSUNBZ0lDQWdJQ0FnSUR4eWNEQXhYMlp2Y21WcFoyNCtQQzl5Y0RBeFgyWnZjbVZwWjI0K0NpQWdJQ0FnSUNBZ0lDQThjbkF3TVY5aGJubGZkSEpoYmo0OEwzSndNREZmWVc1NVgzUnlZVzQrQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlvYjNSallYSmtQazQ4TDNKd01ERmZhRzkwWTJGeVpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyTndjM1JoZEQ0OEwzSndNREZmWTNCemRHRjBQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZkRzUwZEdGMFBqd3ZjbkF3TVY5MGJuUjBZWFErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlrYkhsZmQyUnliR2x0UGpFd01EQXVNREE4TDNKd01ERmZaR3g1WDNka2NteHBiVDRLSUNBZ0lDQWdJQ0FnSUR4eWNEQXhYMlJzZVY5M1pISjFjMlErTUM0d01Ed3ZjbkF3TVY5a2JIbGZkMlJ5ZFhOa1Bnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmJYUm9YM2RrY214cGJUNHpNVEF3TUM0d01Ed3ZjbkF3TVY5dGRHaGZkMlJ5YkdsdFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmJYUm9YM2RrY25WelpENHdMakF3UEM5eWNEQXhYMjEwYUY5M1pISjFjMlErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlrWVhSZmJHRnpkSGRrY2o0eE9UQXdMVEF4TFRBeFBDOXljREF4WDJSaGRGOXNZWE4wZDJSeVBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmJYUm9YMlZoY0d4cGJUNHdMakF3UEM5eWNEQXhYMjEwYUY5bFlYQnNhVzArQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl0ZEdoZlpXRndkWE5rUGpBdU1EQThMM0p3TURGZmJYUm9YMlZoY0hWelpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyUmhkRjlzWVhOMGNHMTBQakU1TURBdE1ERXRNREU4TDNKd01ERmZaR0YwWDJ4aGMzUndiWFErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlsY25KZlkyRnlaRDR3UEM5eWNEQXhYMlZ5Y2w5allYSmtQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZjSEp2WkY5dWRXMCtRa0ZEUVRFeFBDOXljREF4WDNCeWIyUmZiblZ0UGdvZ0lDQWdJQ0FnSUNBZ1BISndNREZmWW14dlkydGZZMjlrWlQ1UVNEd3ZjbkF3TVY5aWJHOWphMTlqYjJSbFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZllteHZZMnRmWkdGMFpUNHlNREUyTURneE1Ed3ZjbkF3TVY5aWJHOWphMTlrWVhSbFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmFYTnpkV1ZmWkdGMFpUNHlNREUyTURNeE5qd3ZjbkF3TVY5cGMzTjFaVjlrWVhSbFBnb2dJQ0FnSUNBZ0lEd3ZjbkF3TVY5allYSmtYM0psWTI5eVpENEtJQ0FnSUNBZ0lDQThjbkF3TVY5allYSmtYM0psWTI5eVpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyTmhjbVJmYm5WdFBqVXhNakExTlRBek1EWTBNVEl5TURROEwzSndNREZmWTJGeVpGOXVkVzArQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl1YjJOaGNtUStQQzl5Y0RBeFgyNXZZMkZ5WkQ0S0lDQWdJQ0FnSUNBZ0lEeHljREF4WDJGMGJUNDhMM0p3TURGZllYUnRQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZjRzl6UGp3dmNuQXdNVjl3YjNNK0NpQWdJQ0FnSUNBZ0lDQThjbkF3TVY5bWIzSmxhV2R1UGp3dmNuQXdNVjltYjNKbGFXZHVQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZZVzU1WDNSeVlXNCtQQzl5Y0RBeFgyRnVlVjkwY21GdVBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmFHOTBZMkZ5WkQ1T1BDOXljREF4WDJodmRHTmhjbVErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlqY0hOMFlYUStQQzl5Y0RBeFgyTndjM1JoZEQ0S0lDQWdJQ0FnSUNBZ0lEeHljREF4WDNSdWRIUmhkRDQ4TDNKd01ERmZkRzUwZEdGMFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZlpHeDVYM2RrY214cGJUNHhNREF3TUM0d01Ed3ZjbkF3TVY5a2JIbGZkMlJ5YkdsdFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZlpHeDVYM2RrY25WelpENHdMakF3UEM5eWNEQXhYMlJzZVY5M1pISjFjMlErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl0ZEdoZmQyUnliR2x0UGpJd01EQXdMakF3UEM5eWNEQXhYMjEwYUY5M1pISnNhVzArQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl0ZEdoZmQyUnlkWE5rUGpBdU1EQThMM0p3TURGZmJYUm9YM2RrY25WelpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyUmhkRjlzWVhOMGQyUnlQakU1TURBdE1ERXRNREU4TDNKd01ERmZaR0YwWDJ4aGMzUjNaSEkrQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl0ZEdoZlpXRndiR2x0UGpJd01DNHdNRHd2Y25Bd01WOXRkR2hmWldGd2JHbHRQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZiWFJvWDJWaGNIVnpaRDR3TGpBd1BDOXljREF4WDIxMGFGOWxZWEIxYzJRK0NpQWdJQ0FnSUNBZ0lDQThjbkF3TVY5a1lYUmZiR0Z6ZEhCdGRENHhPVEF3TFRBeExUQXhQQzl5Y0RBeFgyUmhkRjlzWVhOMGNHMTBQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZaWEp5WDJOaGNtUStNRHd2Y25Bd01WOWxjbkpmWTJGeVpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgzQnliMlJmYm5WdFBrSkJRMEV4TVR3dmNuQXdNVjl3Y205a1gyNTFiVDRLSUNBZ0lDQWdJQ0FnSUR4eWNEQXhYMkpzYjJOclgyTnZaR1UrVUVnOEwzSndNREZmWW14dlkydGZZMjlrWlQ0S0lDQWdJQ0FnSUNBZ0lEeHljREF4WDJKc2IyTnJYMlJoZEdVK01qQXhOakE0TVRFOEwzSndNREZmWW14dlkydGZaR0YwWlQ0S0lDQWdJQ0FnSUNBZ0lEeHljREF4WDJsemMzVmxYMlJoZEdVK01qQXhOakF6TVRZOEwzSndNREZmYVhOemRXVmZaR0YwWlQ0S0lDQWdJQ0FnSUNBOEwzSndNREZmWTJGeVpGOXlaV052Y21RK0NpQWdJQ0FnSUR3dmNuQXdNVjl5WldNK0NpQWdJQ0E4TDBGVVRVaFVVREF4VDNCbGNtRjBhVzl1VW1WemNHOXVjMlUrQ2lBZ1BDOVRUMEZRTFVWT1ZqcENiMlI1UGdvOEwxTlBRVkF0UlU1V09rVnVkbVZzYjNCbFBnPT0iLAogICAgICAiaGVhZGVycyIgOiB7CiAgICAgICAgIkNvbnRlbnQtVHlwZSIgOiAidGV4dC94bWwiCiAgICAgIH0sCiAgICAgICJkYXRlIiA6IDE1MDIxMDc4ODc2NzYsCiAgICAgICJzdGF0dXMiIDogMjAwCiAgICB9LAogICAgImR1cmF0aW9uIiA6IDAsCiAgICAibmVzdGVkRXhjaGFuZ2VzIiA6IFsgXQogIH0sIHsKICAgICJzY29wZVBhdGgiIDogIjE3Mi45OS4wLjUvODA4MC9zZXJ2aWNlX3dpcC8yL0NyZWRpdExpbWl0SW5jcmVhc2VzL0VudGVyX0luY29tZV9hbmRfRXhwZW5zZXMvSW5jb21lX2FuZF9leHBlbnNlc193aXRoaW5fdGhlX2FsbG93ZWRfcmFuZ2VzL0dhdmluIiwKICAgICJzdGVwIiA6ICJXaGVuX0dhdmluX2F0dGVtcHRzX3RvL3NlbmRfYV9QT1NUX3JlcXVlc3RfdG9fX2NyZWRpdC1jYXJkLWxpbWl0c19wcmVBcHByb3ZlQ3JlZGl0TGltaXRJbmNyZWFzZV93aXRoX2JvZHlfX19vYnJjX1xuX19fa2V5VmFsdWVNZXRhZGF0YV9fX19fb2JyX19fY2JyX19jb21tYV9cbl9fX3N0ZXBVcF9fX19udWxsX2NvbW1hX1xuX19fc3lzdGVtUHJpbmNpcGFsSWRlbnRpZmllcl9fX19fb2JyY19cbl9fX19fYmFua2luZ1RlcnJpdG9yeUtleV9fX19udWxsX2NvbW1hX1xuX19fX19sb2NhbGVfX19fbnVsbF9jb21tYV9cbl9fX19fc3lzdGVtUHJpbmNpcGFsSWRfX19fXzQ2ODYyOF9fY29tbWFfXG5fX19fX3N5c3RlbVByaW5jaXBhbEtleV9fX19udWxsXG5fX19jYnJjX19jb21tYV9cbl9fX2NhcmRfX19fX29icmNfXG5fX19fX2FjdGl2ZV9fX19udWxsX2NvbW1hX1xuX19fX19jYXJkSW1hZ2VVcmxfX19fbnVsbF9jb21tYV9cbl9fX19fY291bnRyeUNvZGVfX19fbnVsbF9jb21tYV9cbl9fX19fZGVzY3JpcHRpb25fX19fbnVsbF9jb21tYV9cbl9fX19faGVscE51bWJlcl9fX19udWxsX2NvbW1hX1xuX19fX19pbnRlcm5hdGlvbmFsVHJhdmVsRW5hYmxlZF9fX19udWxsX2NvbW1hX1xuX19fX19saW1pdE1hbmFnZW1lbnRFbmFibGVkX19fX251bGxfY29tbWFfXG5fX19fX251bWJlcl9fX19fNTEyMDU1MDMwNjQxMjIwNF9fY29tbWFfXG5fX19fX3N0b3BDYXJkRW5hYmxlZF9fX19udWxsX2NvbW1hX1xuX19fX190eXBlX19fX251bGxfY29tbWFfXG5fX19fX3ZpZXdQaW5FbmFibGVkX19fX251bGxcbl9fX2NicmNfX2NvbW1hX1xuX19fZ3Jvc3NNb250aGx5SW5jb21lX19fX19vYnJjX1xuX19fX19hbW91bnRfX19fMTA0MDAwX2NvbW1hX1xuX19fX19jdXJyZW5jeV9fX19fUl9cbl9fX2NicmNfX2NvbW1hX1xuX19fdG90YWxNb250aGx5RXhwZW5zZXNfX19fX29icmNfXG5fX19fX2Ftb3VudF9fX181ODAwMF9jb21tYV9cbl9fX19fY3VycmVuY3lfX19fX1JfXG5fX19jYnJjX1xuX2NicmNfXyIsCiAgICAicmVxdWVzdCIgOiB7CiAgICAgICJiYXNlNjRCb2R5IiA6ICIiLAogICAgICAiaGVhZGVycyIgOiB7CiAgICAgICAgIngtaWJtLWNsaWVudC1pZCIgOiAiZGYxOGYxZDAtM2M2Ny00YmRlLWJhOGEtNzdhMmU0YmQzMTIyIiwKICAgICAgICAieC1pYm0tY2xpZW50LXNlY3JldCIgOiAid1A3ZVQ4dkkwZks1cUwzbVc4bU0yalQ3cE04dkQ3YUs0c0MxeUw4ZlAyYUM4bUoxdlgiLAogICAgICAgICJ4LXNiZy1tZXNzYWdlVHJhY2VJZCIgOiAiMTcyLjk5LjAuNS84MDgwL3NlcnZpY2Vfd2lwLzIvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9JbmNvbWVfYW5kX2V4cGVuc2VzX3dpdGhpbl90aGVfYWxsb3dlZF9yYW5nZXMvR2F2aW4iLAogICAgICAgICJ4LW9yaWdpbmFsLXVybCIgOiAiaHR0cHM6Ly9hcGlnc2Euc3RhbmRhcmRiYW5rLmNvLnphOjU0NDMvY2FyZC9zaXQxL2NhcmQvbGltaXRzL3ByZWxpbWl0cy92MS81MTIwNTUwMzA2NDEyMjA0IiwKICAgICAgICAiQ29ubmVjdGlvbiIgOiAia2VlcC1hbGl2ZSIsCiAgICAgICAgIlVzZXItQWdlbnQiIDogIkFwYWNoZS1IdHRwQ2xpZW50LzQuMy42LnJlZGhhdC0xIChqYXZhIDEuNSkiLAogICAgICAgICJ4LnNlcnZpY2UuaW52b2NhdGlvbi5jb3VudHMiIDogWyAiaHR0cDpQT1NUOi8vMTcyLjk5LjAuMzo4MDgwL0NhcmRzL3Jlc3QvY3JlZGl0LWNhcmQtbGltaXRzL3ByZUFwcHJvdmVDcmVkaXRMaW1pdEluY3JlYXNlfDEiLCAiaHR0cHM6Ly9yY3EyLnNiaWMuY28uemE6MzY1MC9hdG1zL3dlYlNlcnZpY2UvYXRtaHRwMDF8MSIsICJodHRwczovL2VzYmRwdS5zdGFuZGFyZGJhbmsuY28uemE6NDIwNC9zYS9zZXJ2aWNlcy90ZWNobmljYWwvaW50ZWdyYXRpb24vaW50ZWdyYXRpb24vcHNfZ2lfc2VjdXJpdHltYW5hZ2VtZW50djF8MSIsICJodHRwczpHRVQ6Ly9hcGlnc2Euc3RhbmRhcmRiYW5rLmNvLnphOjU0NDMvY2FyZC9zaXQxL2NhcmQvbGltaXRzL3ByZWxpbWl0cy92MS81MTIwNTUwMzA2NDEyMjA0fDEiIF0sCiAgICAgICAgIkhvc3QiIDogIjE3Mi45OS4wLjU6ODA4MCIsCiAgICAgICAgIkFjY2VwdC1FbmNvZGluZyIgOiAiZ3ppcCxkZWZsYXRlIiwKICAgICAgICAiYXV0b21hdGlvbi5wcm94eS51bm1hcHBlZC5lbmRwb2ludHMiIDogInRydWUiLAogICAgICAgICJ4LXNiZy1zZXF1ZW5jZS1udW1iZXIiIDogIjEiCiAgICAgIH0sCiAgICAgICJkYXRlIiA6IDE1MDIxMDc4ODc2ODksCiAgICAgICJtZXRob2QiIDogIkdFVCIsCiAgICAgICJyZXF1ZXN0ZWRVcmwiIDogIi9jYXJkL3NpdDEvY2FyZC9saW1pdHMvcHJlbGltaXRzL3YxLzUxMjA1NTAzMDY0MTIyMDQiLAogICAgICAic2VxdWVuY2VOdW1iZXIiIDogMSwKICAgICAgImNvb2tpZXMiIDogeyB9LAogICAgICAiY2xpZW50SXAiIDogIjE3Mi45OS4wLjMiLAogICAgICAiYWJzb2x1dGVVcmwiIDogImh0dHA6Ly8xNzIuOTkuMC41OjgwODAvY2FyZC9zaXQxL2NhcmQvbGltaXRzL3ByZWxpbWl0cy92MS81MTIwNTUwMzA2NDEyMjA0P29yaWc9U0JHTU8iLAogICAgICAidXJsIiA6ICIvY2FyZC9zaXQxL2NhcmQvbGltaXRzL3ByZWxpbWl0cy92MS81MTIwNTUwMzA2NDEyMjA0P29yaWc9U0JHTU8iLAogICAgICAiYWxsSGVhZGVyS2V5cyIgOiBbICJ4LWlibS1jbGllbnQtaWQiLCAieC1pYm0tY2xpZW50LXNlY3JldCIsICJ4LXNiZy1tZXNzYWdlVHJhY2VJZCIsICJ4LW9yaWdpbmFsLXVybCIsICJDb25uZWN0aW9uIiwgIlVzZXItQWdlbnQiLCAieC5zZXJ2aWNlLmludm9jYXRpb24uY291bnRzIiwgIkhvc3QiLCAiQWNjZXB0LUVuY29kaW5nIiwgImF1dG9tYXRpb24ucHJveHkudW5tYXBwZWQuZW5kcG9pbnRzIiwgIngtc2JnLXNlcXVlbmNlLW51bWJlciIgXQogICAgfSwKICAgICJyZXNwb25zZSIgOiB7CiAgICAgICJiYXNlNjRCb2R5IiA6ICJleUpRY21WTWFXMXBkRjlrWlhSaGFXeHpJam9nZXdvZ0lDSlFjbVZNYVcxcGRGOVFjbWx0WVhKNVgwTmhjbVJmVG5WdFltVnlJam9nSWpVeE1qQTFOVEF6TURZME1USXlNRFFpTEFvZ0lDSlFjbVZNYVcxcGRGOUNZV3hoYm1ObElqb2dJakkxTGpjd0lpd0tJQ0FpVUhKbFRHbHRhWFJmUTNWeWNtVnVkRjlEY21Wa2FYUmZUR2x0YVhRaU9pQWlNVEF3TURBd0lpd0tJQ0FpVUhKbFRHbHRhWFJmUlhOMGFXMWhkR1ZrWDBkeWIzTnpYMGx1WTI5dFpTSTZJQ0l4TURBd01EQWlMQW9nSUNKUWNtVk1hVzFwZEY5Q2RYSmxZWFZmUTI5dGJTSTZJRFExTml3S0lDQWlVSEpsVEdsdGFYUmZSWE4wYVcxaGRHVmtYMFY0Y0dWdWMyVnpJam9nSWpZd01EQXdJaXdLSUNBaVVISmxUR2x0YVhSZlJYTjBhVzFoZEdWa1gxTjFjbkJzZFhNaU9pQWlORFV1T0RjaUxBb2dJQ0pRY21WTWFXMXBkRjlGYzNScGJXRjBaV1JmUVdabVgweHBiV2wwSWpvZ0lqTXdNREF1T0RnaUxBb2dJQ0pRY21WTWFXMXBkRjlOWVhoZlVtbHphMTlNYVcxcGRGOUpibU55WldGelpTSTZJQ0kxTURBd01DSXNDaUFnSWxCeVpVeHBiV2wwWDAxdmJuUm9iSGxmVTJWeWRtbGpaVjlHWldVaU9pQWlNak11TWpNaUxBb2dJQ0pRY21WTWFXMXBkRjlGWm1aZlNXNTBaWEpsYzNSZlVtRjBaU0k2SUNJeE9DNDBOU0lzQ2lBZ0lsQnlaVXhwYldsMFgwbHVjM1Z5WVc1alpWOVBibDlCWTJOdmRXNTBJam9nSWxsRlV5SXNDaUFnSWxCeVpVeHBiV2wwWDBsdWMzVnlZVzVqWlY5TmIyNTBhR3g1WDBabFpTSTZJQ0kwTlM0ME5TSXNDaUFnSWxCeVpVeHBiV2wwWDBsdWMzVnlZVzVqWlY5U1lYUmxJam9nSWpJekxqVTBJaXdLSUNBaVVISmxUR2x0YVhSZlRHVmhaRjlGZUhCcGNua2lPaUF5TURFM01ETXhOU3dLSUNBaVVISmxUR2x0YVhSZlVFUWlPaUFpTXk0M09DSXNDaUFnSWxCeVpVeHBiV2wwWDBGbVptOXlaR0ZpYVd4cGRIbGZSbUZqZEc5eUlqb2dJalF1T0RjaUNuMTkiLAogICAgICAiaGVhZGVycyIgOiB7CiAgICAgICAgIkNvbnRlbnQtVHlwZSIgOiAiYXBwbGljYXRpb24vanNvbiIKICAgICAgfSwKICAgICAgImRhdGUiIDogMTUwMjEwNzg4NzY5MCwKICAgICAgInN0YXR1cyIgOiAyMDAKICAgIH0sCiAgICAiZHVyYXRpb24iIDogMCwKICAgICJuZXN0ZWRFeGNoYW5nZXMiIDogWyBdCiAgfSwgewogICAgInNjb3BlUGF0aCIgOiAiMTcyLjk5LjAuNS84MDgwL3NlcnZpY2Vfd2lwLzIvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9JbmNvbWVfYW5kX2V4cGVuc2VzX3dpdGhpbl90aGVfYWxsb3dlZF9yYW5nZXMvR2F2aW4iLAogICAgInN0ZXAiIDogIldoZW5fR2F2aW5fYXR0ZW1wdHNfdG8vc2VuZF9hX1BPU1RfcmVxdWVzdF90b19fY3JlZGl0LWNhcmQtbGltaXRzX3ByZUFwcHJvdmVDcmVkaXRMaW1pdEluY3JlYXNlX3dpdGhfYm9keV9fX29icmNfXG5fX19rZXlWYWx1ZU1ldGFkYXRhX19fX19vYnJfX19jYnJfX2NvbW1hX1xuX19fc3RlcFVwX19fX251bGxfY29tbWFfXG5fX19zeXN0ZW1QcmluY2lwYWxJZGVudGlmaWVyX19fX19vYnJjX1xuX19fX19iYW5raW5nVGVycml0b3J5S2V5X19fX251bGxfY29tbWFfXG5fX19fX2xvY2FsZV9fX19udWxsX2NvbW1hX1xuX19fX19zeXN0ZW1QcmluY2lwYWxJZF9fX19fNDY4NjI4X19jb21tYV9cbl9fX19fc3lzdGVtUHJpbmNpcGFsS2V5X19fX251bGxcbl9fX2NicmNfX2NvbW1hX1xuX19fY2FyZF9fX19fb2JyY19cbl9fX19fYWN0aXZlX19fX251bGxfY29tbWFfXG5fX19fX2NhcmRJbWFnZVVybF9fX19udWxsX2NvbW1hX1xuX19fX19jb3VudHJ5Q29kZV9fX19udWxsX2NvbW1hX1xuX19fX19kZXNjcmlwdGlvbl9fX19udWxsX2NvbW1hX1xuX19fX19oZWxwTnVtYmVyX19fX251bGxfY29tbWFfXG5fX19fX2ludGVybmF0aW9uYWxUcmF2ZWxFbmFibGVkX19fX251bGxfY29tbWFfXG5fX19fX2xpbWl0TWFuYWdlbWVudEVuYWJsZWRfX19fbnVsbF9jb21tYV9cbl9fX19fbnVtYmVyX19fX181MTIwNTUwMzA2NDEyMjA0X19jb21tYV9cbl9fX19fc3RvcENhcmRFbmFibGVkX19fX251bGxfY29tbWFfXG5fX19fX3R5cGVfX19fbnVsbF9jb21tYV9cbl9fX19fdmlld1BpbkVuYWJsZWRfX19fbnVsbFxuX19fY2JyY19fY29tbWFfXG5fX19ncm9zc01vbnRobHlJbmNvbWVfX19fX29icmNfXG5fX19fX2Ftb3VudF9fX18xMDQwMDBfY29tbWFfXG5fX19fX2N1cnJlbmN5X19fX19SX1xuX19fY2JyY19fY29tbWFfXG5fX190b3RhbE1vbnRobHlFeHBlbnNlc19fX19fb2JyY19cbl9fX19fYW1vdW50X19fXzU4MDAwX2NvbW1hX1xuX19fX19jdXJyZW5jeV9fX19fUl9cbl9fX2NicmNfXG5fY2JyY19fIiwKICAgICJyZXF1ZXN0IiA6IHsKICAgICAgImJhc2U2NEJvZHkiIDogIlBITnZZWEE2Ulc1MlpXeHZjR1VnZUcxc2JuTTZjMjloY0QwaWFIUjBjRG92TDNOamFHVnRZWE11ZUcxc2MyOWhjQzV2Y21jdmMyOWhjQzlsYm5abGJHOXdaUzhpUGp4VFQwRlFMVVZPVmpwSVpXRmtaWElnZUcxc2JuTTZVMDlCVUMxRlRsWTlJbWgwZEhBNkx5OXpZMmhsYldGekxuaHRiSE52WVhBdWIzSm5MM052WVhBdlpXNTJaV3h2Y0dVdklpOCtQSE52WVhBNlFtOWtlVDQ4UVZSTlNGUlFNREZQY0dWeVlYUnBiMjRnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1UVZSTlNGUlFNREV1UVZSTlVrVlJNREV1VW1WeGRXVnpkQzVqYjIwaUlIaHRiRzV6T201ek1qMGlhSFIwY0RvdkwzZDNkeTVCVkUxSVZGQXdNUzVCVkUxU1JWQXdNUzVTWlhOd2IyNXpaUzVqYjIwaVBqeHljVEF4WDNKbFl6NDhjbkV3TVY5bWRXNWpQa2RGVkVOQlVrUlRQQzl5Y1RBeFgyWjFibU0rUEhKeE1ERmZhV0owUGpBOEwzSnhNREZmYVdKMFBqeHljVEF4WDJKd2FXUStNRHd2Y25Fd01WOWljR2xrUGp4eWNUQXhYMk5oY21SdWRXMCtOVEV5TURVMU1ETXdOalF4TWpJd05Ed3ZjbkV3TVY5allYSmtiblZ0UGp4eWNUQXhYMkZqWTNSdWRXMCtNRHd2Y25Fd01WOWhZMk4wYm5WdFBqeHljVEF4WDJOb1oxOXNhVzArTUR3dmNuRXdNVjlqYUdkZmJHbHRQanh5Y1RBeFgyTm9aMTl1YjJOaGNtUStNRHd2Y25Fd01WOWphR2RmYm05allYSmtQanh5Y1RBeFgzSmxkRjlsY25KdmNqNHdQQzl5Y1RBeFgzSmxkRjlsY25KdmNqNDhMM0p4TURGZmNtVmpQand2UVZSTlNGUlFNREZQY0dWeVlYUnBiMjQrUEM5emIyRndPa0p2WkhrK1BDOXpiMkZ3T2tWdWRtVnNiM0JsUGc9PSIsCiAgICAgICJoZWFkZXJzIiA6IHsKICAgICAgICAiQWNjZXB0IiA6ICJ0ZXh0L2h0bWwsIGltYWdlL2dpZiwgaW1hZ2UvanBlZywgKjsgcT0uMiwgKi8qOyBxPS4yIiwKICAgICAgICAiVXNlci1BZ2VudCIgOiAiQXBhY2hlIENYRiAyLjcuMTQucmVkaGF0LTEiLAogICAgICAgICJDb25uZWN0aW9uIiA6ICJrZWVwLWFsaXZlIiwKICAgICAgICAiSG9zdCIgOiAiMTcyLjk5LjAuNTo4MDgwIiwKICAgICAgICAiUHJhZ21hIiA6ICJuby1jYWNoZSIsCiAgICAgICAgIngtc2JnLXNlcXVlbmNlLW51bWJlciIgOiAiMiIsCiAgICAgICAgIngtb3JpZ2luYWwtdXJsIiA6ICJodHRwczovL3JjcTIuc2JpYy5jby56YTozNjUwL2F0bXMvd2ViU2VydmljZS9hdG1odHAwMSIsCiAgICAgICAgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiA6ICIxNzIuOTkuMC41LzgwODAvc2VydmljZV93aXAvMi9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfd2l0aGluX3RoZV9hbGxvd2VkX3Jhbmdlcy9HYXZpbiIsCiAgICAgICAgIkNhY2hlLUNvbnRyb2wiIDogIm5vLWNhY2hlIiwKICAgICAgICAieC5zZXJ2aWNlLmludm9jYXRpb24uY291bnRzIiA6ICJodHRwOlBPU1Q6Ly8xNzIuOTkuMC4zOjgwODAvQ2FyZHMvcmVzdC9jcmVkaXQtY2FyZC1saW1pdHMvcHJlQXBwcm92ZUNyZWRpdExpbWl0SW5jcmVhc2V8MSxodHRwczovL3JjcTIuc2JpYy5jby56YTozNjUwL2F0bXMvd2ViU2VydmljZS9hdG1odHAwMXwyLGh0dHBzOi8vZXNiZHB1LnN0YW5kYXJkYmFuay5jby56YTo0MjA0L3NhL3NlcnZpY2VzL3RlY2huaWNhbC9pbnRlZ3JhdGlvbi9pbnRlZ3JhdGlvbi9wc19naV9zZWN1cml0eW1hbmFnZW1lbnR2MXwxLGh0dHBzOkdFVDovL2FwaWdzYS5zdGFuZGFyZGJhbmsuY28uemE6NTQ0My9jYXJkL3NpdDEvY2FyZC9saW1pdHMvcHJlbGltaXRzL3YxLzUxMjA1NTAzMDY0MTIyMDR8MSIsCiAgICAgICAgImF1dG9tYXRpb24ucHJveHkudW5tYXBwZWQuZW5kcG9pbnRzIiA6ICJ0cnVlIiwKICAgICAgICAiQ29udGVudC1MZW5ndGgiIDogIjYwMSIsCiAgICAgICAgIkNvbnRlbnQtVHlwZSIgOiAidGV4dC94bWw7IGNoYXJzZXQ9VVRGLTgiCiAgICAgIH0sCiAgICAgICJkYXRlIiA6IDE1MDIxMDc4ODc3MDgsCiAgICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgICAicmVxdWVzdGVkVXJsIiA6ICIvYXRtcy93ZWJTZXJ2aWNlL2F0bWh0cDAxIiwKICAgICAgInNlcXVlbmNlTnVtYmVyIiA6IDIsCiAgICAgICJjb29raWVzIiA6IHsgfSwKICAgICAgImNsaWVudElwIiA6ICIxNzIuOTkuMC4zIiwKICAgICAgImFic29sdXRlVXJsIiA6ICJodHRwOi8vMTcyLjk5LjAuNTo4MDgwL2F0bXMvd2ViU2VydmljZS9hdG1odHAwMSIsCiAgICAgICJ1cmwiIDogIi9hdG1zL3dlYlNlcnZpY2UvYXRtaHRwMDEiLAogICAgICAiYWxsSGVhZGVyS2V5cyIgOiBbICJBY2NlcHQiLCAiVXNlci1BZ2VudCIsICJDb25uZWN0aW9uIiwgIkhvc3QiLCAiUHJhZ21hIiwgIngtc2JnLXNlcXVlbmNlLW51bWJlciIsICJ4LW9yaWdpbmFsLXVybCIsICJ4LXNiZy1tZXNzYWdlVHJhY2VJZCIsICJDYWNoZS1Db250cm9sIiwgInguc2VydmljZS5pbnZvY2F0aW9uLmNvdW50cyIsICJhdXRvbWF0aW9uLnByb3h5LnVubWFwcGVkLmVuZHBvaW50cyIsICJDb250ZW50LUxlbmd0aCIsICJDb250ZW50LVR5cGUiIF0KICAgIH0sCiAgICAicmVzcG9uc2UiIDogewogICAgICAiYmFzZTY0Qm9keSIgOiAiUEZOUFFWQXRSVTVXT2tWdWRtVnNiM0JsSUhodGJHNXpPbk52WVhBOUltaDBkSEE2THk5elkyaGxiV0Z6TG5odGJITnZZWEF1YjNKbkwzTnZZWEF2Wlc1MlpXeHZjR1V2SWdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJajRLSUNBOFUwOUJVQzFGVGxZNlFtOWtlVDRLSUNBZ0lEeEJWRTFJVkZBd01VOXdaWEpoZEdsdmJsSmxjM0J2Ym5ObElIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xrRlVUVWhVVURBeExrRlVUVkpGVURBeExsSmxjM0J2Ym5ObExtTnZiU0krQ2lBZ0lDQWdJRHh5Y0RBeFgzSmxZejRLSUNBZ0lDQWdJQ0E4Y25Bd01WOW1kVzVqUGtkRlZFTkJVa1JUUEM5eWNEQXhYMloxYm1NK0NpQWdJQ0FnSUNBZ1BISndNREZmZFhObGNtbGtQand2Y25Bd01WOTFjMlZ5YVdRK0NpQWdJQ0FnSUNBZ1BISndNREZmYVdKMFBqQThMM0p3TURGZmFXSjBQZ29nSUNBZ0lDQWdJRHh5Y0RBeFgySndhV1ErTlRNeE5ERXhORFkwUEM5eWNEQXhYMkp3YVdRK0NpQWdJQ0FnSUNBZ1BISndNREZmWTJGeVpHNTFiVDR3UEM5eWNEQXhYMk5oY21SdWRXMCtDaUFnSUNBZ0lDQWdQSEp3TURGZllXTmpkRzUxYlQ0d1BDOXljREF4WDJGalkzUnVkVzArQ2lBZ0lDQWdJQ0FnUEhKd01ERmZZMmhuWDJ4cGJUNHdMakF3UEM5eWNEQXhYMk5vWjE5c2FXMCtDaUFnSUNBZ0lDQWdQSEp3TURGZlkyaG5YMjV2WTJGeVpENDhMM0p3TURGZlkyaG5YMjV2WTJGeVpENEtJQ0FnSUNBZ0lDQThjbkF3TVY5amFHZGZZWFJ0UGp3dmNuQXdNVjlqYUdkZllYUnRQZ29nSUNBZ0lDQWdJRHh5Y0RBeFgyTm9aMTl3YjNNK1BDOXljREF4WDJOb1oxOXdiM00rQ2lBZ0lDQWdJQ0FnUEhKd01ERmZZMmhuWDJadmNtVnBaMjQrUEM5eWNEQXhYMk5vWjE5bWIzSmxhV2R1UGdvZ0lDQWdJQ0FnSUR4eWNEQXhYMk5vWjE5aGJubGZkSEpoYmo0OEwzSndNREZmWTJoblgyRnVlVjkwY21GdVBnb2dJQ0FnSUNBZ0lEeHljREF4WDJOb1oxOW9iM1JqWVhKa1Bqd3ZjbkF3TVY5amFHZGZhRzkwWTJGeVpENEtJQ0FnSUNBZ0lDQThjbkF3TVY5amFHZGZZM0J6ZEdGMFBqd3ZjbkF3TVY5amFHZGZZM0J6ZEdGMFBnb2dJQ0FnSUNBZ0lEeHljREF4WDJOb1oxOTBiblIwWVhRK1BDOXljREF4WDJOb1oxOTBiblIwWVhRK0NpQWdJQ0FnSUNBZ1BISndNREZmY21WMFgyVnljbTl5UGpBOEwzSndNREZmY21WMFgyVnljbTl5UGdvZ0lDQWdJQ0FnSUR4eWNEQXhYMk5oY21SZmNtVmpiM0prUGdvZ0lDQWdJQ0FnSUNBZ1BISndNREZmWTJGeVpGOXVkVzArTlRFeU1EVTFNRE13TmpReE1UVTFNand2Y25Bd01WOWpZWEprWDI1MWJUNEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyNXZZMkZ5WkQ0OEwzSndNREZmYm05allYSmtQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZZWFJ0UGp3dmNuQXdNVjloZEcwK0NpQWdJQ0FnSUNBZ0lDQThjbkF3TVY5d2IzTStQQzl5Y0RBeFgzQnZjejRLSUNBZ0lDQWdJQ0FnSUR4eWNEQXhYMlp2Y21WcFoyNCtQQzl5Y0RBeFgyWnZjbVZwWjI0K0NpQWdJQ0FnSUNBZ0lDQThjbkF3TVY5aGJubGZkSEpoYmo0OEwzSndNREZmWVc1NVgzUnlZVzQrQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlvYjNSallYSmtQazQ4TDNKd01ERmZhRzkwWTJGeVpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyTndjM1JoZEQ0OEwzSndNREZmWTNCemRHRjBQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZkRzUwZEdGMFBqd3ZjbkF3TVY5MGJuUjBZWFErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlrYkhsZmQyUnliR2x0UGpFd01EQXVNREE4TDNKd01ERmZaR3g1WDNka2NteHBiVDRLSUNBZ0lDQWdJQ0FnSUR4eWNEQXhYMlJzZVY5M1pISjFjMlErTUM0d01Ed3ZjbkF3TVY5a2JIbGZkMlJ5ZFhOa1Bnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmJYUm9YM2RrY214cGJUNHpNVEF3TUM0d01Ed3ZjbkF3TVY5dGRHaGZkMlJ5YkdsdFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmJYUm9YM2RrY25WelpENHdMakF3UEM5eWNEQXhYMjEwYUY5M1pISjFjMlErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlrWVhSZmJHRnpkSGRrY2o0eE9UQXdMVEF4TFRBeFBDOXljREF4WDJSaGRGOXNZWE4wZDJSeVBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmJYUm9YMlZoY0d4cGJUNHdMakF3UEM5eWNEQXhYMjEwYUY5bFlYQnNhVzArQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl0ZEdoZlpXRndkWE5rUGpBdU1EQThMM0p3TURGZmJYUm9YMlZoY0hWelpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyUmhkRjlzWVhOMGNHMTBQakU1TURBdE1ERXRNREU4TDNKd01ERmZaR0YwWDJ4aGMzUndiWFErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlsY25KZlkyRnlaRDR3UEM5eWNEQXhYMlZ5Y2w5allYSmtQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZjSEp2WkY5dWRXMCtRa0ZEUVRFeFBDOXljREF4WDNCeWIyUmZiblZ0UGdvZ0lDQWdJQ0FnSUNBZ1BISndNREZmWW14dlkydGZZMjlrWlQ1UVNEd3ZjbkF3TVY5aWJHOWphMTlqYjJSbFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZllteHZZMnRmWkdGMFpUNHlNREUyTURneE1Ed3ZjbkF3TVY5aWJHOWphMTlrWVhSbFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmFYTnpkV1ZmWkdGMFpUNHlNREUyTURNeE5qd3ZjbkF3TVY5cGMzTjFaVjlrWVhSbFBnb2dJQ0FnSUNBZ0lEd3ZjbkF3TVY5allYSmtYM0psWTI5eVpENEtJQ0FnSUNBZ0lDQThjbkF3TVY5allYSmtYM0psWTI5eVpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyTmhjbVJmYm5WdFBqVXhNakExTlRBek1EWTBNVEl5TURROEwzSndNREZmWTJGeVpGOXVkVzArQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl1YjJOaGNtUStQQzl5Y0RBeFgyNXZZMkZ5WkQ0S0lDQWdJQ0FnSUNBZ0lEeHljREF4WDJGMGJUNDhMM0p3TURGZllYUnRQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZjRzl6UGp3dmNuQXdNVjl3YjNNK0NpQWdJQ0FnSUNBZ0lDQThjbkF3TVY5bWIzSmxhV2R1UGp3dmNuQXdNVjltYjNKbGFXZHVQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZZVzU1WDNSeVlXNCtQQzl5Y0RBeFgyRnVlVjkwY21GdVBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZmFHOTBZMkZ5WkQ1T1BDOXljREF4WDJodmRHTmhjbVErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjlqY0hOMFlYUStQQzl5Y0RBeFgyTndjM1JoZEQ0S0lDQWdJQ0FnSUNBZ0lEeHljREF4WDNSdWRIUmhkRDQ4TDNKd01ERmZkRzUwZEdGMFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZlpHeDVYM2RrY214cGJUNHhNREF3TUM0d01Ed3ZjbkF3TVY5a2JIbGZkMlJ5YkdsdFBnb2dJQ0FnSUNBZ0lDQWdQSEp3TURGZlpHeDVYM2RrY25WelpENHdMakF3UEM5eWNEQXhYMlJzZVY5M1pISjFjMlErQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl0ZEdoZmQyUnliR2x0UGpJd01EQXdMakF3UEM5eWNEQXhYMjEwYUY5M1pISnNhVzArQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl0ZEdoZmQyUnlkWE5rUGpBdU1EQThMM0p3TURGZmJYUm9YM2RrY25WelpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgyUmhkRjlzWVhOMGQyUnlQakU1TURBdE1ERXRNREU4TDNKd01ERmZaR0YwWDJ4aGMzUjNaSEkrQ2lBZ0lDQWdJQ0FnSUNBOGNuQXdNVjl0ZEdoZlpXRndiR2x0UGpJd01DNHdNRHd2Y25Bd01WOXRkR2hmWldGd2JHbHRQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZiWFJvWDJWaGNIVnpaRDR3TGpBd1BDOXljREF4WDIxMGFGOWxZWEIxYzJRK0NpQWdJQ0FnSUNBZ0lDQThjbkF3TVY5a1lYUmZiR0Z6ZEhCdGRENHhPVEF3TFRBeExUQXhQQzl5Y0RBeFgyUmhkRjlzWVhOMGNHMTBQZ29nSUNBZ0lDQWdJQ0FnUEhKd01ERmZaWEp5WDJOaGNtUStNRHd2Y25Bd01WOWxjbkpmWTJGeVpENEtJQ0FnSUNBZ0lDQWdJRHh5Y0RBeFgzQnliMlJmYm5WdFBrSkJRMEV4TVR3dmNuQXdNVjl3Y205a1gyNTFiVDRLSUNBZ0lDQWdJQ0FnSUR4eWNEQXhYMkpzYjJOclgyTnZaR1UrVUVnOEwzSndNREZmWW14dlkydGZZMjlrWlQ0S0lDQWdJQ0FnSUNBZ0lEeHljREF4WDJKc2IyTnJYMlJoZEdVK01qQXhOakE0TVRFOEwzSndNREZmWW14dlkydGZaR0YwWlQ0S0lDQWdJQ0FnSUNBZ0lEeHljREF4WDJsemMzVmxYMlJoZEdVK01qQXhOakF6TVRZOEwzSndNREZmYVhOemRXVmZaR0YwWlQ0S0lDQWdJQ0FnSUNBOEwzSndNREZmWTJGeVpGOXlaV052Y21RK0NpQWdJQ0FnSUR3dmNuQXdNVjl5WldNK0NpQWdJQ0E4TDBGVVRVaFVVREF4VDNCbGNtRjBhVzl1VW1WemNHOXVjMlUrQ2lBZ1BDOVRUMEZRTFVWT1ZqcENiMlI1UGdvOEwxTlBRVkF0UlU1V09rVnVkbVZzYjNCbFBnPT0iLAogICAgICAiaGVhZGVycyIgOiB7CiAgICAgICAgIkNvbnRlbnQtVHlwZSIgOiAidGV4dC94bWwiCiAgICAgIH0sCiAgICAgICJkYXRlIiA6IDE1MDIxMDc4ODc3MDgsCiAgICAgICJzdGF0dXMiIDogMjAwCiAgICB9LAogICAgImR1cmF0aW9uIiA6IDAsCiAgICAibmVzdGVkRXhjaGFuZ2VzIiA6IFsgXQogIH0gXQp9IF0\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 1051894376,
                      "status": "passed"
                    },
                    "name": "send a POST request to /credit-card-limits/preApproveCreditLimitIncrease with body \u0027{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"468628\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 104000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 58000,\n    \"currency\" : \"R\"\n  }\n}\u0027",
                    "match": {
                      "arguments": [
                        {
                          "val": "/credit-card-limits/preApproveCreditLimitIncrease"
                        },
                        {
                          "val": "{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"468628\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 104000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 58000,\n    \"currency\" : \"R\"\n  }\n}"
                        }
                      ],
                      "location": "PostTask Actor performAs"
                    },
                    "keyword": "performAs"
                  }
                ],
                "name": "When Gavin attempts to ",
                "match": {
                  "arguments": [
                    {
                      "val": "When"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void attemptsTo"
                },
                "keyword": "attemptsTo"
              }
            ],
            "line": 24,
            "name": "he enters an income of R104000 and expenses of R58000",
            "match": {
              "arguments": [
                {
                  "val": "104000",
                  "offset": 24
                },
                {
                  "val": "58000",
                  "offset": 48
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.heEntersAnIncomeOfRAndExpensesOfR(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 106957891,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 37643974,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 12421257,
                      "status": "passed"
                    },
                    "name": "see that the status code is \u003c200\u003e",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 5836608,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-type\" \"SUCCESS\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 3444635,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-code\" \"0000\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              }
            ],
            "line": 25,
            "name": "he is informed that he qualifies for a credit limit increase",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.theUserIsInformedThatSheQualifiesForACreditLimitIncrease()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69784735,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 25146397,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 3731913,
                      "status": "passed"
                    },
                    "name": "see that CreditCardLimitIncreaseStatus is \u003cAPPROVE\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 3088546,
                      "status": "passed"
                    },
                    "name": "see that MaximumPreApprovedCreditLimit is \u003c150000\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 3530509,
                      "status": "passed"
                    },
                    "name": "see that MinimumPreApprovedCreditLimit is \u003c101000\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              }
            ],
            "line": 26,
            "name": "he can capture a desired credit limit within the range calculated according to the Affordability Calculation Rule",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.sheCanCaptureADesiredCreditLimitWithinTheRangeCalculatedAccordingToTheAffordabilityCalculationRule()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 17,
            "name": "@android_wip"
          },
          {
            "line": 18,
            "name": "@ios_wip"
          },
          {
            "line": 19,
            "name": "@service_wip"
          },
          {
            "line": 20,
            "name": "@dev"
          }
        ]
      },
      {
        "line": 32,
        "name": "Income less than expenses",
        "description": "",
        "id": "enter-income-and-expenses;income-less-than-expenses",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 80530883,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 73628693,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICIxN2FlYTFhYi01NTIyLTRmMWUtYjI5OS0xYzE1YjljN2FjNzIiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvYXRtcy93ZWJTZXJ2aWNlL2F0bWh0cDAxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvc2VydmljZV93aXAvMi9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9sZXNzX3RoYW5fZXhwZW5zZXMvLipHYXZpbiIKICAgICAgfQogICAgfSwKICAgICJib2R5UGF0dGVybnMiIDogWyB7CiAgICAgICJjb250YWlucyIgOiAiR0VUQ0FSRFMiCiAgICB9IF0KICB9LAogICJyZXNwb25zZSIgOiB7CiAgICAic3RhdHVzIiA6IDIwMCwKICAgICJib2R5IiA6ICI8U09BUC1FTlY6RW52ZWxvcGUgeG1sbnM6c29hcD1cImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvXCJcbiAgICAgICAgICAgICAgICAgICB4bWxuczpTT0FQLUVOVj1cImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvXCI+XG4gIDxTT0FQLUVOVjpCb2R5PlxuICAgIDxBVE1IVFAwMU9wZXJhdGlvblJlc3BvbnNlIHhtbG5zPVwiaHR0cDovL3d3dy5BVE1IVFAwMS5BVE1SRVAwMS5SZXNwb25zZS5jb21cIj5cbiAgICAgIDxycDAxX3JlYz5cbiAgICAgICAgPHJwMDFfZnVuYz5HRVRDQVJEUzwvcnAwMV9mdW5jPlxuICAgICAgICA8cnAwMV91c2VyaWQ+PC9ycDAxX3VzZXJpZD5cbiAgICAgICAgPHJwMDFfaWJ0PjA8L3JwMDFfaWJ0PlxuICAgICAgICA8cnAwMV9icGlkPjUzMTQxMTQ2NDwvcnAwMV9icGlkPlxuICAgICAgICA8cnAwMV9jYXJkbnVtPjA8L3JwMDFfY2FyZG51bT5cbiAgICAgICAgPHJwMDFfYWNjdG51bT4wPC9ycDAxX2FjY3RudW0+XG4gICAgICAgIDxycDAxX2NoZ19saW0+MC4wMDwvcnAwMV9jaGdfbGltPlxuICAgICAgICA8cnAwMV9jaGdfbm9jYXJkPjwvcnAwMV9jaGdfbm9jYXJkPlxuICAgICAgICA8cnAwMV9jaGdfYXRtPjwvcnAwMV9jaGdfYXRtPlxuICAgICAgICA8cnAwMV9jaGdfcG9zPjwvcnAwMV9jaGdfcG9zPlxuICAgICAgICA8cnAwMV9jaGdfZm9yZWlnbj48L3JwMDFfY2hnX2ZvcmVpZ24+XG4gICAgICAgIDxycDAxX2NoZ19hbnlfdHJhbj48L3JwMDFfY2hnX2FueV90cmFuPlxuICAgICAgICA8cnAwMV9jaGdfaG90Y2FyZD48L3JwMDFfY2hnX2hvdGNhcmQ+XG4gICAgICAgIDxycDAxX2NoZ19jcHN0YXQ+PC9ycDAxX2NoZ19jcHN0YXQ+XG4gICAgICAgIDxycDAxX2NoZ190bnR0YXQ+PC9ycDAxX2NoZ190bnR0YXQ+XG4gICAgICAgIDxycDAxX3JldF9lcnJvcj4wPC9ycDAxX3JldF9lcnJvcj5cbiAgICAgICAgPHJwMDFfY2FyZF9yZWNvcmQ+XG4gICAgICAgICAgPHJwMDFfY2FyZF9udW0+NTEyMDU1MDMwNjQxMTU1MjwvcnAwMV9jYXJkX251bT5cbiAgICAgICAgICA8cnAwMV9ub2NhcmQ+PC9ycDAxX25vY2FyZD5cbiAgICAgICAgICA8cnAwMV9hdG0+PC9ycDAxX2F0bT5cbiAgICAgICAgICA8cnAwMV9wb3M+PC9ycDAxX3Bvcz5cbiAgICAgICAgICA8cnAwMV9mb3JlaWduPjwvcnAwMV9mb3JlaWduPlxuICAgICAgICAgIDxycDAxX2FueV90cmFuPjwvcnAwMV9hbnlfdHJhbj5cbiAgICAgICAgICA8cnAwMV9ob3RjYXJkPk48L3JwMDFfaG90Y2FyZD5cbiAgICAgICAgICA8cnAwMV9jcHN0YXQ+PC9ycDAxX2Nwc3RhdD5cbiAgICAgICAgICA8cnAwMV90bnR0YXQ+PC9ycDAxX3RudHRhdD5cbiAgICAgICAgICA8cnAwMV9kbHlfd2RybGltPjEwMDAuMDA8L3JwMDFfZGx5X3dkcmxpbT5cbiAgICAgICAgICA8cnAwMV9kbHlfd2RydXNkPjAuMDA8L3JwMDFfZGx5X3dkcnVzZD5cbiAgICAgICAgICA8cnAwMV9tdGhfd2RybGltPjMxMDAwLjAwPC9ycDAxX210aF93ZHJsaW0+XG4gICAgICAgICAgPHJwMDFfbXRoX3dkcnVzZD4wLjAwPC9ycDAxX210aF93ZHJ1c2Q+XG4gICAgICAgICAgPHJwMDFfZGF0X2xhc3R3ZHI+MTkwMC0wMS0wMTwvcnAwMV9kYXRfbGFzdHdkcj5cbiAgICAgICAgICA8cnAwMV9tdGhfZWFwbGltPjAuMDA8L3JwMDFfbXRoX2VhcGxpbT5cbiAgICAgICAgICA8cnAwMV9tdGhfZWFwdXNkPjAuMDA8L3JwMDFfbXRoX2VhcHVzZD5cbiAgICAgICAgICA8cnAwMV9kYXRfbGFzdHBtdD4xOTAwLTAxLTAxPC9ycDAxX2RhdF9sYXN0cG10PlxuICAgICAgICAgIDxycDAxX2Vycl9jYXJkPjA8L3JwMDFfZXJyX2NhcmQ+XG4gICAgICAgICAgPHJwMDFfcHJvZF9udW0+QkFDQTExPC9ycDAxX3Byb2RfbnVtPlxuICAgICAgICAgIDxycDAxX2Jsb2NrX2NvZGU+UEg8L3JwMDFfYmxvY2tfY29kZT5cbiAgICAgICAgICA8cnAwMV9ibG9ja19kYXRlPjIwMTYwODEwPC9ycDAxX2Jsb2NrX2RhdGU+XG4gICAgICAgICAgPHJwMDFfaXNzdWVfZGF0ZT4yMDE2MDMxNjwvcnAwMV9pc3N1ZV9kYXRlPlxuICAgICAgICA8L3JwMDFfY2FyZF9yZWNvcmQ+XG4gICAgICAgIDxycDAxX2NhcmRfcmVjb3JkPlxuICAgICAgICAgIDxycDAxX2NhcmRfbnVtPjUxMjA1NTAzMDY0MTIyMDQ8L3JwMDFfY2FyZF9udW0+XG4gICAgICAgICAgPHJwMDFfbm9jYXJkPjwvcnAwMV9ub2NhcmQ+XG4gICAgICAgICAgPHJwMDFfYXRtPjwvcnAwMV9hdG0+XG4gICAgICAgICAgPHJwMDFfcG9zPjwvcnAwMV9wb3M+XG4gICAgICAgICAgPHJwMDFfZm9yZWlnbj48L3JwMDFfZm9yZWlnbj5cbiAgICAgICAgICA8cnAwMV9hbnlfdHJhbj48L3JwMDFfYW55X3RyYW4+XG4gICAgICAgICAgPHJwMDFfaG90Y2FyZD5OPC9ycDAxX2hvdGNhcmQ+XG4gICAgICAgICAgPHJwMDFfY3BzdGF0PjwvcnAwMV9jcHN0YXQ+XG4gICAgICAgICAgPHJwMDFfdG50dGF0PjwvcnAwMV90bnR0YXQ+XG4gICAgICAgICAgPHJwMDFfZGx5X3dkcmxpbT4xMDAwMC4wMDwvcnAwMV9kbHlfd2RybGltPlxuICAgICAgICAgIDxycDAxX2RseV93ZHJ1c2Q+MC4wMDwvcnAwMV9kbHlfd2RydXNkPlxuICAgICAgICAgIDxycDAxX210aF93ZHJsaW0+MjAwMDAuMDA8L3JwMDFfbXRoX3dkcmxpbT5cbiAgICAgICAgICA8cnAwMV9tdGhfd2RydXNkPjAuMDA8L3JwMDFfbXRoX3dkcnVzZD5cbiAgICAgICAgICA8cnAwMV9kYXRfbGFzdHdkcj4xOTAwLTAxLTAxPC9ycDAxX2RhdF9sYXN0d2RyPlxuICAgICAgICAgIDxycDAxX210aF9lYXBsaW0+MjAwLjAwPC9ycDAxX210aF9lYXBsaW0+XG4gICAgICAgICAgPHJwMDFfbXRoX2VhcHVzZD4wLjAwPC9ycDAxX210aF9lYXB1c2Q+XG4gICAgICAgICAgPHJwMDFfZGF0X2xhc3RwbXQ+MTkwMC0wMS0wMTwvcnAwMV9kYXRfbGFzdHBtdD5cbiAgICAgICAgICA8cnAwMV9lcnJfY2FyZD4wPC9ycDAxX2Vycl9jYXJkPlxuICAgICAgICAgIDxycDAxX3Byb2RfbnVtPkJBQ0ExMTwvcnAwMV9wcm9kX251bT5cbiAgICAgICAgICA8cnAwMV9ibG9ja19jb2RlPlBIPC9ycDAxX2Jsb2NrX2NvZGU+XG4gICAgICAgICAgPHJwMDFfYmxvY2tfZGF0ZT4yMDE2MDgxMTwvcnAwMV9ibG9ja19kYXRlPlxuICAgICAgICAgIDxycDAxX2lzc3VlX2RhdGU+MjAxNjAzMTY8L3JwMDFfaXNzdWVfZGF0ZT5cbiAgICAgICAgPC9ycDAxX2NhcmRfcmVjb3JkPlxuICAgICAgPC9ycDAxX3JlYz5cbiAgICA8L0FUTUhUUDAxT3BlcmF0aW9uUmVzcG9uc2U+XG4gIDwvU09BUC1FTlY6Qm9keT5cbjwvU09BUC1FTlY6RW52ZWxvcGU+IiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIkNvbnRlbnQtVHlwZSIgOiAidGV4dC94bWwiCiAgICB9CiAgfSwKICAidXVpZCIgOiAiMTdhZWExYWItNTUyMi00ZjFlLWIyOTktMWMxNWI5YzdhYzcyIiwKICAicHJpb3JpdHkiIDogNzMKfSBd",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 20314902,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.atm_index.api.endpoint\" to return the file \"../../../get_cards.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.atm_index.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../../../get_cards.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI3YzkwNGVjYS1lNzI5LTQ3ZTEtOWQyZS0wYTg2N2ZiNzNjODkiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy92MS8uKiIsCiAgICAibWV0aG9kIiA6ICJQVVQiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvc2VydmljZV93aXAvMi9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9sZXNzX3RoYW5fZXhwZW5zZXMvLipHYXZpbiIKICAgICAgfQogICAgfQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgImJvZHkiIDogIntcbiAgXCJMaW1pdF9kZXRhaWxzXCI6IHtcbiAgICBcIkxpbWl0X3N0YXR1c1wiOiBcIkRcIixcbiAgICBcIkxpbWl0X2Ftb3VudFwiOiAxMjM0NSxcbiAgICBcIkxpbWl0X0NsaWVudF9FeHBlbnNlc1wiOiA0MzIxLFxuICAgIFwiTGltaXRfQ2xpZW50X0dyb3NzX0luY29tZVwiOiAyMTMxXG4gIH1cbn0iLAogICAgImhlYWRlcnMiIDogewogICAgICAiQ29udGVudC1UeXBlIiA6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogIH0sCiAgInV1aWQiIDogIjdjOTA0ZWNhLWU3MjktNDdlMS05ZDJlLTBhODY3ZmI3M2M4OSIsCiAgInByaW9yaXR5IiA6IDczCn0gXQ\u003d\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 13125014,
                      "status": "passed"
                    },
                    "name": "a PUT to \"card.cli.api.endpoint\" to return the file \"../update_limits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a PUT to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../update_limits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICJmMzYxOGQ1ZS0wY2MwLTRhNTItYTMxMC1hNWY2MWUwY2ZlZDAiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvc2Evc2VydmljZXMvdGVjaG5pY2FsL2ludGVncmF0aW9uL2ludGVncmF0aW9uL3BzX2dpX3NlY3VyaXR5bWFuYWdlbWVudHYxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvc2VydmljZV93aXAvMi9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9sZXNzX3RoYW5fZXhwZW5zZXMvLipHYXZpbiIKICAgICAgfQogICAgfQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgImJvZHkiIDogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PlxuPHNvYXBlbnY6RW52ZWxvcGUgeG1sbnM6aGVhZD1cImh0dHA6Ly9zdGFuZGFyZGJhbmsuY28uemEvc2Evc2VydmljZXMvR2xvYmFsL0lmeFYyXzEvSGVhZGVyVjJfMFwiXG4gICAgICAgICAgICAgICAgICB4bWxuczpzb2FwZW52PVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIj5cbiAgPHNvYXBlbnY6SGVhZGVyLz5cbiAgPHNvYXBlbnY6Qm9keT5cbiAgICA8YmFzZTpHZXRJRE51bWJlclJlc3BvbnNlIHhtbG5zOmhkcj1cImh0dHA6Ly9zdGFuZGFyZGJhbmsuY28uemEvc2Evc2VydmljZXMvR2xvYmFsL0lmeFYyXzEvSGVhZGVyVjJfMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxuczpiYXNlPVwiaHR0cDovL3N0YW5kYXJkYmFuay5jby56YS9zYS9zZXJ2aWNlcy90ZWNobmljYWwvSW50ZWdyYXRpb24vSW50ZWdyYXRpb24vUFNfR0lfU2VjdXJpdHlNYW5hZ2VtZW50VjEvQmFzZVwiPlxuICAgICAgPGhlYWQ6U3RhdHVzPlxuICAgICAgICA8aGVhZDpTdGF0dXNDb2RlPjA8L2hlYWQ6U3RhdHVzQ29kZT5cbiAgICAgICAgPGhlYWQ6U2V2ZXJpdHk+SW5mbzwvaGVhZDpTZXZlcml0eT5cbiAgICAgICAgPGhlYWQ6U3RhdHVzRGVzYz5ZT1VSIFJFUVVFU1QgV0FTIFNVQ0NFU1NGVUxMWSBQUk9DRVNTRUQ8L2hlYWQ6U3RhdHVzRGVzYz5cbiAgICAgIDwvaGVhZDpTdGF0dXM+XG4gICAgICA8aGVhZDpScVVJRD42M2FmOWRkZC1lZWQwLTRlNjQtYjg3Mi01NjU4ODIwY2Y5M2Y8L2hlYWQ6UnFVSUQ+XG4gICAgICA8aGVhZDpNc2dSc0hkcj5cbiAgICAgICAgPGhlYWQ6Q29udGV4dFJzSGRyPlxuICAgICAgICAgIDxoZWFkOlNlcnZlckR0PjIwMTYtMTEtMTZUMDk6MTI6NTQrMDI6MDA8L2hlYWQ6U2VydmVyRHQ+XG4gICAgICAgICAgPGhlYWQ6QnVzaW5lc3NTY29wZVhTQj5HSTwvaGVhZDpCdXNpbmVzc1Njb3BlWFNCPlxuICAgICAgICAgIDxoZWFkOkNvbnRlbnRUeXBlWFNCPlRFWFQvWE1MPC9oZWFkOkNvbnRlbnRUeXBlWFNCPlxuICAgICAgICAgIDxoZWFkOkludGVncmF0aW9uU2VydmVyWFNCPmVzYmRwczAxPC9oZWFkOkludGVncmF0aW9uU2VydmVyWFNCPlxuICAgICAgICAgIDxoZWFkOk1zZ0dyb3VwUmVmZXJlbmNlWFNCPjIxMWQwZjk0LWY4NjQtNDJmYS1hNjZiLWRkZjlkYjY1OTY2MDwvaGVhZDpNc2dHcm91cFJlZmVyZW5jZVhTQj5cbiAgICAgICAgPC9oZWFkOkNvbnRleHRSc0hkcj5cbiAgICAgIDwvaGVhZDpNc2dSc0hkcj5cbiAgICAgIDxiYXNlOklETnVtYmVyUmVzcG9uc2VJbmZvPlxuICAgICAgICA8YmFzZTpWZXJzaW9uRGF0YT5cbiAgICAgICAgICA8YmFzZTpUcmFuY29kZT5WRVRGPC9iYXNlOlRyYW5jb2RlPlxuICAgICAgICAgIDxiYXNlOlZlcnNpb24+MDAwMDA1PC9iYXNlOlZlcnNpb24+XG4gICAgICAgICAgPGJhc2U6VG9rZW4+MTI3LjAuMC4xRzwvYmFzZTpUb2tlbj5cbiAgICAgICAgICA8YmFzZTpDYXJkbm8+MDA1MTIwNTUwMzA2NDEyMjA0PC9iYXNlOkNhcmRubz5cbiAgICAgICAgICA8YmFzZTpDaGFubmVsSWQ+TUFQUDwvYmFzZTpDaGFubmVsSWQ+XG4gICAgICAgICAgPGJhc2U6VXNlcklkPjAwMjY8L2Jhc2U6VXNlcklkPlxuICAgICAgICAgIDxiYXNlOlVzZXJJYnQ+NDU4NjwvYmFzZTpVc2VySWJ0PlxuICAgICAgICAgIDxiYXNlOlJlc3BvbnNlQ29kZT4wMDAwPC9iYXNlOlJlc3BvbnNlQ29kZT5cbiAgICAgICAgPC9iYXNlOlZlcnNpb25EYXRhPlxuICAgICAgICA8YmFzZTpJRE51bWJlcj44MDA3MDg3MjgzMDg4PC9iYXNlOklETnVtYmVyPlxuICAgICAgICA8YmFzZTpCUElEPjUzMTQxMTQ2NDwvYmFzZTpCUElEPlxuICAgICAgICA8YmFzZTpDb21wYW55SUQvPlxuICAgICAgICA8YmFzZTpQYXNzcG9ydE4vPlxuICAgICAgICA8YmFzZTpQcmltYXJ5QWNjb3VudDE+NTEyMDU1MDMwNjQxMjIwNDwvYmFzZTpQcmltYXJ5QWNjb3VudDE+XG4gICAgICAgIDxiYXNlOlByaW1hcnlBY2NvdW50Mj4wMDAwMDAwMDAwMDAwMDAwPC9iYXNlOlByaW1hcnlBY2NvdW50Mj5cbiAgICAgICAgPGJhc2U6VGF4Ti8+XG4gICAgICA8L2Jhc2U6SUROdW1iZXJSZXNwb25zZUluZm8+XG4gICAgPC9iYXNlOkdldElETnVtYmVyUmVzcG9uc2U+XG4gIDwvc29hcGVudjpCb2R5PlxuPC9zb2FwZW52OkVudmVsb3BlPiIsCiAgICAiaGVhZGVycyIgOiB7CiAgICAgICJDb250ZW50LVR5cGUiIDogInRleHQveG1sIgogICAgfQogIH0sCiAgInV1aWQiIDogImYzNjE4ZDVlLTBjYzAtNGE1Mi1hMzEwLWE1ZjYxZTBjZmVkMCIsCiAgInByaW9yaXR5IiA6IDczCn0gXQ\u003d\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 25614841,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.sbsa.securitymanagement.endpointUrl\" to return the file \"../../../get_id_number.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.sbsa.securitymanagement.endpointUrl\""
                        },
                        {
                          "val": "return the file \"../../../get_id_number.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 33,
            "name": "that Gavin has selected to apply for a credit limit increase",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.theUserHasSelectedToApplyForACreditLimitIncrease()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25713017,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 22035163,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICIzYmE0YzBlYi0wNWUzLTQ5OTMtYmNhMS0yOGJhNzUzZGI0MDQiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy9wcmVsaW1pdHMvdjEvLioiLAogICAgIm1ldGhvZCIgOiAiR0VUIiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiA6IHsKICAgICAgICAibWF0Y2hlcyIgOiAiMTcyLjk5LjAuNS84MDgwL3NlcnZpY2Vfd2lwLzIvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9JbmNvbWVfbGVzc190aGFuX2V4cGVuc2VzLy4qR2F2aW4iCiAgICAgIH0KICAgIH0KICB9LAogICJyZXNwb25zZSIgOiB7CiAgICAic3RhdHVzIiA6IDIwMCwKICAgICJib2R5IiA6ICJ7XCJQcmVMaW1pdF9kZXRhaWxzXCI6IHtcbiAgXCJQcmVMaW1pdF9QcmltYXJ5X0NhcmRfTnVtYmVyXCI6IFwiNTEyMDU1MDMwNjQxMjIwNFwiLFxuICBcIlByZUxpbWl0X0JhbGFuY2VcIjogXCIyNS43MFwiLFxuICBcIlByZUxpbWl0X0N1cnJlbnRfQ3JlZGl0X0xpbWl0XCI6IFwiMTAwMDAwXCIsXG4gIFwiUHJlTGltaXRfRXN0aW1hdGVkX0dyb3NzX0luY29tZVwiOiBcIjEwMDAwMFwiLFxuICBcIlByZUxpbWl0X0J1cmVhdV9Db21tXCI6IDQ1NixcbiAgXCJQcmVMaW1pdF9Fc3RpbWF0ZWRfRXhwZW5zZXNcIjogXCI2MDAwMFwiLFxuICBcIlByZUxpbWl0X0VzdGltYXRlZF9TdXJwbHVzXCI6IFwiNDUuODdcIixcbiAgXCJQcmVMaW1pdF9Fc3RpbWF0ZWRfQWZmX0xpbWl0XCI6IFwiMzAwMC44OFwiLFxuICBcIlByZUxpbWl0X01heF9SaXNrX0xpbWl0X0luY3JlYXNlXCI6IFwiNTAwMDBcIixcbiAgXCJQcmVMaW1pdF9Nb250aGx5X1NlcnZpY2VfRmVlXCI6IFwiMjMuMjNcIixcbiAgXCJQcmVMaW1pdF9FZmZfSW50ZXJlc3RfUmF0ZVwiOiBcIjE4LjQ1XCIsXG4gIFwiUHJlTGltaXRfSW5zdXJhbmNlX09uX0FjY291bnRcIjogXCJZRVNcIixcbiAgXCJQcmVMaW1pdF9JbnN1cmFuY2VfTW9udGhseV9GZWVcIjogXCI0NS40NVwiLFxuICBcIlByZUxpbWl0X0luc3VyYW5jZV9SYXRlXCI6IFwiMjMuNTRcIixcbiAgXCJQcmVMaW1pdF9MZWFkX0V4cGlyeVwiOiAyMDE3MDMxNSxcbiAgXCJQcmVMaW1pdF9QRFwiOiBcIjMuNzhcIixcbiAgXCJQcmVMaW1pdF9BZmZvcmRhYmlsaXR5X0ZhY3RvclwiOiBcIjQuODdcIlxufX0iLAogICAgImhlYWRlcnMiIDogewogICAgICAiQ29udGVudC1UeXBlIiA6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogIH0sCiAgInV1aWQiIDogIjNiYTRjMGViLTA1ZTMtNDk5My1iY2ExLTI4YmE3NTNkYjQwNCIsCiAgInByaW9yaXR5IiA6IDczCn0gXQ\u003d\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 15004215,
                      "status": "passed"
                    },
                    "name": "a GET to \"card.cli.api.endpoint\" to merge the template \"../prelimits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a GET to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "merge the template \"../prelimits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "Then for requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then for requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 34,
            "name": "the bank estimates his income to be R100000 and his expenses R60000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 37
                },
                {
                  "val": "60000",
                  "offset": 62
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.theBankEstimatesIncomeToBeRAndHisExpensesR(int,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 214264177,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 203140370,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 186942802,
                      "status": "passed"
                    },
                    "name": "send a POST request to /credit-card-limits/preApproveCreditLimitIncrease with body \u0027{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"468628\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 104000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 105000,\n    \"currency\" : \"R\"\n  }\n}\u0027",
                    "match": {
                      "arguments": [
                        {
                          "val": "/credit-card-limits/preApproveCreditLimitIncrease"
                        },
                        {
                          "val": "{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"468628\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 104000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 105000,\n    \"currency\" : \"R\"\n  }\n}"
                        }
                      ],
                      "location": "PostTask Actor performAs"
                    },
                    "keyword": "performAs"
                  }
                ],
                "name": "When Gavin attempts to ",
                "match": {
                  "arguments": [
                    {
                      "val": "When"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void attemptsTo"
                },
                "keyword": "attemptsTo"
              }
            ],
            "line": 35,
            "name": "he enters an income of R104000 and expenses of R105000",
            "match": {
              "arguments": [
                {
                  "val": "104000",
                  "offset": 24
                },
                {
                  "val": "105000",
                  "offset": 48
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.heEntersAnIncomeOfRAndExpensesOfR(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53050991,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 26865581,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 3948821,
                      "status": "passed"
                    },
                    "name": "see that the status code is \u003c200\u003e",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 3679296,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-type\" \"SUCCESS\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 4173513,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-code\" \"0000\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              },
              {
                "result": {
                  "duration": 11148994,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 4039624,
                      "status": "passed"
                    },
                    "name": "see that the credit card limit increase status is \u003cDECLINE\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              }
            ],
            "line": 36,
            "name": "he is informed that he does not qualify",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.informTheCustomerThatTheyDoNotQualify()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 46107479,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 40691701,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 18913555,
                      "status": "passed"
                    },
                    "name": "the number of times a GET request was made to \"card.cli.api.endpoint\" is \u003c1\u003e",
                    "match": {
                      "arguments": [
                        {
                          "val": "the number of times a GET request was made to \"card.cli.api.endpoint\" is \u003c1\u003e"
                        }
                      ],
                      "location": " void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "result": {
                      "duration": 10440563,
                      "status": "passed"
                    },
                    "name": "the number of times a PUT request was made to \"card.cli.api.endpoint\" is \u003c1\u003e",
                    "match": {
                      "arguments": [
                        {
                          "val": "the number of times a PUT request was made to \"card.cli.api.endpoint\" is \u003c1\u003e"
                        }
                      ],
                      "location": " void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, verify that ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void verifyThat"
                },
                "keyword": "verifyThat"
              }
            ],
            "line": 37,
            "name": "a decline message is sent to the mainframe",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.sendBackADeclineMessageToMainframe()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 28,
            "name": "@android_wip"
          },
          {
            "line": 29,
            "name": "@ios_wip"
          },
          {
            "line": 30,
            "name": "@service_wip"
          },
          {
            "line": 31,
            "name": "@dev"
          }
        ]
      }
    ],
    "name": "Enter Income and Expenses",
    "description": "As a KYC-ed Standard Bank Customer\nI would like to enter my income and expenses\nin order to know what credit limit increase I would qualify for if any",
    "id": "enter-income-and-expenses",
    "keyword": "Feature",
    "uri": "CreditLimitIncreases/EnterIncomeAndExpenses.feature",
    "tags": [
      {
        "line": 1,
        "name": "@service_#PW-54460"
      },
      {
        "line": 2,
        "name": "@android_#PW-54461"
      },
      {
        "line": 3,
        "name": "@cps_#PW-54462"
      }
    ]
  }
]