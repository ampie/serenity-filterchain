[
  {
    "line": 4,
    "elements": [
      {
        "line": 12,
        "name": "Successful pre limit authorisation",
        "description": "",
        "id": "enter-income-and-expenses;successful-pre-limit-authorisation",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15016204374,
              "status": "passed"
            },
            "comments": [
              {
                "line": 13,
                "value": "#Belongs in ApplyForCreditLimitIncrease but put here to illustrate integration"
              }
            ],
            "children": [
              {
                "result": {
                  "duration": 502761144,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 47780802,
                      "status": "passed"
                    },
                    "name": "a ANY to \".*\" to record responses to \"services\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a ANY to \".*\""
                        },
                        {
                          "val": "record responses to \"services\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICJmOTNhZDRmMC0xZDMwLTQwOGEtODhkNC1jMGQ3Yjg2NWQyNjgiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy9wcmVsaW1pdHMvdjEvLioiLAogICAgIm1ldGhvZCIgOiAiR0VUIiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiA6IHsKICAgICAgICAibWF0Y2hlcyIgOiAiMTcyLjk5LjAuNS84MDgwL1NlcnZpY2VBY2NlcHRhbmNlLzQvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9TdWNjZXNzZnVsX3ByZV9saW1pdF9hdXRob3Jpc2F0aW9uLy4qR2F2aW4iCiAgICAgIH0KICAgIH0KICB9LAogICJyZXNwb25zZSIgOiB7CiAgICAic3RhdHVzIiA6IDIwMCwKICAgICJwcm94eUJhc2VVcmwiIDogImh0dHBzOi8vYXBpZ3NhLnN0YW5kYXJkYmFuay5jby56YTo1NDQzIgogIH0sCiAgInV1aWQiIDogImY5M2FkNGYwLTFkMzAtNDA4YS04OGQ0LWMwZDdiODY1ZDI2OCIsCiAgInByaW9yaXR5IiA6IDc1Cn0gXQ\u003d\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 319738411,
                      "status": "passed"
                    },
                    "name": "a GET to \"card.cli.api.endpoint\" to be intercepted",
                    "match": {
                      "arguments": [
                        {
                          "val": "a GET to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "be intercepted"
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICIzMzc5YWM0OC03MjBkLTRjOGYtODdjNi1jNmY1MGEzYjM4MGYiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2F0bXMvd2ViU2VydmljZS9hdG1odHAwMS4qIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL1N1Y2Nlc3NmdWxfcHJlX2xpbWl0X2F1dGhvcmlzYXRpb24vLipHYXZpbiIKICAgICAgfQogICAgfQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgInByb3h5QmFzZVVybCIgOiAiaHR0cHM6Ly9yY3EyLnNiaWMuY28uemE6MzY1MCIKICB9LAogICJ1dWlkIiA6ICIzMzc5YWM0OC03MjBkLTRjOGYtODdjNi1jNmY1MGEzYjM4MGYiLAogICJwcmlvcml0eSIgOiA3NQp9IF0\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 31117467,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.atm_index.api.endpoint\" to be intercepted",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.atm_index.api.endpoint\""
                        },
                        {
                          "val": "be intercepted"
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI5ZTIxZjlmYS1lOWJhLTQyOTQtOTMzNC0zNDc0ZTk1MTlkYjAiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL3NhL3NlcnZpY2VzL3RlY2huaWNhbC9pbnRlZ3JhdGlvbi9pbnRlZ3JhdGlvbi9wc19naV9zZWN1cml0eW1hbmFnZW1lbnR2MS4qIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL1N1Y2Nlc3NmdWxfcHJlX2xpbWl0X2F1dGhvcmlzYXRpb24vLipHYXZpbiIKICAgICAgfQogICAgfQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgInByb3h5QmFzZVVybCIgOiAiaHR0cHM6Ly9lc2JkcHUuc3RhbmRhcmRiYW5rLmNvLnphOjQyMDQiCiAgfSwKICAidXVpZCIgOiAiOWUyMWY5ZmEtZTliYS00Mjk0LTkzMzQtMzQ3NGU5NTE5ZGIwIiwKICAicHJpb3JpdHkiIDogNzUKfSBd",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 11854309,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.sbsa.securitymanagement.endpointUrl\" to be intercepted",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.sbsa.securitymanagement.endpointUrl\""
                        },
                        {
                          "val": "be intercepted"
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 30657300,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.sbsa.customer.management.endpointUrl\" to return the file \"../../kyc_fulfilled_response.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.sbsa.customer.management.endpointUrl\""
                        },
                        {
                          "val": "return the file \"../../kyc_fulfilled_response.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 14,
            "name": "that Gavin has a credit card \u00275520578340384028\u0027 for which he qualifies for a pre-approved credit limit increase",
            "match": {
              "arguments": [
                {
                  "val": "5520578340384028",
                  "offset": 30
                }
              ],
              "location": "ApplyForCreditLimitIncreaseSteps.givenCardOverviewEntryPoint(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5431957110,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 5131716416,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 5109609957,
                      "status": "passed"
                    },
                    "name": "send a POST request to /credit-card-limits/preApprovalPermission with body \u0027{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"467910\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5520578340384028\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  }\n}\u0027",
                    "match": {
                      "arguments": [
                        {
                          "val": "/credit-card-limits/preApprovalPermission"
                        },
                        {
                          "val": "{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"467910\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5520578340384028\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  }\n}"
                        }
                      ],
                      "location": "PostTask Actor performAs"
                    },
                    "keyword": "performAs"
                  }
                ],
                "name": "When Gavin attempts to ",
                "match": {
                  "arguments": [
                    {
                      "val": "When"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void attemptsTo"
                },
                "keyword": "attemptsTo"
              }
            ],
            "line": 15,
            "name": "when he views the \u0027Card Overview\u0027 screen of the card",
            "match": {
              "location": "ApplyForCreditLimitIncreaseSteps.whenCardOverviewEntryPoint()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 405268244,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 53336532,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 13629855,
                      "status": "passed"
                    },
                    "name": "see that the status code is \u003c200\u003e",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 18049697,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-type\" \"SUCCESS\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 5889692,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-code\" \"0000\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              },
              {
                "result": {
                  "duration": 68643828,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 54244148,
                      "status": "passed"
                    },
                    "name": "the number of times a GET request was made to \"card.cli.api.endpoint\" is \u003c1\u003e",
                    "match": {
                      "arguments": [
                        {
                          "val": "the number of times a GET request was made to \"card.cli.api.endpoint\" is \u003c1\u003e"
                        }
                      ],
                      "location": " void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, verify that ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void verifyThat"
                },
                "keyword": "verifyThat"
              },
              {
                "result": {
                  "duration": 41006272,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 15440999,
                      "status": "passed"
                    },
                    "name": "see that the flag that indicates creditLimitIncreasePreApproval is allowed is \u003ctrue\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 5379237,
                      "status": "passed"
                    },
                    "name": "see that the current credit limit amount is \u003c10000.00\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 3150699,
                      "status": "passed"
                    },
                    "name": "see that the flag that indicates KYC Compliance is \u003ctrue\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              }
            ],
            "line": 16,
            "name": "he is given the option to apply for a credit limit increase",
            "match": {
              "location": "ApplyForCreditLimitIncreaseSteps.thenCardOverviewEntryPoint()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 9,
            "name": "@cps_wip"
          },
          {
            "line": 10,
            "name": "@service_wip"
          },
          {
            "line": 11,
            "name": "@dev"
          }
        ]
      },
      {
        "line": 22,
        "name": "Income and expenses within the allowed ranges",
        "description": "",
        "id": "enter-income-and-expenses;income-and-expenses-within-the-allowed-ranges",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 143471965,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 133756618,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICJmNGExYWI5Zi0zNTRjLTRjMTMtODFhNC1hNWZkZTk5YTM4MGMiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvYXRtcy93ZWJTZXJ2aWNlL2F0bWh0cDAxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfd2l0aGluX3RoZV9hbGxvd2VkX3Jhbmdlcy8uKkdhdmluIgogICAgICB9CiAgICB9LAogICAgImJvZHlQYXR0ZXJucyIgOiBbIHsKICAgICAgImNvbnRhaW5zIiA6ICJHRVRDQVJEUyIKICAgIH0gXQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgImJvZHkiIDogIjxTT0FQLUVOVjpFbnZlbG9wZSB4bWxuczpzb2FwPVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIlxuICAgICAgICAgICAgICAgICAgIHhtbG5zOlNPQVAtRU5WPVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIj5cbiAgPFNPQVAtRU5WOkJvZHk+XG4gICAgPEFUTUhUUDAxT3BlcmF0aW9uUmVzcG9uc2UgeG1sbnM9XCJodHRwOi8vd3d3LkFUTUhUUDAxLkFUTVJFUDAxLlJlc3BvbnNlLmNvbVwiPlxuICAgICAgPHJwMDFfcmVjPlxuICAgICAgICA8cnAwMV9mdW5jPkdFVENBUkRTPC9ycDAxX2Z1bmM+XG4gICAgICAgIDxycDAxX3VzZXJpZD48L3JwMDFfdXNlcmlkPlxuICAgICAgICA8cnAwMV9pYnQ+MDwvcnAwMV9pYnQ+XG4gICAgICAgIDxycDAxX2JwaWQ+NTMxNDExNDY0PC9ycDAxX2JwaWQ+XG4gICAgICAgIDxycDAxX2NhcmRudW0+MDwvcnAwMV9jYXJkbnVtPlxuICAgICAgICA8cnAwMV9hY2N0bnVtPjA8L3JwMDFfYWNjdG51bT5cbiAgICAgICAgPHJwMDFfY2hnX2xpbT4wLjAwPC9ycDAxX2NoZ19saW0+XG4gICAgICAgIDxycDAxX2NoZ19ub2NhcmQ+PC9ycDAxX2NoZ19ub2NhcmQ+XG4gICAgICAgIDxycDAxX2NoZ19hdG0+PC9ycDAxX2NoZ19hdG0+XG4gICAgICAgIDxycDAxX2NoZ19wb3M+PC9ycDAxX2NoZ19wb3M+XG4gICAgICAgIDxycDAxX2NoZ19mb3JlaWduPjwvcnAwMV9jaGdfZm9yZWlnbj5cbiAgICAgICAgPHJwMDFfY2hnX2FueV90cmFuPjwvcnAwMV9jaGdfYW55X3RyYW4+XG4gICAgICAgIDxycDAxX2NoZ19ob3RjYXJkPjwvcnAwMV9jaGdfaG90Y2FyZD5cbiAgICAgICAgPHJwMDFfY2hnX2Nwc3RhdD48L3JwMDFfY2hnX2Nwc3RhdD5cbiAgICAgICAgPHJwMDFfY2hnX3RudHRhdD48L3JwMDFfY2hnX3RudHRhdD5cbiAgICAgICAgPHJwMDFfcmV0X2Vycm9yPjA8L3JwMDFfcmV0X2Vycm9yPlxuICAgICAgICA8cnAwMV9jYXJkX3JlY29yZD5cbiAgICAgICAgICA8cnAwMV9jYXJkX251bT41MTIwNTUwMzA2NDExNTUyPC9ycDAxX2NhcmRfbnVtPlxuICAgICAgICAgIDxycDAxX25vY2FyZD48L3JwMDFfbm9jYXJkPlxuICAgICAgICAgIDxycDAxX2F0bT48L3JwMDFfYXRtPlxuICAgICAgICAgIDxycDAxX3Bvcz48L3JwMDFfcG9zPlxuICAgICAgICAgIDxycDAxX2ZvcmVpZ24+PC9ycDAxX2ZvcmVpZ24+XG4gICAgICAgICAgPHJwMDFfYW55X3RyYW4+PC9ycDAxX2FueV90cmFuPlxuICAgICAgICAgIDxycDAxX2hvdGNhcmQ+TjwvcnAwMV9ob3RjYXJkPlxuICAgICAgICAgIDxycDAxX2Nwc3RhdD48L3JwMDFfY3BzdGF0PlxuICAgICAgICAgIDxycDAxX3RudHRhdD48L3JwMDFfdG50dGF0PlxuICAgICAgICAgIDxycDAxX2RseV93ZHJsaW0+MTAwMC4wMDwvcnAwMV9kbHlfd2RybGltPlxuICAgICAgICAgIDxycDAxX2RseV93ZHJ1c2Q+MC4wMDwvcnAwMV9kbHlfd2RydXNkPlxuICAgICAgICAgIDxycDAxX210aF93ZHJsaW0+MzEwMDAuMDA8L3JwMDFfbXRoX3dkcmxpbT5cbiAgICAgICAgICA8cnAwMV9tdGhfd2RydXNkPjAuMDA8L3JwMDFfbXRoX3dkcnVzZD5cbiAgICAgICAgICA8cnAwMV9kYXRfbGFzdHdkcj4xOTAwLTAxLTAxPC9ycDAxX2RhdF9sYXN0d2RyPlxuICAgICAgICAgIDxycDAxX210aF9lYXBsaW0+MC4wMDwvcnAwMV9tdGhfZWFwbGltPlxuICAgICAgICAgIDxycDAxX210aF9lYXB1c2Q+MC4wMDwvcnAwMV9tdGhfZWFwdXNkPlxuICAgICAgICAgIDxycDAxX2RhdF9sYXN0cG10PjE5MDAtMDEtMDE8L3JwMDFfZGF0X2xhc3RwbXQ+XG4gICAgICAgICAgPHJwMDFfZXJyX2NhcmQ+MDwvcnAwMV9lcnJfY2FyZD5cbiAgICAgICAgICA8cnAwMV9wcm9kX251bT5CQUNBMTE8L3JwMDFfcHJvZF9udW0+XG4gICAgICAgICAgPHJwMDFfYmxvY2tfY29kZT5QSDwvcnAwMV9ibG9ja19jb2RlPlxuICAgICAgICAgIDxycDAxX2Jsb2NrX2RhdGU+MjAxNjA4MTA8L3JwMDFfYmxvY2tfZGF0ZT5cbiAgICAgICAgICA8cnAwMV9pc3N1ZV9kYXRlPjIwMTYwMzE2PC9ycDAxX2lzc3VlX2RhdGU+XG4gICAgICAgIDwvcnAwMV9jYXJkX3JlY29yZD5cbiAgICAgICAgPHJwMDFfY2FyZF9yZWNvcmQ+XG4gICAgICAgICAgPHJwMDFfY2FyZF9udW0+NTEyMDU1MDMwNjQxMjIwNDwvcnAwMV9jYXJkX251bT5cbiAgICAgICAgICA8cnAwMV9ub2NhcmQ+PC9ycDAxX25vY2FyZD5cbiAgICAgICAgICA8cnAwMV9hdG0+PC9ycDAxX2F0bT5cbiAgICAgICAgICA8cnAwMV9wb3M+PC9ycDAxX3Bvcz5cbiAgICAgICAgICA8cnAwMV9mb3JlaWduPjwvcnAwMV9mb3JlaWduPlxuICAgICAgICAgIDxycDAxX2FueV90cmFuPjwvcnAwMV9hbnlfdHJhbj5cbiAgICAgICAgICA8cnAwMV9ob3RjYXJkPk48L3JwMDFfaG90Y2FyZD5cbiAgICAgICAgICA8cnAwMV9jcHN0YXQ+PC9ycDAxX2Nwc3RhdD5cbiAgICAgICAgICA8cnAwMV90bnR0YXQ+PC9ycDAxX3RudHRhdD5cbiAgICAgICAgICA8cnAwMV9kbHlfd2RybGltPjEwMDAwLjAwPC9ycDAxX2RseV93ZHJsaW0+XG4gICAgICAgICAgPHJwMDFfZGx5X3dkcnVzZD4wLjAwPC9ycDAxX2RseV93ZHJ1c2Q+XG4gICAgICAgICAgPHJwMDFfbXRoX3dkcmxpbT4yMDAwMC4wMDwvcnAwMV9tdGhfd2RybGltPlxuICAgICAgICAgIDxycDAxX210aF93ZHJ1c2Q+MC4wMDwvcnAwMV9tdGhfd2RydXNkPlxuICAgICAgICAgIDxycDAxX2RhdF9sYXN0d2RyPjE5MDAtMDEtMDE8L3JwMDFfZGF0X2xhc3R3ZHI+XG4gICAgICAgICAgPHJwMDFfbXRoX2VhcGxpbT4yMDAuMDA8L3JwMDFfbXRoX2VhcGxpbT5cbiAgICAgICAgICA8cnAwMV9tdGhfZWFwdXNkPjAuMDA8L3JwMDFfbXRoX2VhcHVzZD5cbiAgICAgICAgICA8cnAwMV9kYXRfbGFzdHBtdD4xOTAwLTAxLTAxPC9ycDAxX2RhdF9sYXN0cG10PlxuICAgICAgICAgIDxycDAxX2Vycl9jYXJkPjA8L3JwMDFfZXJyX2NhcmQ+XG4gICAgICAgICAgPHJwMDFfcHJvZF9udW0+QkFDQTExPC9ycDAxX3Byb2RfbnVtPlxuICAgICAgICAgIDxycDAxX2Jsb2NrX2NvZGU+UEg8L3JwMDFfYmxvY2tfY29kZT5cbiAgICAgICAgICA8cnAwMV9ibG9ja19kYXRlPjIwMTYwODExPC9ycDAxX2Jsb2NrX2RhdGU+XG4gICAgICAgICAgPHJwMDFfaXNzdWVfZGF0ZT4yMDE2MDMxNjwvcnAwMV9pc3N1ZV9kYXRlPlxuICAgICAgICA8L3JwMDFfY2FyZF9yZWNvcmQ+XG4gICAgICA8L3JwMDFfcmVjPlxuICAgIDwvQVRNSFRQMDFPcGVyYXRpb25SZXNwb25zZT5cbiAgPC9TT0FQLUVOVjpCb2R5PlxuPC9TT0FQLUVOVjpFbnZlbG9wZT4iLAogICAgImhlYWRlcnMiIDogewogICAgICAiQ29udGVudC1UeXBlIiA6ICJ0ZXh0L3htbCIKICAgIH0KICB9LAogICJ1dWlkIiA6ICJmNGExYWI5Zi0zNTRjLTRjMTMtODFhNC1hNWZkZTk5YTM4MGMiLAogICJwcmlvcml0eSIgOiA3Mwp9IF0\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 46239445,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.atm_index.api.endpoint\" to return the file \"../../../get_cards.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.atm_index.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../../../get_cards.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICJmY2YwOGYzOC1lODNkLTRhNTItYmQ1MS00MGJiNzgzYWMxNWMiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy92MS8uKiIsCiAgICAibWV0aG9kIiA6ICJQVVQiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfd2l0aGluX3RoZV9hbGxvd2VkX3Jhbmdlcy8uKkdhdmluIgogICAgICB9CiAgICB9CiAgfSwKICAicmVzcG9uc2UiIDogewogICAgInN0YXR1cyIgOiAyMDAsCiAgICAiYm9keSIgOiAie1xuICBcIkxpbWl0X2RldGFpbHNcIjoge1xuICAgIFwiTGltaXRfc3RhdHVzXCI6IFwiRFwiLFxuICAgIFwiTGltaXRfYW1vdW50XCI6IDEyMzQ1LFxuICAgIFwiTGltaXRfQ2xpZW50X0V4cGVuc2VzXCI6IDQzMjEsXG4gICAgXCJMaW1pdF9DbGllbnRfR3Jvc3NfSW5jb21lXCI6IDIxMzFcbiAgfVxufSIsCiAgICAiaGVhZGVycyIgOiB7CiAgICAgICJDb250ZW50LVR5cGUiIDogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgfSwKICAidXVpZCIgOiAiZmNmMDhmMzgtZTgzZC00YTUyLWJkNTEtNDBiYjc4M2FjMTVjIiwKICAicHJpb3JpdHkiIDogNzMKfSBd",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 27470750,
                      "status": "passed"
                    },
                    "name": "a PUT to \"card.cli.api.endpoint\" to return the file \"../update_limits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a PUT to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../update_limits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI1MmQ4NWU2My0yMjNlLTQxN2MtYmQ1Ni03YzQ2NDhmZmJjZmMiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvc2Evc2VydmljZXMvdGVjaG5pY2FsL2ludGVncmF0aW9uL2ludGVncmF0aW9uL3BzX2dpX3NlY3VyaXR5bWFuYWdlbWVudHYxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfd2l0aGluX3RoZV9hbGxvd2VkX3Jhbmdlcy8uKkdhdmluIgogICAgICB9CiAgICB9CiAgfSwKICAicmVzcG9uc2UiIDogewogICAgInN0YXR1cyIgOiAyMDAsCiAgICAiYm9keSIgOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+XG48c29hcGVudjpFbnZlbG9wZSB4bWxuczpoZWFkPVwiaHR0cDovL3N0YW5kYXJkYmFuay5jby56YS9zYS9zZXJ2aWNlcy9HbG9iYWwvSWZ4VjJfMS9IZWFkZXJWMl8wXCJcbiAgICAgICAgICAgICAgICAgIHhtbG5zOnNvYXBlbnY9XCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VudmVsb3BlL1wiPlxuICA8c29hcGVudjpIZWFkZXIvPlxuICA8c29hcGVudjpCb2R5PlxuICAgIDxiYXNlOkdldElETnVtYmVyUmVzcG9uc2UgeG1sbnM6aGRyPVwiaHR0cDovL3N0YW5kYXJkYmFuay5jby56YS9zYS9zZXJ2aWNlcy9HbG9iYWwvSWZ4VjJfMS9IZWFkZXJWMl8wXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zOmJhc2U9XCJodHRwOi8vc3RhbmRhcmRiYW5rLmNvLnphL3NhL3NlcnZpY2VzL3RlY2huaWNhbC9JbnRlZ3JhdGlvbi9JbnRlZ3JhdGlvbi9QU19HSV9TZWN1cml0eU1hbmFnZW1lbnRWMS9CYXNlXCI+XG4gICAgICA8aGVhZDpTdGF0dXM+XG4gICAgICAgIDxoZWFkOlN0YXR1c0NvZGU+MDwvaGVhZDpTdGF0dXNDb2RlPlxuICAgICAgICA8aGVhZDpTZXZlcml0eT5JbmZvPC9oZWFkOlNldmVyaXR5PlxuICAgICAgICA8aGVhZDpTdGF0dXNEZXNjPllPVVIgUkVRVUVTVCBXQVMgU1VDQ0VTU0ZVTExZIFBST0NFU1NFRDwvaGVhZDpTdGF0dXNEZXNjPlxuICAgICAgPC9oZWFkOlN0YXR1cz5cbiAgICAgIDxoZWFkOlJxVUlEPjYzYWY5ZGRkLWVlZDAtNGU2NC1iODcyLTU2NTg4MjBjZjkzZjwvaGVhZDpScVVJRD5cbiAgICAgIDxoZWFkOk1zZ1JzSGRyPlxuICAgICAgICA8aGVhZDpDb250ZXh0UnNIZHI+XG4gICAgICAgICAgPGhlYWQ6U2VydmVyRHQ+MjAxNi0xMS0xNlQwOToxMjo1NCswMjowMDwvaGVhZDpTZXJ2ZXJEdD5cbiAgICAgICAgICA8aGVhZDpCdXNpbmVzc1Njb3BlWFNCPkdJPC9oZWFkOkJ1c2luZXNzU2NvcGVYU0I+XG4gICAgICAgICAgPGhlYWQ6Q29udGVudFR5cGVYU0I+VEVYVC9YTUw8L2hlYWQ6Q29udGVudFR5cGVYU0I+XG4gICAgICAgICAgPGhlYWQ6SW50ZWdyYXRpb25TZXJ2ZXJYU0I+ZXNiZHBzMDE8L2hlYWQ6SW50ZWdyYXRpb25TZXJ2ZXJYU0I+XG4gICAgICAgICAgPGhlYWQ6TXNnR3JvdXBSZWZlcmVuY2VYU0I+MjExZDBmOTQtZjg2NC00MmZhLWE2NmItZGRmOWRiNjU5NjYwPC9oZWFkOk1zZ0dyb3VwUmVmZXJlbmNlWFNCPlxuICAgICAgICA8L2hlYWQ6Q29udGV4dFJzSGRyPlxuICAgICAgPC9oZWFkOk1zZ1JzSGRyPlxuICAgICAgPGJhc2U6SUROdW1iZXJSZXNwb25zZUluZm8+XG4gICAgICAgIDxiYXNlOlZlcnNpb25EYXRhPlxuICAgICAgICAgIDxiYXNlOlRyYW5jb2RlPlZFVEY8L2Jhc2U6VHJhbmNvZGU+XG4gICAgICAgICAgPGJhc2U6VmVyc2lvbj4wMDAwMDU8L2Jhc2U6VmVyc2lvbj5cbiAgICAgICAgICA8YmFzZTpUb2tlbj4xMjcuMC4wLjFHPC9iYXNlOlRva2VuPlxuICAgICAgICAgIDxiYXNlOkNhcmRubz4wMDUxMjA1NTAzMDY0MTIyMDQ8L2Jhc2U6Q2FyZG5vPlxuICAgICAgICAgIDxiYXNlOkNoYW5uZWxJZD5NQVBQPC9iYXNlOkNoYW5uZWxJZD5cbiAgICAgICAgICA8YmFzZTpVc2VySWQ+MDAyNjwvYmFzZTpVc2VySWQ+XG4gICAgICAgICAgPGJhc2U6VXNlcklidD40NTg2PC9iYXNlOlVzZXJJYnQ+XG4gICAgICAgICAgPGJhc2U6UmVzcG9uc2VDb2RlPjAwMDA8L2Jhc2U6UmVzcG9uc2VDb2RlPlxuICAgICAgICA8L2Jhc2U6VmVyc2lvbkRhdGE+XG4gICAgICAgIDxiYXNlOklETnVtYmVyPjgwMDcwODcyODMwODg8L2Jhc2U6SUROdW1iZXI+XG4gICAgICAgIDxiYXNlOkJQSUQ+NTMxNDExNDY0PC9iYXNlOkJQSUQ+XG4gICAgICAgIDxiYXNlOkNvbXBhbnlJRC8+XG4gICAgICAgIDxiYXNlOlBhc3Nwb3J0Ti8+XG4gICAgICAgIDxiYXNlOlByaW1hcnlBY2NvdW50MT41MTIwNTUwMzA2NDEyMjA0PC9iYXNlOlByaW1hcnlBY2NvdW50MT5cbiAgICAgICAgPGJhc2U6UHJpbWFyeUFjY291bnQyPjAwMDAwMDAwMDAwMDAwMDA8L2Jhc2U6UHJpbWFyeUFjY291bnQyPlxuICAgICAgICA8YmFzZTpUYXhOLz5cbiAgICAgIDwvYmFzZTpJRE51bWJlclJlc3BvbnNlSW5mbz5cbiAgICA8L2Jhc2U6R2V0SUROdW1iZXJSZXNwb25zZT5cbiAgPC9zb2FwZW52OkJvZHk+XG48L3NvYXBlbnY6RW52ZWxvcGU+IiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIkNvbnRlbnQtVHlwZSIgOiAidGV4dC94bWwiCiAgICB9CiAgfSwKICAidXVpZCIgOiAiNTJkODVlNjMtMjIzZS00MTdjLWJkNTYtN2M0NjQ4ZmZiY2ZjIiwKICAicHJpb3JpdHkiIDogNzMKfSBd",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 33986910,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.sbsa.securitymanagement.endpointUrl\" to return the file \"../../../get_id_number.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.sbsa.securitymanagement.endpointUrl\""
                        },
                        {
                          "val": "return the file \"../../../get_id_number.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 23,
            "name": "that Gavin has selected to apply for a credit limit increase",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.theUserHasSelectedToApplyForACreditLimitIncrease()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 156071656,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 145164084,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI3NDI5NGZhMS1kMTRmLTRhOGQtOGQxNy0zZTEzNDMzMTE4NTMiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy9wcmVsaW1pdHMvdjEvLioiLAogICAgIm1ldGhvZCIgOiAiR0VUIiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiA6IHsKICAgICAgICAibWF0Y2hlcyIgOiAiMTcyLjk5LjAuNS84MDgwL1NlcnZpY2VBY2NlcHRhbmNlLzQvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9JbmNvbWVfYW5kX2V4cGVuc2VzX3dpdGhpbl90aGVfYWxsb3dlZF9yYW5nZXMvLipHYXZpbiIKICAgICAgfQogICAgfQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgImJvZHkiIDogIntcIlByZUxpbWl0X2RldGFpbHNcIjoge1xuICBcIlByZUxpbWl0X1ByaW1hcnlfQ2FyZF9OdW1iZXJcIjogXCI1MTIwNTUwMzA2NDEyMjA0XCIsXG4gIFwiUHJlTGltaXRfQmFsYW5jZVwiOiBcIjI1LjcwXCIsXG4gIFwiUHJlTGltaXRfQ3VycmVudF9DcmVkaXRfTGltaXRcIjogXCIxMDAwMDBcIixcbiAgXCJQcmVMaW1pdF9Fc3RpbWF0ZWRfR3Jvc3NfSW5jb21lXCI6IFwiMTAwMDAwXCIsXG4gIFwiUHJlTGltaXRfQnVyZWF1X0NvbW1cIjogNDU2LFxuICBcIlByZUxpbWl0X0VzdGltYXRlZF9FeHBlbnNlc1wiOiBcIjYwMDAwXCIsXG4gIFwiUHJlTGltaXRfRXN0aW1hdGVkX1N1cnBsdXNcIjogXCI0NS44N1wiLFxuICBcIlByZUxpbWl0X0VzdGltYXRlZF9BZmZfTGltaXRcIjogXCIzMDAwLjg4XCIsXG4gIFwiUHJlTGltaXRfTWF4X1Jpc2tfTGltaXRfSW5jcmVhc2VcIjogXCI1MDAwMFwiLFxuICBcIlByZUxpbWl0X01vbnRobHlfU2VydmljZV9GZWVcIjogXCIyMy4yM1wiLFxuICBcIlByZUxpbWl0X0VmZl9JbnRlcmVzdF9SYXRlXCI6IFwiMTguNDVcIixcbiAgXCJQcmVMaW1pdF9JbnN1cmFuY2VfT25fQWNjb3VudFwiOiBcIllFU1wiLFxuICBcIlByZUxpbWl0X0luc3VyYW5jZV9Nb250aGx5X0ZlZVwiOiBcIjQ1LjQ1XCIsXG4gIFwiUHJlTGltaXRfSW5zdXJhbmNlX1JhdGVcIjogXCIyMy41NFwiLFxuICBcIlByZUxpbWl0X0xlYWRfRXhwaXJ5XCI6IDIwMTcwMzE1LFxuICBcIlByZUxpbWl0X1BEXCI6IFwiMy43OFwiLFxuICBcIlByZUxpbWl0X0FmZm9yZGFiaWxpdHlfRmFjdG9yXCI6IFwiNC44N1wiXG59fSIsCiAgICAiaGVhZGVycyIgOiB7CiAgICAgICJDb250ZW50LVR5cGUiIDogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgfSwKICAidXVpZCIgOiAiNzQyOTRmYTEtZDE0Zi00YThkLThkMTctM2UxMzQzMzExODUzIiwKICAicHJpb3JpdHkiIDogNzMKfSBd",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 106069970,
                      "status": "passed"
                    },
                    "name": "a GET to \"card.cli.api.endpoint\" to merge the template \"../prelimits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a GET to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "merge the template \"../prelimits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "Then for requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then for requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 24,
            "name": "the bank estimates his income to be R100000 and his expenses R60000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 37
                },
                {
                  "val": "60000",
                  "offset": 62
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.theBankEstimatesIncomeToBeRAndHisExpensesR(int,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 623536168,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 589740517,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "\u003d\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 565700411,
                      "status": "passed"
                    },
                    "name": "send a POST request to /credit-card-limits/preApproveCreditLimitIncrease with body \u0027{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"467910\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 104000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 58000,\n    \"currency\" : \"R\"\n  }\n}\u0027",
                    "match": {
                      "arguments": [
                        {
                          "val": "/credit-card-limits/preApproveCreditLimitIncrease"
                        },
                        {
                          "val": "{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"467910\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 104000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 58000,\n    \"currency\" : \"R\"\n  }\n}"
                        }
                      ],
                      "location": "PostTask Actor performAs"
                    },
                    "keyword": "performAs"
                  }
                ],
                "name": "When Gavin attempts to ",
                "match": {
                  "arguments": [
                    {
                      "val": "When"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void attemptsTo"
                },
                "keyword": "attemptsTo"
              }
            ],
            "line": 25,
            "name": "he enters an income of R104000 and expenses of R58000",
            "match": {
              "arguments": [
                {
                  "val": "104000",
                  "offset": 24
                },
                {
                  "val": "58000",
                  "offset": 48
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.heEntersAnIncomeOfRAndExpensesOfR(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 45952452,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 35846958,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 5628480,
                      "status": "passed"
                    },
                    "name": "see that the status code is \u003c200\u003e",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 4278328,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-type\" \"SUCCESS\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 9270262,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-code\" \"0000\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              }
            ],
            "line": 26,
            "name": "he is informed that he qualifies for a credit limit increase",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.theUserIsInformedThatSheQualifiesForACreditLimitIncrease()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 58706521,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 26493111,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 3313216,
                      "status": "passed"
                    },
                    "name": "see that CreditCardLimitIncreaseStatus is \u003cAPPROVE\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 3216342,
                      "status": "passed"
                    },
                    "name": "see that MaximumPreApprovedCreditLimit is \u003c150000\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 3193373,
                      "status": "passed"
                    },
                    "name": "see that MinimumPreApprovedCreditLimit is \u003c101000\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              }
            ],
            "line": 27,
            "name": "he can capture a desired credit limit within the range calculated according to the Affordability Calculation Rule",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.sheCanCaptureADesiredCreditLimitWithinTheRangeCalculatedAccordingToTheAffordabilityCalculationRule()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 18,
            "name": "@android_wip"
          },
          {
            "line": 19,
            "name": "@ios_wip"
          },
          {
            "line": 20,
            "name": "@service_wip"
          },
          {
            "line": 21,
            "name": "@dev"
          }
        ]
      },
      {
        "line": 33,
        "name": "Income less than expenses",
        "description": "",
        "id": "enter-income-and-expenses;income-less-than-expenses",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 65680304,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 55073424,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICIwZDAzNjY2OS04N2RkLTRhNWUtYTU5YS02ZmYwOWIxZTJjYTUiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvYXRtcy93ZWJTZXJ2aWNlL2F0bWh0cDAxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9sZXNzX3RoYW5fZXhwZW5zZXMvLipHYXZpbiIKICAgICAgfQogICAgfSwKICAgICJib2R5UGF0dGVybnMiIDogWyB7CiAgICAgICJjb250YWlucyIgOiAiR0VUQ0FSRFMiCiAgICB9IF0KICB9LAogICJyZXNwb25zZSIgOiB7CiAgICAic3RhdHVzIiA6IDIwMCwKICAgICJib2R5IiA6ICI8U09BUC1FTlY6RW52ZWxvcGUgeG1sbnM6c29hcD1cImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvXCJcbiAgICAgICAgICAgICAgICAgICB4bWxuczpTT0FQLUVOVj1cImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvXCI+XG4gIDxTT0FQLUVOVjpCb2R5PlxuICAgIDxBVE1IVFAwMU9wZXJhdGlvblJlc3BvbnNlIHhtbG5zPVwiaHR0cDovL3d3dy5BVE1IVFAwMS5BVE1SRVAwMS5SZXNwb25zZS5jb21cIj5cbiAgICAgIDxycDAxX3JlYz5cbiAgICAgICAgPHJwMDFfZnVuYz5HRVRDQVJEUzwvcnAwMV9mdW5jPlxuICAgICAgICA8cnAwMV91c2VyaWQ+PC9ycDAxX3VzZXJpZD5cbiAgICAgICAgPHJwMDFfaWJ0PjA8L3JwMDFfaWJ0PlxuICAgICAgICA8cnAwMV9icGlkPjUzMTQxMTQ2NDwvcnAwMV9icGlkPlxuICAgICAgICA8cnAwMV9jYXJkbnVtPjA8L3JwMDFfY2FyZG51bT5cbiAgICAgICAgPHJwMDFfYWNjdG51bT4wPC9ycDAxX2FjY3RudW0+XG4gICAgICAgIDxycDAxX2NoZ19saW0+MC4wMDwvcnAwMV9jaGdfbGltPlxuICAgICAgICA8cnAwMV9jaGdfbm9jYXJkPjwvcnAwMV9jaGdfbm9jYXJkPlxuICAgICAgICA8cnAwMV9jaGdfYXRtPjwvcnAwMV9jaGdfYXRtPlxuICAgICAgICA8cnAwMV9jaGdfcG9zPjwvcnAwMV9jaGdfcG9zPlxuICAgICAgICA8cnAwMV9jaGdfZm9yZWlnbj48L3JwMDFfY2hnX2ZvcmVpZ24+XG4gICAgICAgIDxycDAxX2NoZ19hbnlfdHJhbj48L3JwMDFfY2hnX2FueV90cmFuPlxuICAgICAgICA8cnAwMV9jaGdfaG90Y2FyZD48L3JwMDFfY2hnX2hvdGNhcmQ+XG4gICAgICAgIDxycDAxX2NoZ19jcHN0YXQ+PC9ycDAxX2NoZ19jcHN0YXQ+XG4gICAgICAgIDxycDAxX2NoZ190bnR0YXQ+PC9ycDAxX2NoZ190bnR0YXQ+XG4gICAgICAgIDxycDAxX3JldF9lcnJvcj4wPC9ycDAxX3JldF9lcnJvcj5cbiAgICAgICAgPHJwMDFfY2FyZF9yZWNvcmQ+XG4gICAgICAgICAgPHJwMDFfY2FyZF9udW0+NTEyMDU1MDMwNjQxMTU1MjwvcnAwMV9jYXJkX251bT5cbiAgICAgICAgICA8cnAwMV9ub2NhcmQ+PC9ycDAxX25vY2FyZD5cbiAgICAgICAgICA8cnAwMV9hdG0+PC9ycDAxX2F0bT5cbiAgICAgICAgICA8cnAwMV9wb3M+PC9ycDAxX3Bvcz5cbiAgICAgICAgICA8cnAwMV9mb3JlaWduPjwvcnAwMV9mb3JlaWduPlxuICAgICAgICAgIDxycDAxX2FueV90cmFuPjwvcnAwMV9hbnlfdHJhbj5cbiAgICAgICAgICA8cnAwMV9ob3RjYXJkPk48L3JwMDFfaG90Y2FyZD5cbiAgICAgICAgICA8cnAwMV9jcHN0YXQ+PC9ycDAxX2Nwc3RhdD5cbiAgICAgICAgICA8cnAwMV90bnR0YXQ+PC9ycDAxX3RudHRhdD5cbiAgICAgICAgICA8cnAwMV9kbHlfd2RybGltPjEwMDAuMDA8L3JwMDFfZGx5X3dkcmxpbT5cbiAgICAgICAgICA8cnAwMV9kbHlfd2RydXNkPjAuMDA8L3JwMDFfZGx5X3dkcnVzZD5cbiAgICAgICAgICA8cnAwMV9tdGhfd2RybGltPjMxMDAwLjAwPC9ycDAxX210aF93ZHJsaW0+XG4gICAgICAgICAgPHJwMDFfbXRoX3dkcnVzZD4wLjAwPC9ycDAxX210aF93ZHJ1c2Q+XG4gICAgICAgICAgPHJwMDFfZGF0X2xhc3R3ZHI+MTkwMC0wMS0wMTwvcnAwMV9kYXRfbGFzdHdkcj5cbiAgICAgICAgICA8cnAwMV9tdGhfZWFwbGltPjAuMDA8L3JwMDFfbXRoX2VhcGxpbT5cbiAgICAgICAgICA8cnAwMV9tdGhfZWFwdXNkPjAuMDA8L3JwMDFfbXRoX2VhcHVzZD5cbiAgICAgICAgICA8cnAwMV9kYXRfbGFzdHBtdD4xOTAwLTAxLTAxPC9ycDAxX2RhdF9sYXN0cG10PlxuICAgICAgICAgIDxycDAxX2Vycl9jYXJkPjA8L3JwMDFfZXJyX2NhcmQ+XG4gICAgICAgICAgPHJwMDFfcHJvZF9udW0+QkFDQTExPC9ycDAxX3Byb2RfbnVtPlxuICAgICAgICAgIDxycDAxX2Jsb2NrX2NvZGU+UEg8L3JwMDFfYmxvY2tfY29kZT5cbiAgICAgICAgICA8cnAwMV9ibG9ja19kYXRlPjIwMTYwODEwPC9ycDAxX2Jsb2NrX2RhdGU+XG4gICAgICAgICAgPHJwMDFfaXNzdWVfZGF0ZT4yMDE2MDMxNjwvcnAwMV9pc3N1ZV9kYXRlPlxuICAgICAgICA8L3JwMDFfY2FyZF9yZWNvcmQ+XG4gICAgICAgIDxycDAxX2NhcmRfcmVjb3JkPlxuICAgICAgICAgIDxycDAxX2NhcmRfbnVtPjUxMjA1NTAzMDY0MTIyMDQ8L3JwMDFfY2FyZF9udW0+XG4gICAgICAgICAgPHJwMDFfbm9jYXJkPjwvcnAwMV9ub2NhcmQ+XG4gICAgICAgICAgPHJwMDFfYXRtPjwvcnAwMV9hdG0+XG4gICAgICAgICAgPHJwMDFfcG9zPjwvcnAwMV9wb3M+XG4gICAgICAgICAgPHJwMDFfZm9yZWlnbj48L3JwMDFfZm9yZWlnbj5cbiAgICAgICAgICA8cnAwMV9hbnlfdHJhbj48L3JwMDFfYW55X3RyYW4+XG4gICAgICAgICAgPHJwMDFfaG90Y2FyZD5OPC9ycDAxX2hvdGNhcmQ+XG4gICAgICAgICAgPHJwMDFfY3BzdGF0PjwvcnAwMV9jcHN0YXQ+XG4gICAgICAgICAgPHJwMDFfdG50dGF0PjwvcnAwMV90bnR0YXQ+XG4gICAgICAgICAgPHJwMDFfZGx5X3dkcmxpbT4xMDAwMC4wMDwvcnAwMV9kbHlfd2RybGltPlxuICAgICAgICAgIDxycDAxX2RseV93ZHJ1c2Q+MC4wMDwvcnAwMV9kbHlfd2RydXNkPlxuICAgICAgICAgIDxycDAxX210aF93ZHJsaW0+MjAwMDAuMDA8L3JwMDFfbXRoX3dkcmxpbT5cbiAgICAgICAgICA8cnAwMV9tdGhfd2RydXNkPjAuMDA8L3JwMDFfbXRoX3dkcnVzZD5cbiAgICAgICAgICA8cnAwMV9kYXRfbGFzdHdkcj4xOTAwLTAxLTAxPC9ycDAxX2RhdF9sYXN0d2RyPlxuICAgICAgICAgIDxycDAxX210aF9lYXBsaW0+MjAwLjAwPC9ycDAxX210aF9lYXBsaW0+XG4gICAgICAgICAgPHJwMDFfbXRoX2VhcHVzZD4wLjAwPC9ycDAxX210aF9lYXB1c2Q+XG4gICAgICAgICAgPHJwMDFfZGF0X2xhc3RwbXQ+MTkwMC0wMS0wMTwvcnAwMV9kYXRfbGFzdHBtdD5cbiAgICAgICAgICA8cnAwMV9lcnJfY2FyZD4wPC9ycDAxX2Vycl9jYXJkPlxuICAgICAgICAgIDxycDAxX3Byb2RfbnVtPkJBQ0ExMTwvcnAwMV9wcm9kX251bT5cbiAgICAgICAgICA8cnAwMV9ibG9ja19jb2RlPlBIPC9ycDAxX2Jsb2NrX2NvZGU+XG4gICAgICAgICAgPHJwMDFfYmxvY2tfZGF0ZT4yMDE2MDgxMTwvcnAwMV9ibG9ja19kYXRlPlxuICAgICAgICAgIDxycDAxX2lzc3VlX2RhdGU+MjAxNjAzMTY8L3JwMDFfaXNzdWVfZGF0ZT5cbiAgICAgICAgPC9ycDAxX2NhcmRfcmVjb3JkPlxuICAgICAgPC9ycDAxX3JlYz5cbiAgICA8L0FUTUhUUDAxT3BlcmF0aW9uUmVzcG9uc2U+XG4gIDwvU09BUC1FTlY6Qm9keT5cbjwvU09BUC1FTlY6RW52ZWxvcGU+IiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIkNvbnRlbnQtVHlwZSIgOiAidGV4dC94bWwiCiAgICB9CiAgfSwKICAidXVpZCIgOiAiMGQwMzY2NjktODdkZC00YTVlLWE1OWEtNmZmMDliMWUyY2E1IiwKICAicHJpb3JpdHkiIDogNzMKfSBd",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 15435388,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.atm_index.api.endpoint\" to return the file \"../../../get_cards.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.atm_index.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../../../get_cards.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICIzZDE3YzFjYy01NWNmLTQ1ZGItODhjNS1hMzg3NmQ1ODgwYmMiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy92MS8uKiIsCiAgICAibWV0aG9kIiA6ICJQVVQiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9sZXNzX3RoYW5fZXhwZW5zZXMvLipHYXZpbiIKICAgICAgfQogICAgfQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgImJvZHkiIDogIntcbiAgXCJMaW1pdF9kZXRhaWxzXCI6IHtcbiAgICBcIkxpbWl0X3N0YXR1c1wiOiBcIkRcIixcbiAgICBcIkxpbWl0X2Ftb3VudFwiOiAxMjM0NSxcbiAgICBcIkxpbWl0X0NsaWVudF9FeHBlbnNlc1wiOiA0MzIxLFxuICAgIFwiTGltaXRfQ2xpZW50X0dyb3NzX0luY29tZVwiOiAyMTMxXG4gIH1cbn0iLAogICAgImhlYWRlcnMiIDogewogICAgICAiQ29udGVudC1UeXBlIiA6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogIH0sCiAgInV1aWQiIDogIjNkMTdjMWNjLTU1Y2YtNDVkYi04OGM1LWEzODc2ZDU4ODBiYyIsCiAgInByaW9yaXR5IiA6IDczCn0gXQ\u003d\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 11779086,
                      "status": "passed"
                    },
                    "name": "a PUT to \"card.cli.api.endpoint\" to return the file \"../update_limits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a PUT to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../update_limits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI2Mjc0Y2I4Yi04NDU2LTQ5MTgtOWRlNy1kYjgyMzMzMGVhNmUiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvc2Evc2VydmljZXMvdGVjaG5pY2FsL2ludGVncmF0aW9uL2ludGVncmF0aW9uL3BzX2dpX3NlY3VyaXR5bWFuYWdlbWVudHYxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9sZXNzX3RoYW5fZXhwZW5zZXMvLipHYXZpbiIKICAgICAgfQogICAgfQogIH0sCiAgInJlc3BvbnNlIiA6IHsKICAgICJzdGF0dXMiIDogMjAwLAogICAgImJvZHkiIDogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PlxuPHNvYXBlbnY6RW52ZWxvcGUgeG1sbnM6aGVhZD1cImh0dHA6Ly9zdGFuZGFyZGJhbmsuY28uemEvc2Evc2VydmljZXMvR2xvYmFsL0lmeFYyXzEvSGVhZGVyVjJfMFwiXG4gICAgICAgICAgICAgICAgICB4bWxuczpzb2FwZW52PVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIj5cbiAgPHNvYXBlbnY6SGVhZGVyLz5cbiAgPHNvYXBlbnY6Qm9keT5cbiAgICA8YmFzZTpHZXRJRE51bWJlclJlc3BvbnNlIHhtbG5zOmhkcj1cImh0dHA6Ly9zdGFuZGFyZGJhbmsuY28uemEvc2Evc2VydmljZXMvR2xvYmFsL0lmeFYyXzEvSGVhZGVyVjJfMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxuczpiYXNlPVwiaHR0cDovL3N0YW5kYXJkYmFuay5jby56YS9zYS9zZXJ2aWNlcy90ZWNobmljYWwvSW50ZWdyYXRpb24vSW50ZWdyYXRpb24vUFNfR0lfU2VjdXJpdHlNYW5hZ2VtZW50VjEvQmFzZVwiPlxuICAgICAgPGhlYWQ6U3RhdHVzPlxuICAgICAgICA8aGVhZDpTdGF0dXNDb2RlPjA8L2hlYWQ6U3RhdHVzQ29kZT5cbiAgICAgICAgPGhlYWQ6U2V2ZXJpdHk+SW5mbzwvaGVhZDpTZXZlcml0eT5cbiAgICAgICAgPGhlYWQ6U3RhdHVzRGVzYz5ZT1VSIFJFUVVFU1QgV0FTIFNVQ0NFU1NGVUxMWSBQUk9DRVNTRUQ8L2hlYWQ6U3RhdHVzRGVzYz5cbiAgICAgIDwvaGVhZDpTdGF0dXM+XG4gICAgICA8aGVhZDpScVVJRD42M2FmOWRkZC1lZWQwLTRlNjQtYjg3Mi01NjU4ODIwY2Y5M2Y8L2hlYWQ6UnFVSUQ+XG4gICAgICA8aGVhZDpNc2dSc0hkcj5cbiAgICAgICAgPGhlYWQ6Q29udGV4dFJzSGRyPlxuICAgICAgICAgIDxoZWFkOlNlcnZlckR0PjIwMTYtMTEtMTZUMDk6MTI6NTQrMDI6MDA8L2hlYWQ6U2VydmVyRHQ+XG4gICAgICAgICAgPGhlYWQ6QnVzaW5lc3NTY29wZVhTQj5HSTwvaGVhZDpCdXNpbmVzc1Njb3BlWFNCPlxuICAgICAgICAgIDxoZWFkOkNvbnRlbnRUeXBlWFNCPlRFWFQvWE1MPC9oZWFkOkNvbnRlbnRUeXBlWFNCPlxuICAgICAgICAgIDxoZWFkOkludGVncmF0aW9uU2VydmVyWFNCPmVzYmRwczAxPC9oZWFkOkludGVncmF0aW9uU2VydmVyWFNCPlxuICAgICAgICAgIDxoZWFkOk1zZ0dyb3VwUmVmZXJlbmNlWFNCPjIxMWQwZjk0LWY4NjQtNDJmYS1hNjZiLWRkZjlkYjY1OTY2MDwvaGVhZDpNc2dHcm91cFJlZmVyZW5jZVhTQj5cbiAgICAgICAgPC9oZWFkOkNvbnRleHRSc0hkcj5cbiAgICAgIDwvaGVhZDpNc2dSc0hkcj5cbiAgICAgIDxiYXNlOklETnVtYmVyUmVzcG9uc2VJbmZvPlxuICAgICAgICA8YmFzZTpWZXJzaW9uRGF0YT5cbiAgICAgICAgICA8YmFzZTpUcmFuY29kZT5WRVRGPC9iYXNlOlRyYW5jb2RlPlxuICAgICAgICAgIDxiYXNlOlZlcnNpb24+MDAwMDA1PC9iYXNlOlZlcnNpb24+XG4gICAgICAgICAgPGJhc2U6VG9rZW4+MTI3LjAuMC4xRzwvYmFzZTpUb2tlbj5cbiAgICAgICAgICA8YmFzZTpDYXJkbm8+MDA1MTIwNTUwMzA2NDEyMjA0PC9iYXNlOkNhcmRubz5cbiAgICAgICAgICA8YmFzZTpDaGFubmVsSWQ+TUFQUDwvYmFzZTpDaGFubmVsSWQ+XG4gICAgICAgICAgPGJhc2U6VXNlcklkPjAwMjY8L2Jhc2U6VXNlcklkPlxuICAgICAgICAgIDxiYXNlOlVzZXJJYnQ+NDU4NjwvYmFzZTpVc2VySWJ0PlxuICAgICAgICAgIDxiYXNlOlJlc3BvbnNlQ29kZT4wMDAwPC9iYXNlOlJlc3BvbnNlQ29kZT5cbiAgICAgICAgPC9iYXNlOlZlcnNpb25EYXRhPlxuICAgICAgICA8YmFzZTpJRE51bWJlcj44MDA3MDg3MjgzMDg4PC9iYXNlOklETnVtYmVyPlxuICAgICAgICA8YmFzZTpCUElEPjUzMTQxMTQ2NDwvYmFzZTpCUElEPlxuICAgICAgICA8YmFzZTpDb21wYW55SUQvPlxuICAgICAgICA8YmFzZTpQYXNzcG9ydE4vPlxuICAgICAgICA8YmFzZTpQcmltYXJ5QWNjb3VudDE+NTEyMDU1MDMwNjQxMjIwNDwvYmFzZTpQcmltYXJ5QWNjb3VudDE+XG4gICAgICAgIDxiYXNlOlByaW1hcnlBY2NvdW50Mj4wMDAwMDAwMDAwMDAwMDAwPC9iYXNlOlByaW1hcnlBY2NvdW50Mj5cbiAgICAgICAgPGJhc2U6VGF4Ti8+XG4gICAgICA8L2Jhc2U6SUROdW1iZXJSZXNwb25zZUluZm8+XG4gICAgPC9iYXNlOkdldElETnVtYmVyUmVzcG9uc2U+XG4gIDwvc29hcGVudjpCb2R5PlxuPC9zb2FwZW52OkVudmVsb3BlPiIsCiAgICAiaGVhZGVycyIgOiB7CiAgICAgICJDb250ZW50LVR5cGUiIDogInRleHQveG1sIgogICAgfQogIH0sCiAgInV1aWQiIDogIjYyNzRjYjhiLTg0NTYtNDkxOC05ZGU3LWRiODIzMzMwZWE2ZSIsCiAgInByaW9yaXR5IiA6IDczCn0gXQ\u003d\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 12493648,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.sbsa.securitymanagement.endpointUrl\" to return the file \"../../../get_id_number.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.sbsa.securitymanagement.endpointUrl\""
                        },
                        {
                          "val": "return the file \"../../../get_id_number.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 34,
            "name": "that Gavin has selected to apply for a credit limit increase",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.theUserHasSelectedToApplyForACreditLimitIncrease()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32663563,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 29169428,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICIxZWFlZmUzYi0xN2FhLTQ1MWQtYmJiYS0xODdiZDIzYWY4MjUiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy9wcmVsaW1pdHMvdjEvLioiLAogICAgIm1ldGhvZCIgOiAiR0VUIiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiA6IHsKICAgICAgICAibWF0Y2hlcyIgOiAiMTcyLjk5LjAuNS84MDgwL1NlcnZpY2VBY2NlcHRhbmNlLzQvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9JbmNvbWVfbGVzc190aGFuX2V4cGVuc2VzLy4qR2F2aW4iCiAgICAgIH0KICAgIH0KICB9LAogICJyZXNwb25zZSIgOiB7CiAgICAic3RhdHVzIiA6IDIwMCwKICAgICJib2R5IiA6ICJ7XCJQcmVMaW1pdF9kZXRhaWxzXCI6IHtcbiAgXCJQcmVMaW1pdF9QcmltYXJ5X0NhcmRfTnVtYmVyXCI6IFwiNTEyMDU1MDMwNjQxMjIwNFwiLFxuICBcIlByZUxpbWl0X0JhbGFuY2VcIjogXCIyNS43MFwiLFxuICBcIlByZUxpbWl0X0N1cnJlbnRfQ3JlZGl0X0xpbWl0XCI6IFwiMTAwMDAwXCIsXG4gIFwiUHJlTGltaXRfRXN0aW1hdGVkX0dyb3NzX0luY29tZVwiOiBcIjEwMDAwMFwiLFxuICBcIlByZUxpbWl0X0J1cmVhdV9Db21tXCI6IDQ1NixcbiAgXCJQcmVMaW1pdF9Fc3RpbWF0ZWRfRXhwZW5zZXNcIjogXCI2MDAwMFwiLFxuICBcIlByZUxpbWl0X0VzdGltYXRlZF9TdXJwbHVzXCI6IFwiNDUuODdcIixcbiAgXCJQcmVMaW1pdF9Fc3RpbWF0ZWRfQWZmX0xpbWl0XCI6IFwiMzAwMC44OFwiLFxuICBcIlByZUxpbWl0X01heF9SaXNrX0xpbWl0X0luY3JlYXNlXCI6IFwiNTAwMDBcIixcbiAgXCJQcmVMaW1pdF9Nb250aGx5X1NlcnZpY2VfRmVlXCI6IFwiMjMuMjNcIixcbiAgXCJQcmVMaW1pdF9FZmZfSW50ZXJlc3RfUmF0ZVwiOiBcIjE4LjQ1XCIsXG4gIFwiUHJlTGltaXRfSW5zdXJhbmNlX09uX0FjY291bnRcIjogXCJZRVNcIixcbiAgXCJQcmVMaW1pdF9JbnN1cmFuY2VfTW9udGhseV9GZWVcIjogXCI0NS40NVwiLFxuICBcIlByZUxpbWl0X0luc3VyYW5jZV9SYXRlXCI6IFwiMjMuNTRcIixcbiAgXCJQcmVMaW1pdF9MZWFkX0V4cGlyeVwiOiAyMDE3MDMxNSxcbiAgXCJQcmVMaW1pdF9QRFwiOiBcIjMuNzhcIixcbiAgXCJQcmVMaW1pdF9BZmZvcmRhYmlsaXR5X0ZhY3RvclwiOiBcIjQuODdcIlxufX0iLAogICAgImhlYWRlcnMiIDogewogICAgICAiQ29udGVudC1UeXBlIiA6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogIH0sCiAgInV1aWQiIDogIjFlYWVmZTNiLTE3YWEtNDUxZC1iYmJhLTE4N2JkMjNhZjgyNSIsCiAgInByaW9yaXR5IiA6IDczCn0gXQ\u003d\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 19393606,
                      "status": "passed"
                    },
                    "name": "a GET to \"card.cli.api.endpoint\" to merge the template \"../prelimits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a GET to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "merge the template \"../prelimits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "Then for requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then for requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 35,
            "name": "the bank estimates his income to be R100000 and his expenses R60000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 37
                },
                {
                  "val": "60000",
                  "offset": 62
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.theBankEstimatesIncomeToBeRAndHisExpensesR(int,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 383062889,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 361816653,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 353154533,
                      "status": "passed"
                    },
                    "name": "send a POST request to /credit-card-limits/preApproveCreditLimitIncrease with body \u0027{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"467910\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 104000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 105000,\n    \"currency\" : \"R\"\n  }\n}\u0027",
                    "match": {
                      "arguments": [
                        {
                          "val": "/credit-card-limits/preApproveCreditLimitIncrease"
                        },
                        {
                          "val": "{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"467910\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 104000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 105000,\n    \"currency\" : \"R\"\n  }\n}"
                        }
                      ],
                      "location": "PostTask Actor performAs"
                    },
                    "keyword": "performAs"
                  }
                ],
                "name": "When Gavin attempts to ",
                "match": {
                  "arguments": [
                    {
                      "val": "When"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void attemptsTo"
                },
                "keyword": "attemptsTo"
              }
            ],
            "line": 36,
            "name": "he enters an income of R104000 and expenses of R105000",
            "match": {
              "arguments": [
                {
                  "val": "104000",
                  "offset": 24
                },
                {
                  "val": "105000",
                  "offset": 48
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.heEntersAnIncomeOfRAndExpensesOfR(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 111233458,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 72044231,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 7692870,
                      "status": "passed"
                    },
                    "name": "see that the status code is \u003c200\u003e",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 10362588,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-type\" \"SUCCESS\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 5728684,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-code\" \"0000\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              },
              {
                "result": {
                  "duration": 18277415,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 3602175,
                      "status": "passed"
                    },
                    "name": "see that the credit card limit increase status is \u003cDECLINE\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              }
            ],
            "line": 37,
            "name": "he is informed that he does not qualify",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.informTheCustomerThatTheyDoNotQualify()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 44944171,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 39229663,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 11933507,
                      "status": "passed"
                    },
                    "name": "the number of times a GET request was made to \"card.cli.api.endpoint\" is \u003c1\u003e",
                    "match": {
                      "arguments": [
                        {
                          "val": "the number of times a GET request was made to \"card.cli.api.endpoint\" is \u003c1\u003e"
                        }
                      ],
                      "location": " void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "result": {
                      "duration": 13579053,
                      "status": "passed"
                    },
                    "name": "the number of times a PUT request was made to \"card.cli.api.endpoint\" is \u003c1\u003e",
                    "match": {
                      "arguments": [
                        {
                          "val": "the number of times a PUT request was made to \"card.cli.api.endpoint\" is \u003c1\u003e"
                        }
                      ],
                      "location": " void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, verify that ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void verifyThat"
                },
                "keyword": "verifyThat"
              }
            ],
            "line": 38,
            "name": "a decline message is sent to the mainframe",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.sendBackADeclineMessageToMainframe()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 29,
            "name": "@android_wip"
          },
          {
            "line": 30,
            "name": "@ios_wip"
          },
          {
            "line": 31,
            "name": "@service_wip"
          },
          {
            "line": 32,
            "name": "@dev"
          }
        ]
      },
      {
        "line": 45,
        "name": "Income and expenses outside 5 % variance",
        "description": "",
        "id": "enter-income-and-expenses;income-and-expenses-outside-5-%-variance",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 107411496,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 99248020,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI3NmUzZTgzMi02ZWZhLTQ3MzgtYjljMS00YjYwOTA4MmZkZjUiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvYXRtcy93ZWJTZXJ2aWNlL2F0bWh0cDAxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfb3V0c2lkZV81X19wZXJfX3ZhcmlhbmNlLy4qR2F2aW4iCiAgICAgIH0KICAgIH0sCiAgICAiYm9keVBhdHRlcm5zIiA6IFsgewogICAgICAiY29udGFpbnMiIDogIkdFVENBUkRTIgogICAgfSBdCiAgfSwKICAicmVzcG9uc2UiIDogewogICAgInN0YXR1cyIgOiAyMDAsCiAgICAiYm9keSIgOiAiPFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnNvYXA9XCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VudmVsb3BlL1wiXG4gICAgICAgICAgICAgICAgICAgeG1sbnM6U09BUC1FTlY9XCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VudmVsb3BlL1wiPlxuICA8U09BUC1FTlY6Qm9keT5cbiAgICA8QVRNSFRQMDFPcGVyYXRpb25SZXNwb25zZSB4bWxucz1cImh0dHA6Ly93d3cuQVRNSFRQMDEuQVRNUkVQMDEuUmVzcG9uc2UuY29tXCI+XG4gICAgICA8cnAwMV9yZWM+XG4gICAgICAgIDxycDAxX2Z1bmM+R0VUQ0FSRFM8L3JwMDFfZnVuYz5cbiAgICAgICAgPHJwMDFfdXNlcmlkPjwvcnAwMV91c2VyaWQ+XG4gICAgICAgIDxycDAxX2lidD4wPC9ycDAxX2lidD5cbiAgICAgICAgPHJwMDFfYnBpZD41MzE0MTE0NjQ8L3JwMDFfYnBpZD5cbiAgICAgICAgPHJwMDFfY2FyZG51bT4wPC9ycDAxX2NhcmRudW0+XG4gICAgICAgIDxycDAxX2FjY3RudW0+MDwvcnAwMV9hY2N0bnVtPlxuICAgICAgICA8cnAwMV9jaGdfbGltPjAuMDA8L3JwMDFfY2hnX2xpbT5cbiAgICAgICAgPHJwMDFfY2hnX25vY2FyZD48L3JwMDFfY2hnX25vY2FyZD5cbiAgICAgICAgPHJwMDFfY2hnX2F0bT48L3JwMDFfY2hnX2F0bT5cbiAgICAgICAgPHJwMDFfY2hnX3Bvcz48L3JwMDFfY2hnX3Bvcz5cbiAgICAgICAgPHJwMDFfY2hnX2ZvcmVpZ24+PC9ycDAxX2NoZ19mb3JlaWduPlxuICAgICAgICA8cnAwMV9jaGdfYW55X3RyYW4+PC9ycDAxX2NoZ19hbnlfdHJhbj5cbiAgICAgICAgPHJwMDFfY2hnX2hvdGNhcmQ+PC9ycDAxX2NoZ19ob3RjYXJkPlxuICAgICAgICA8cnAwMV9jaGdfY3BzdGF0PjwvcnAwMV9jaGdfY3BzdGF0PlxuICAgICAgICA8cnAwMV9jaGdfdG50dGF0PjwvcnAwMV9jaGdfdG50dGF0PlxuICAgICAgICA8cnAwMV9yZXRfZXJyb3I+MDwvcnAwMV9yZXRfZXJyb3I+XG4gICAgICAgIDxycDAxX2NhcmRfcmVjb3JkPlxuICAgICAgICAgIDxycDAxX2NhcmRfbnVtPjUxMjA1NTAzMDY0MTE1NTI8L3JwMDFfY2FyZF9udW0+XG4gICAgICAgICAgPHJwMDFfbm9jYXJkPjwvcnAwMV9ub2NhcmQ+XG4gICAgICAgICAgPHJwMDFfYXRtPjwvcnAwMV9hdG0+XG4gICAgICAgICAgPHJwMDFfcG9zPjwvcnAwMV9wb3M+XG4gICAgICAgICAgPHJwMDFfZm9yZWlnbj48L3JwMDFfZm9yZWlnbj5cbiAgICAgICAgICA8cnAwMV9hbnlfdHJhbj48L3JwMDFfYW55X3RyYW4+XG4gICAgICAgICAgPHJwMDFfaG90Y2FyZD5OPC9ycDAxX2hvdGNhcmQ+XG4gICAgICAgICAgPHJwMDFfY3BzdGF0PjwvcnAwMV9jcHN0YXQ+XG4gICAgICAgICAgPHJwMDFfdG50dGF0PjwvcnAwMV90bnR0YXQ+XG4gICAgICAgICAgPHJwMDFfZGx5X3dkcmxpbT4xMDAwLjAwPC9ycDAxX2RseV93ZHJsaW0+XG4gICAgICAgICAgPHJwMDFfZGx5X3dkcnVzZD4wLjAwPC9ycDAxX2RseV93ZHJ1c2Q+XG4gICAgICAgICAgPHJwMDFfbXRoX3dkcmxpbT4zMTAwMC4wMDwvcnAwMV9tdGhfd2RybGltPlxuICAgICAgICAgIDxycDAxX210aF93ZHJ1c2Q+MC4wMDwvcnAwMV9tdGhfd2RydXNkPlxuICAgICAgICAgIDxycDAxX2RhdF9sYXN0d2RyPjE5MDAtMDEtMDE8L3JwMDFfZGF0X2xhc3R3ZHI+XG4gICAgICAgICAgPHJwMDFfbXRoX2VhcGxpbT4wLjAwPC9ycDAxX210aF9lYXBsaW0+XG4gICAgICAgICAgPHJwMDFfbXRoX2VhcHVzZD4wLjAwPC9ycDAxX210aF9lYXB1c2Q+XG4gICAgICAgICAgPHJwMDFfZGF0X2xhc3RwbXQ+MTkwMC0wMS0wMTwvcnAwMV9kYXRfbGFzdHBtdD5cbiAgICAgICAgICA8cnAwMV9lcnJfY2FyZD4wPC9ycDAxX2Vycl9jYXJkPlxuICAgICAgICAgIDxycDAxX3Byb2RfbnVtPkJBQ0ExMTwvcnAwMV9wcm9kX251bT5cbiAgICAgICAgICA8cnAwMV9ibG9ja19jb2RlPlBIPC9ycDAxX2Jsb2NrX2NvZGU+XG4gICAgICAgICAgPHJwMDFfYmxvY2tfZGF0ZT4yMDE2MDgxMDwvcnAwMV9ibG9ja19kYXRlPlxuICAgICAgICAgIDxycDAxX2lzc3VlX2RhdGU+MjAxNjAzMTY8L3JwMDFfaXNzdWVfZGF0ZT5cbiAgICAgICAgPC9ycDAxX2NhcmRfcmVjb3JkPlxuICAgICAgICA8cnAwMV9jYXJkX3JlY29yZD5cbiAgICAgICAgICA8cnAwMV9jYXJkX251bT41MTIwNTUwMzA2NDEyMjA0PC9ycDAxX2NhcmRfbnVtPlxuICAgICAgICAgIDxycDAxX25vY2FyZD48L3JwMDFfbm9jYXJkPlxuICAgICAgICAgIDxycDAxX2F0bT48L3JwMDFfYXRtPlxuICAgICAgICAgIDxycDAxX3Bvcz48L3JwMDFfcG9zPlxuICAgICAgICAgIDxycDAxX2ZvcmVpZ24+PC9ycDAxX2ZvcmVpZ24+XG4gICAgICAgICAgPHJwMDFfYW55X3RyYW4+PC9ycDAxX2FueV90cmFuPlxuICAgICAgICAgIDxycDAxX2hvdGNhcmQ+TjwvcnAwMV9ob3RjYXJkPlxuICAgICAgICAgIDxycDAxX2Nwc3RhdD48L3JwMDFfY3BzdGF0PlxuICAgICAgICAgIDxycDAxX3RudHRhdD48L3JwMDFfdG50dGF0PlxuICAgICAgICAgIDxycDAxX2RseV93ZHJsaW0+MTAwMDAuMDA8L3JwMDFfZGx5X3dkcmxpbT5cbiAgICAgICAgICA8cnAwMV9kbHlfd2RydXNkPjAuMDA8L3JwMDFfZGx5X3dkcnVzZD5cbiAgICAgICAgICA8cnAwMV9tdGhfd2RybGltPjIwMDAwLjAwPC9ycDAxX210aF93ZHJsaW0+XG4gICAgICAgICAgPHJwMDFfbXRoX3dkcnVzZD4wLjAwPC9ycDAxX210aF93ZHJ1c2Q+XG4gICAgICAgICAgPHJwMDFfZGF0X2xhc3R3ZHI+MTkwMC0wMS0wMTwvcnAwMV9kYXRfbGFzdHdkcj5cbiAgICAgICAgICA8cnAwMV9tdGhfZWFwbGltPjIwMC4wMDwvcnAwMV9tdGhfZWFwbGltPlxuICAgICAgICAgIDxycDAxX210aF9lYXB1c2Q+MC4wMDwvcnAwMV9tdGhfZWFwdXNkPlxuICAgICAgICAgIDxycDAxX2RhdF9sYXN0cG10PjE5MDAtMDEtMDE8L3JwMDFfZGF0X2xhc3RwbXQ+XG4gICAgICAgICAgPHJwMDFfZXJyX2NhcmQ+MDwvcnAwMV9lcnJfY2FyZD5cbiAgICAgICAgICA8cnAwMV9wcm9kX251bT5CQUNBMTE8L3JwMDFfcHJvZF9udW0+XG4gICAgICAgICAgPHJwMDFfYmxvY2tfY29kZT5QSDwvcnAwMV9ibG9ja19jb2RlPlxuICAgICAgICAgIDxycDAxX2Jsb2NrX2RhdGU+MjAxNjA4MTE8L3JwMDFfYmxvY2tfZGF0ZT5cbiAgICAgICAgICA8cnAwMV9pc3N1ZV9kYXRlPjIwMTYwMzE2PC9ycDAxX2lzc3VlX2RhdGU+XG4gICAgICAgIDwvcnAwMV9jYXJkX3JlY29yZD5cbiAgICAgIDwvcnAwMV9yZWM+XG4gICAgPC9BVE1IVFAwMU9wZXJhdGlvblJlc3BvbnNlPlxuICA8L1NPQVAtRU5WOkJvZHk+XG48L1NPQVAtRU5WOkVudmVsb3BlPiIsCiAgICAiaGVhZGVycyIgOiB7CiAgICAgICJDb250ZW50LVR5cGUiIDogInRleHQveG1sIgogICAgfQogIH0sCiAgInV1aWQiIDogIjc2ZTNlODMyLTZlZmEtNDczOC1iOWMxLTRiNjA5MDgyZmRmNSIsCiAgInByaW9yaXR5IiA6IDczCn0gXQ\u003d\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 28960615,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.atm_index.api.endpoint\" to return the file \"../../../get_cards.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.atm_index.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../../../get_cards.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICJiZjc0ZDNkMS0yZGUzLTQzY2MtYWUxNy1iZjA5NTU4NmFmYjkiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy92MS8uKiIsCiAgICAibWV0aG9kIiA6ICJQVVQiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfb3V0c2lkZV81X19wZXJfX3ZhcmlhbmNlLy4qR2F2aW4iCiAgICAgIH0KICAgIH0KICB9LAogICJyZXNwb25zZSIgOiB7CiAgICAic3RhdHVzIiA6IDIwMCwKICAgICJib2R5IiA6ICJ7XG4gIFwiTGltaXRfZGV0YWlsc1wiOiB7XG4gICAgXCJMaW1pdF9zdGF0dXNcIjogXCJEXCIsXG4gICAgXCJMaW1pdF9hbW91bnRcIjogMTIzNDUsXG4gICAgXCJMaW1pdF9DbGllbnRfRXhwZW5zZXNcIjogNDMyMSxcbiAgICBcIkxpbWl0X0NsaWVudF9Hcm9zc19JbmNvbWVcIjogMjEzMVxuICB9XG59IiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIkNvbnRlbnQtVHlwZSIgOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICB9LAogICJ1dWlkIiA6ICJiZjc0ZDNkMS0yZGUzLTQzY2MtYWUxNy1iZjA5NTU4NmFmYjkiLAogICJwcmlvcml0eSIgOiA3Mwp9IF0\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 20433447,
                      "status": "passed"
                    },
                    "name": "a PUT to \"card.cli.api.endpoint\" to return the file \"../update_limits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a PUT to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "return the file \"../update_limits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICJhYmIxZWRhOS1lMzNjLTRmMjktOTQyYS04NTQ1NTA4ZTBlMzgiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoIiA6ICIvc2Evc2VydmljZXMvdGVjaG5pY2FsL2ludGVncmF0aW9uL2ludGVncmF0aW9uL3BzX2dpX3NlY3VyaXR5bWFuYWdlbWVudHYxIiwKICAgICJtZXRob2QiIDogIlBPU1QiLAogICAgImhlYWRlcnMiIDogewogICAgICAieC1zYmctbWVzc2FnZVRyYWNlSWQiIDogewogICAgICAgICJtYXRjaGVzIiA6ICIxNzIuOTkuMC41LzgwODAvU2VydmljZUFjY2VwdGFuY2UvNC9DcmVkaXRMaW1pdEluY3JlYXNlcy9FbnRlcl9JbmNvbWVfYW5kX0V4cGVuc2VzL0luY29tZV9hbmRfZXhwZW5zZXNfb3V0c2lkZV81X19wZXJfX3ZhcmlhbmNlLy4qR2F2aW4iCiAgICAgIH0KICAgIH0KICB9LAogICJyZXNwb25zZSIgOiB7CiAgICAic3RhdHVzIiA6IDIwMCwKICAgICJib2R5IiA6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz5cbjxzb2FwZW52OkVudmVsb3BlIHhtbG5zOmhlYWQ9XCJodHRwOi8vc3RhbmRhcmRiYW5rLmNvLnphL3NhL3NlcnZpY2VzL0dsb2JhbC9JZnhWMl8xL0hlYWRlclYyXzBcIlxuICAgICAgICAgICAgICAgICAgeG1sbnM6c29hcGVudj1cImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvXCI+XG4gIDxzb2FwZW52OkhlYWRlci8+XG4gIDxzb2FwZW52OkJvZHk+XG4gICAgPGJhc2U6R2V0SUROdW1iZXJSZXNwb25zZSB4bWxuczpoZHI9XCJodHRwOi8vc3RhbmRhcmRiYW5rLmNvLnphL3NhL3NlcnZpY2VzL0dsb2JhbC9JZnhWMl8xL0hlYWRlclYyXzBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM6YmFzZT1cImh0dHA6Ly9zdGFuZGFyZGJhbmsuY28uemEvc2Evc2VydmljZXMvdGVjaG5pY2FsL0ludGVncmF0aW9uL0ludGVncmF0aW9uL1BTX0dJX1NlY3VyaXR5TWFuYWdlbWVudFYxL0Jhc2VcIj5cbiAgICAgIDxoZWFkOlN0YXR1cz5cbiAgICAgICAgPGhlYWQ6U3RhdHVzQ29kZT4wPC9oZWFkOlN0YXR1c0NvZGU+XG4gICAgICAgIDxoZWFkOlNldmVyaXR5PkluZm88L2hlYWQ6U2V2ZXJpdHk+XG4gICAgICAgIDxoZWFkOlN0YXR1c0Rlc2M+WU9VUiBSRVFVRVNUIFdBUyBTVUNDRVNTRlVMTFkgUFJPQ0VTU0VEPC9oZWFkOlN0YXR1c0Rlc2M+XG4gICAgICA8L2hlYWQ6U3RhdHVzPlxuICAgICAgPGhlYWQ6UnFVSUQ+NjNhZjlkZGQtZWVkMC00ZTY0LWI4NzItNTY1ODgyMGNmOTNmPC9oZWFkOlJxVUlEPlxuICAgICAgPGhlYWQ6TXNnUnNIZHI+XG4gICAgICAgIDxoZWFkOkNvbnRleHRSc0hkcj5cbiAgICAgICAgICA8aGVhZDpTZXJ2ZXJEdD4yMDE2LTExLTE2VDA5OjEyOjU0KzAyOjAwPC9oZWFkOlNlcnZlckR0PlxuICAgICAgICAgIDxoZWFkOkJ1c2luZXNzU2NvcGVYU0I+R0k8L2hlYWQ6QnVzaW5lc3NTY29wZVhTQj5cbiAgICAgICAgICA8aGVhZDpDb250ZW50VHlwZVhTQj5URVhUL1hNTDwvaGVhZDpDb250ZW50VHlwZVhTQj5cbiAgICAgICAgICA8aGVhZDpJbnRlZ3JhdGlvblNlcnZlclhTQj5lc2JkcHMwMTwvaGVhZDpJbnRlZ3JhdGlvblNlcnZlclhTQj5cbiAgICAgICAgICA8aGVhZDpNc2dHcm91cFJlZmVyZW5jZVhTQj4yMTFkMGY5NC1mODY0LTQyZmEtYTY2Yi1kZGY5ZGI2NTk2NjA8L2hlYWQ6TXNnR3JvdXBSZWZlcmVuY2VYU0I+XG4gICAgICAgIDwvaGVhZDpDb250ZXh0UnNIZHI+XG4gICAgICA8L2hlYWQ6TXNnUnNIZHI+XG4gICAgICA8YmFzZTpJRE51bWJlclJlc3BvbnNlSW5mbz5cbiAgICAgICAgPGJhc2U6VmVyc2lvbkRhdGE+XG4gICAgICAgICAgPGJhc2U6VHJhbmNvZGU+VkVURjwvYmFzZTpUcmFuY29kZT5cbiAgICAgICAgICA8YmFzZTpWZXJzaW9uPjAwMDAwNTwvYmFzZTpWZXJzaW9uPlxuICAgICAgICAgIDxiYXNlOlRva2VuPjEyNy4wLjAuMUc8L2Jhc2U6VG9rZW4+XG4gICAgICAgICAgPGJhc2U6Q2FyZG5vPjAwNTEyMDU1MDMwNjQxMjIwNDwvYmFzZTpDYXJkbm8+XG4gICAgICAgICAgPGJhc2U6Q2hhbm5lbElkPk1BUFA8L2Jhc2U6Q2hhbm5lbElkPlxuICAgICAgICAgIDxiYXNlOlVzZXJJZD4wMDI2PC9iYXNlOlVzZXJJZD5cbiAgICAgICAgICA8YmFzZTpVc2VySWJ0PjQ1ODY8L2Jhc2U6VXNlcklidD5cbiAgICAgICAgICA8YmFzZTpSZXNwb25zZUNvZGU+MDAwMDwvYmFzZTpSZXNwb25zZUNvZGU+XG4gICAgICAgIDwvYmFzZTpWZXJzaW9uRGF0YT5cbiAgICAgICAgPGJhc2U6SUROdW1iZXI+ODAwNzA4NzI4MzA4ODwvYmFzZTpJRE51bWJlcj5cbiAgICAgICAgPGJhc2U6QlBJRD41MzE0MTE0NjQ8L2Jhc2U6QlBJRD5cbiAgICAgICAgPGJhc2U6Q29tcGFueUlELz5cbiAgICAgICAgPGJhc2U6UGFzc3BvcnROLz5cbiAgICAgICAgPGJhc2U6UHJpbWFyeUFjY291bnQxPjUxMjA1NTAzMDY0MTIyMDQ8L2Jhc2U6UHJpbWFyeUFjY291bnQxPlxuICAgICAgICA8YmFzZTpQcmltYXJ5QWNjb3VudDI+MDAwMDAwMDAwMDAwMDAwMDwvYmFzZTpQcmltYXJ5QWNjb3VudDI+XG4gICAgICAgIDxiYXNlOlRheE4vPlxuICAgICAgPC9iYXNlOklETnVtYmVyUmVzcG9uc2VJbmZvPlxuICAgIDwvYmFzZTpHZXRJRE51bWJlclJlc3BvbnNlPlxuICA8L3NvYXBlbnY6Qm9keT5cbjwvc29hcGVudjpFbnZlbG9wZT4iLAogICAgImhlYWRlcnMiIDogewogICAgICAiQ29udGVudC1UeXBlIiA6ICJ0ZXh0L3htbCIKICAgIH0KICB9LAogICJ1dWlkIiA6ICJhYmIxZWRhOS1lMzNjLTRmMjktOTQyYS04NTQ1NTA4ZTBlMzgiLAogICJwcmlvcml0eSIgOiA3Mwp9IF0\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 31594657,
                      "status": "passed"
                    },
                    "name": "a POST to \"card.sbsa.securitymanagement.endpointUrl\" to return the file \"../../../get_id_number.xml\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a POST to \"card.sbsa.securitymanagement.endpointUrl\""
                        },
                        {
                          "val": "return the file \"../../../get_id_number.xml\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 46,
            "name": "that Gavin has selected to apply for a credit limit increase",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.theUserHasSelectedToApplyForACreditLimitIncrease()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 107109408,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 99565211,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "WyB7CiAgImlkIiA6ICI3OWQ5MDI1OS1hZmRmLTQwODktODZiZS1jOTUyNDhhY2IwYjEiLAogICJyZXF1ZXN0IiA6IHsKICAgICJ1cmxQYXRoUGF0dGVybiIgOiAiL2NhcmQvc2l0MS9jYXJkL2xpbWl0cy9wcmVsaW1pdHMvdjEvLioiLAogICAgIm1ldGhvZCIgOiAiR0VUIiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIngtc2JnLW1lc3NhZ2VUcmFjZUlkIiA6IHsKICAgICAgICAibWF0Y2hlcyIgOiAiMTcyLjk5LjAuNS84MDgwL1NlcnZpY2VBY2NlcHRhbmNlLzQvQ3JlZGl0TGltaXRJbmNyZWFzZXMvRW50ZXJfSW5jb21lX2FuZF9FeHBlbnNlcy9JbmNvbWVfYW5kX2V4cGVuc2VzX291dHNpZGVfNV9fcGVyX192YXJpYW5jZS8uKkdhdmluIgogICAgICB9CiAgICB9CiAgfSwKICAicmVzcG9uc2UiIDogewogICAgInN0YXR1cyIgOiAyMDAsCiAgICAiYm9keSIgOiAie1wiUHJlTGltaXRfZGV0YWlsc1wiOiB7XG4gIFwiUHJlTGltaXRfUHJpbWFyeV9DYXJkX051bWJlclwiOiBcIjUxMjA1NTAzMDY0MTIyMDRcIixcbiAgXCJQcmVMaW1pdF9CYWxhbmNlXCI6IFwiMjUuNzBcIixcbiAgXCJQcmVMaW1pdF9DdXJyZW50X0NyZWRpdF9MaW1pdFwiOiBcIjEwMDAwMFwiLFxuICBcIlByZUxpbWl0X0VzdGltYXRlZF9Hcm9zc19JbmNvbWVcIjogXCIxMDAwMDBcIixcbiAgXCJQcmVMaW1pdF9CdXJlYXVfQ29tbVwiOiA0NTYsXG4gIFwiUHJlTGltaXRfRXN0aW1hdGVkX0V4cGVuc2VzXCI6IFwiNjAwMDBcIixcbiAgXCJQcmVMaW1pdF9Fc3RpbWF0ZWRfU3VycGx1c1wiOiBcIjQ1Ljg3XCIsXG4gIFwiUHJlTGltaXRfRXN0aW1hdGVkX0FmZl9MaW1pdFwiOiBcIjMwMDAuODhcIixcbiAgXCJQcmVMaW1pdF9NYXhfUmlza19MaW1pdF9JbmNyZWFzZVwiOiBcIjUwMDAwXCIsXG4gIFwiUHJlTGltaXRfTW9udGhseV9TZXJ2aWNlX0ZlZVwiOiBcIjIzLjIzXCIsXG4gIFwiUHJlTGltaXRfRWZmX0ludGVyZXN0X1JhdGVcIjogXCIxOC40NVwiLFxuICBcIlByZUxpbWl0X0luc3VyYW5jZV9Pbl9BY2NvdW50XCI6IFwiWUVTXCIsXG4gIFwiUHJlTGltaXRfSW5zdXJhbmNlX01vbnRobHlfRmVlXCI6IFwiNDUuNDVcIixcbiAgXCJQcmVMaW1pdF9JbnN1cmFuY2VfUmF0ZVwiOiBcIjIzLjU0XCIsXG4gIFwiUHJlTGltaXRfTGVhZF9FeHBpcnlcIjogMjAxNzAzMTUsXG4gIFwiUHJlTGltaXRfUERcIjogXCIzLjc4XCIsXG4gIFwiUHJlTGltaXRfQWZmb3JkYWJpbGl0eV9GYWN0b3JcIjogXCI0Ljg3XCJcbn19IiwKICAgICJoZWFkZXJzIiA6IHsKICAgICAgIkNvbnRlbnQtVHlwZSIgOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICB9LAogICJ1dWlkIiA6ICI3OWQ5MDI1OS1hZmRmLTQwODktODZiZS1jOTUyNDhhY2IwYjEiLAogICJwcmlvcml0eSIgOiA3Mwp9IF0\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 88203783,
                      "status": "passed"
                    },
                    "name": "a GET to \"card.cli.api.endpoint\" to merge the template \"../prelimits_success.json\"",
                    "match": {
                      "arguments": [
                        {
                          "val": "a GET to \"card.cli.api.endpoint\""
                        },
                        {
                          "val": "merge the template \"../prelimits_success.json\""
                        }
                      ],
                      "location": "ScreenPlayMappingBuilder void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "Then for requests from Gavin, allow ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then for requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void allow"
                },
                "keyword": "allow"
              }
            ],
            "line": 47,
            "name": "the bank estimates his income to be R100000 and his expenses R60000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 37
                },
                {
                  "val": "60000",
                  "offset": 62
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.theBankEstimatesIncomeToBeRAndHisExpensesR(int,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 533593024,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 518725792,
                  "status": "passed"
                },
                "children": [
                  {
                    "embeddings": [
                      {
                        "data": "\u003d",
                        "mime_type": "application/json"
                      }
                    ],
                    "result": {
                      "duration": 507401445,
                      "status": "passed"
                    },
                    "name": "send a POST request to /credit-card-limits/preApproveCreditLimitIncrease with body \u0027{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"467910\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 106000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 50000,\n    \"currency\" : \"R\"\n  }\n}\u0027",
                    "match": {
                      "arguments": [
                        {
                          "val": "/credit-card-limits/preApproveCreditLimitIncrease"
                        },
                        {
                          "val": "{\n  \"keyValueMetadata\" : [ ],\n  \"stepUp\" : null,\n  \"systemPrincipalIdentifier\" : {\n    \"bankingTerritoryKey\" : null,\n    \"locale\" : null,\n    \"systemPrincipalId\" : \"467910\",\n    \"systemPrincipalKey\" : null\n  },\n  \"card\" : {\n    \"active\" : null,\n    \"cardImageUrl\" : null,\n    \"countryCode\" : null,\n    \"description\" : null,\n    \"helpNumber\" : null,\n    \"internationalTravelEnabled\" : null,\n    \"limitManagementEnabled\" : null,\n    \"number\" : \"5120550306412204\",\n    \"stopCardEnabled\" : null,\n    \"type\" : null,\n    \"viewPinEnabled\" : null\n  },\n  \"grossMonthlyIncome\" : {\n    \"amount\" : 106000,\n    \"currency\" : \"R\"\n  },\n  \"totalMonthlyExpenses\" : {\n    \"amount\" : 50000,\n    \"currency\" : \"R\"\n  }\n}"
                        }
                      ],
                      "location": "PostTask Actor performAs"
                    },
                    "keyword": "performAs"
                  }
                ],
                "name": "When Gavin attempts to ",
                "match": {
                  "arguments": [
                    {
                      "val": "When"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void attemptsTo"
                },
                "keyword": "attemptsTo"
              }
            ],
            "line": 48,
            "name": "he enters an income of R106000 and expenses of R50000",
            "match": {
              "arguments": [
                {
                  "val": "106000",
                  "offset": 24
                },
                {
                  "val": "50000",
                  "offset": 48
                }
              ],
              "location": "EnterIncomeAndExpensesSteps.heEntersAnIncomeOfRAndExpensesOfR(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 117797612,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 62369800,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 5803858,
                      "status": "passed"
                    },
                    "name": "see that the status code is \u003c200\u003e",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 7612494,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-type\" \"SUCCESS\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  },
                  {
                    "result": {
                      "duration": 7883005,
                      "status": "passed"
                    },
                    "name": "see that the header \"x-sbg-response-code\" \"0000\"",
                    "match": {
                      "location": "ResponseConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              },
              {
                "result": {
                  "duration": 25369034,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 3583430,
                      "status": "passed"
                    },
                    "name": "see that CreditCardLimitIncreaseStatus is \u003cVERIFY\u003e",
                    "match": {
                      "location": "QuestionConsequence void evaluateFor"
                    },
                    "keyword": "evaluateFor"
                  }
                ],
                "name": "Then Gavin should ",
                "match": {
                  "arguments": [
                    {
                      "val": "Then"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void should"
                },
                "keyword": "should"
              }
            ],
            "line": 49,
            "name": "he is informed that we need to verify this information",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.informTheCustomerThatWeNeedToVerifyThisInformation()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 55060257,
              "status": "passed"
            },
            "children": [
              {
                "result": {
                  "duration": 46732349,
                  "status": "passed"
                },
                "children": [
                  {
                    "result": {
                      "duration": 12033277,
                      "status": "passed"
                    },
                    "name": "the number of times a GET request was made to \"card.cli.api.endpoint\" is \u003c1\u003e",
                    "match": {
                      "arguments": [
                        {
                          "val": "the number of times a GET request was made to \"card.cli.api.endpoint\" is \u003c1\u003e"
                        }
                      ],
                      "location": " void performOnStage"
                    },
                    "keyword": "performOnStage"
                  },
                  {
                    "result": {
                      "duration": 18139272,
                      "status": "passed"
                    },
                    "name": "the number of times a PUT request was made to \"card.cli.api.endpoint\" is \u003c1\u003e",
                    "match": {
                      "arguments": [
                        {
                          "val": "the number of times a PUT request was made to \"card.cli.api.endpoint\" is \u003c1\u003e"
                        }
                      ],
                      "location": " void performOnStage"
                    },
                    "keyword": "performOnStage"
                  }
                ],
                "name": "For requests from Gavin, verify that ",
                "match": {
                  "arguments": [
                    {
                      "val": "For requests from"
                    },
                    {
                      "val": "Gavin"
                    }
                  ],
                  "location": " void verifyThat"
                },
                "keyword": "verifyThat"
              }
            ],
            "line": 50,
            "name": "a decline message is sent to the mainframe",
            "match": {
              "location": "EnterIncomeAndExpensesSteps.sendBackADeclineMessageToMainframe()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 41,
            "name": "@android_backlog"
          },
          {
            "line": 42,
            "name": "@ios_wip"
          },
          {
            "line": 43,
            "name": "@service_wip"
          },
          {
            "line": 44,
            "name": "@dev"
          }
        ]
      }
    ],
    "name": "Enter Income and Expenses",
    "description": "As a KYC-ed Standard Bank Customer\nI would like to enter my income and expenses\nin order to know what credit limit increase I would qualify for if any",
    "id": "enter-income-and-expenses",
    "keyword": "Feature",
    "uri": "CreditLimitIncreases/EnterIncomeAndExpenses.feature",
    "tags": [
      {
        "line": 1,
        "name": "@service_#PW-54460"
      },
      {
        "line": 2,
        "name": "@android_#PW-54461"
      },
      {
        "line": 3,
        "name": "@cps_#PW-54462"
      }
    ]
  }
]