import net.serenitybdd.cucumber.filterchain.OutputLinkConfig
import net.serenitybdd.cucumber.filterchain.InputLinkConfig
import net.serenitybdd.cucumber.filterchain.publishers.WebDavPublishingStrategy
import net.serenitybdd.cucumber.filterchain.inputs.CucumberImporter
import net.serenitybdd.cucumber.filterchain.outputs.AggregateHtmlOutput
import net.serenitybdd.cucumber.filterchain.outputs.StandardSerenityOutput
import net.serenitybdd.filterchain.gradle.*

import java.nio.file.Paths

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies{
        classpath('net.serenity-bdd:serenity-filterchain-gradle-plugin:0.0.1')
        classpath('net.serenity-bdd:webdav-resource-impl:0.0.1')
        classpath('com.sbg.bdd:serenity-cucumber-adaptor:0.0.1')
    }
}
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'serenityFilterchain'

sourceCompatibility = 1.7

repositories {
    mavenCentral()
}
serenityFilterchain {
    input {
        name='cucumber-android'
        implementationClass=CucumberImporter.name
        sourcePath=Paths.get("/home/ampie/Code/ampie/showcase/android/bdd_resources/output/cucumber.json")
    }
    input {
        name='cucumber-service'
        implementationClass=CucumberImporter.name
        sourcePath=Paths.get("/home/ampie/Code/ampie/showcase/services/wildfly-microservice/output/cucumber.json")
    }
    output {
        name='html1'
        implementationClass = AggregateHtmlOutput.name
        outputDirectory = new File("${projectDir}/output/")
        sources = Arrays.asList('cucumber-service','cucumber-android')
    }
    output {
        name='html2'
        implementationClass = StandardSerenityOutput.name
        outputDirectory = new File("${projectDir}/output/")
        sources = Arrays.asList('cucumber-service','cucumber-android')
    }
    publisher {
        name = 'webdav'
        implementationClass = WebDavPublishingStrategy.name
        destination = 'http://localhost:32123/webdav/'
        properties = new Properties()
        properties.setProperty('username', 'test')
        properties.setProperty('password', 'test')
        sources = Arrays.asList('html2')
    }
}

dependencies {
}
